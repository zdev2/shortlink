{"version":3,"file":"index.esm.js","sources":["../src/RefCountCache.ts","../src/ImageSlicer.ts","../src/ImagePool.ts","../src/LoadImagePlugin.ts","../src/index.ts"],"sourcesContent":["export class RefCountCache<CacheValue, CounterValue> {\n  #cacheStore = new Map<\n    string,\n    { value: CacheValue; counter: Set<CounterValue> }\n  >();\n\n  has(key: string) {\n    return this.#cacheStore.has(key);\n  }\n\n  put(key: string, item: CacheValue, ref: CounterValue) {\n    if (this.#cacheStore.has(key)) {\n      return false;\n    }\n\n    this.#cacheStore.set(key, {\n      value: item,\n      counter: new Set([ref]),\n    });\n\n    return true;\n  }\n\n  get(key: string, ref: CounterValue) {\n    const cacheItem = this.#cacheStore.get(key);\n    if (!cacheItem) {\n      return null;\n    }\n\n    cacheItem.counter.add(ref);\n\n    return cacheItem.value;\n  }\n\n  update(key: string, value: CacheValue, ref: CounterValue) {\n    const cacheItem = this.#cacheStore.get(key);\n    if (!cacheItem) {\n      return false;\n    }\n\n    cacheItem.value = { ...cacheItem.value, ...value };\n    cacheItem.counter.add(ref);\n\n    return true;\n  }\n\n  release(key: string, ref: CounterValue) {\n    const cacheItem = this.#cacheStore.get(key);\n    if (!cacheItem) {\n      return false;\n    }\n\n    cacheItem.counter.delete(ref);\n\n    if (cacheItem.counter.size <= 0) {\n      this.#cacheStore.delete(key);\n    }\n\n    return true;\n  }\n\n  releaseRef(ref: CounterValue) {\n    this.#cacheStore.keys().forEach((key) => {\n      this.release(key, ref);\n    });\n  }\n\n  getSize() {\n    return this.#cacheStore.size;\n  }\n\n  clear() {\n    this.#cacheStore.clear();\n  }\n}\n","const tasks: (() => void)[] = [];\nlet nextFrameTasks: (() => void)[] = [];\n\ninterface API {\n  requestAnimationFrame: typeof requestAnimationFrame;\n  cancelAnimationFrame: typeof cancelAnimationFrame;\n  createCanvas: () => HTMLCanvasElement | OffscreenCanvas;\n}\n\nexport interface SliceResult {\n  tileSize: [number, number];\n  /** [rows, cols] */\n  gridSize: [number, number];\n  /**\n   * @example\n   * ```\n   * [\n   *  // tileY=0\n   *  [tileX=0, tileX=1, ...],\n   *  // tileY=1\n   *  [tileX=0, tileX=1, ...],\n   * ]\n   * ```\n   */\n  tiles: (null | {\n    x: number;\n    y: number;\n    tileX: number;\n    tileY: number;\n    data: HTMLCanvasElement | OffscreenCanvas;\n  })[][];\n}\n\nexport class ImageSlicer {\n  static api: API;\n  static TASK_NUM_PER_FRAME = 10;\n  static rafId: ReturnType<typeof requestAnimationFrame>;\n\n  static stop(api = ImageSlicer.api) {\n    if (ImageSlicer.rafId) {\n      api.cancelAnimationFrame(ImageSlicer.rafId);\n      ImageSlicer.rafId = null;\n    }\n  }\n\n  static executeTask(api = ImageSlicer.api) {\n    if (tasks.length <= 0 && nextFrameTasks.length <= 0) {\n      return;\n    }\n\n    nextFrameTasks.forEach((task) => task());\n    nextFrameTasks = tasks.splice(0, ImageSlicer.TASK_NUM_PER_FRAME);\n\n    ImageSlicer.rafId = api.requestAnimationFrame(() => {\n      ImageSlicer.executeTask(api);\n    });\n  }\n\n  static sliceImage(\n    image: HTMLImageElement,\n    sliceWidth: number,\n    sliceHeight: number,\n    overlap = 0,\n    api = ImageSlicer.api,\n  ) {\n    const imageWidth = image.naturalWidth || image.width;\n    const imageHeight = image.naturalHeight || image.height;\n\n    // 计算步长(考虑重叠区域)\n    const strideW = sliceWidth - overlap;\n    const strideH = sliceHeight - overlap;\n\n    // 计算网格尺寸\n    const gridCols = Math.ceil(imageWidth / strideW);\n    const gridRows = Math.ceil(imageHeight / strideH);\n\n    const result: SliceResult = {\n      tileSize: [sliceWidth, sliceHeight],\n      gridSize: [gridRows, gridCols],\n      tiles: Array(gridRows)\n        .fill(null)\n        .map(() => Array(gridCols).fill(null) as SliceResult['tiles'][number]),\n    };\n\n    // 遍历网格创建切片\n    for (let row = 0; row < gridRows; row++) {\n      for (let col = 0; col < gridCols; col++) {\n        tasks.push(() => {\n          // 计算当前切片的坐标\n          const startX = col * strideW;\n          const startY = row * strideH;\n\n          // 处理最后一列/行的特殊情况\n          const [tempSliceWidth, tempSliceHeight] = [\n            Math.min(sliceWidth, imageWidth - startX),\n            Math.min(sliceHeight, imageHeight - startY),\n          ];\n\n          // 创建切片canvas\n          const sliceCanvas = api.createCanvas();\n          sliceCanvas.width = sliceWidth;\n          sliceCanvas.height = sliceHeight;\n          const sliceCtx = sliceCanvas.getContext('2d');\n\n          // 将图像部分绘制到切片canvas上\n          sliceCtx.drawImage(\n            image,\n            startX,\n            startY,\n            tempSliceWidth,\n            tempSliceHeight,\n            0,\n            0,\n            tempSliceWidth,\n            tempSliceHeight,\n          );\n\n          // 存储切片信息\n          result.tiles[row][col] = {\n            x: startX,\n            y: startY,\n            tileX: col,\n            tileY: row,\n            data: sliceCanvas,\n          };\n        });\n      }\n    }\n\n    ImageSlicer.stop();\n    ImageSlicer.executeTask();\n\n    return result;\n  }\n}\n","import {\n  DisplayObject,\n  GradientType,\n  LinearGradient,\n  Pattern,\n  RadialGradient,\n  Rect,\n  Tuple3Number,\n  UnitType,\n  computeLinearGradient,\n  computeRadialGradient,\n  isBrowser,\n  parseTransform,\n  parsedTransformToMat4,\n  Image,\n  OffscreenCanvasCreator,\n  type CanvasContext,\n  type GlobalRuntime,\n} from '@antv/g-lite';\nimport { isString } from '@antv/util';\nimport { mat4 } from 'gl-matrix';\nimport { RefCountCache } from './RefCountCache';\nimport { type SliceResult, ImageSlicer } from './ImageSlicer';\n\nexport interface ImageCache extends Partial<SliceResult> {\n  img: HTMLImageElement;\n  /** [width, height] */\n  size: [number, number];\n  downSampled?: ImageBitmap | HTMLImageElement;\n  downSamplingRate?: number;\n}\n\nconst IMAGE_CACHE = new RefCountCache<ImageCache, DisplayObject>();\n\nexport type GradientParams = (LinearGradient & RadialGradient) & {\n  width: number;\n  height: number;\n  /**\n   * Top-left corner\n   */\n  min: [number, number];\n  type: GradientType;\n};\n\nexport class ImagePool {\n  static isSupportTile = !!OffscreenCanvasCreator.createCanvas();\n  private imageCache: Record<string, HTMLImageElement> = {};\n  private gradientCache: Record<string, CanvasGradient> = {};\n  private patternCache: Record<string, CanvasPattern> = {};\n\n  constructor(\n    public context: CanvasContext,\n    private runtime: GlobalRuntime,\n  ) {}\n\n  getImageSync(\n    src: Image['attributes']['src'],\n    ref: DisplayObject,\n    callback?: (cache: ImageCache) => void,\n  ): ImageCache | null {\n    const imageSource = isString(src) ? src : src.src;\n\n    if (IMAGE_CACHE.has(imageSource)) {\n      const imageCache = IMAGE_CACHE.get(imageSource, ref);\n\n      if (imageCache.img.complete) {\n        callback?.(imageCache);\n\n        return imageCache;\n      }\n    }\n\n    this.getOrCreateImage(src, ref)\n      .then((cache) => {\n        callback?.(cache);\n      })\n      .catch(() => {\n        //\n      });\n\n    return null;\n  }\n\n  getOrCreateImage(\n    src: Image['attributes']['src'],\n    ref: DisplayObject,\n  ): Promise<ImageCache> {\n    const imageSource = isString(src) ? src : src.src;\n\n    if (!isString(src) && !IMAGE_CACHE.has(imageSource)) {\n      const imageCache: ImageCache = {\n        img: src,\n        size: [src.naturalWidth || src.width, src.naturalHeight || src.height],\n        tileSize: calculateImageTileSize(src),\n      };\n\n      IMAGE_CACHE.put(imageSource, imageCache, ref);\n    }\n\n    if (IMAGE_CACHE.has(imageSource)) {\n      const imageCache = IMAGE_CACHE.get(imageSource, ref);\n\n      if (imageCache.img.complete) {\n        return Promise.resolve(imageCache);\n      }\n\n      return new Promise((resolve, reject) => {\n        imageCache.img.addEventListener('load', () => {\n          imageCache.tileSize = calculateImageTileSize(imageCache.img);\n          resolve(imageCache);\n        });\n\n        imageCache.img.addEventListener('error', (ev) => {\n          reject(ev);\n        });\n      });\n    }\n\n    // @see https://github.com/antvis/g/issues/938\n    const { createImage } = this.context.config;\n\n    return new Promise((resolve, reject) => {\n      let image: HTMLImageElement;\n      if (createImage) {\n        image = createImage(imageSource);\n      } else if (isBrowser) {\n        image = new window.Image();\n      }\n\n      if (image) {\n        const imageCache: ImageCache = {\n          img: image,\n          size: [0, 0],\n          tileSize: calculateImageTileSize(image),\n        };\n\n        IMAGE_CACHE.put(imageSource, imageCache, ref);\n\n        image.onload = () => {\n          imageCache.size = [\n            image.naturalWidth || image.width,\n            image.naturalHeight || image.height,\n          ];\n          imageCache.tileSize = calculateImageTileSize(imageCache.img);\n          resolve(imageCache);\n        };\n        image.onerror = (ev) => {\n          reject(ev);\n        };\n        image.crossOrigin = 'Anonymous';\n        image.src = imageSource;\n      }\n    });\n  }\n\n  async createDownSampledImage(\n    src: Image['attributes']['src'],\n    ref: DisplayObject,\n  ): Promise<ImageCache> {\n    const imageCache = await this.getOrCreateImage(src, ref);\n    if (typeof imageCache.downSamplingRate !== 'undefined') {\n      return imageCache;\n    }\n\n    const { enableLargeImageOptimization } = this.context.config;\n    const { maxDownSampledImageSize = 2048, downSamplingRateThreshold = 0.5 } =\n      typeof enableLargeImageOptimization === 'boolean'\n        ? {}\n        : enableLargeImageOptimization;\n    const createImageBitmapFunc = this.runtime.globalThis\n      .createImageBitmap as typeof createImageBitmap;\n    const [originWidth, originHeight] = imageCache.size;\n    let resizedImage: ImageCache['downSampled'] = imageCache.img;\n    let downSamplingRate = Math.min(\n      (maxDownSampledImageSize + maxDownSampledImageSize) /\n        (originWidth + originHeight),\n      Math.max(0.01, Math.min(downSamplingRateThreshold, 0.5)),\n    );\n\n    let updateCache: ImageCache = {\n      ...imageCache,\n      downSamplingRate,\n    };\n\n    IMAGE_CACHE.update(imageCache.img.src, updateCache, ref);\n\n    if (createImageBitmapFunc) {\n      try {\n        resizedImage = await createImageBitmapFunc(imageCache.img, {\n          resizeWidth: originWidth * downSamplingRate,\n          resizeHeight: originHeight * downSamplingRate,\n        });\n      } catch {\n        downSamplingRate = 1;\n      }\n    } else {\n      downSamplingRate = 1;\n    }\n\n    updateCache = {\n      ...this.getImageSync(src, ref),\n      downSampled: resizedImage,\n      downSamplingRate,\n    };\n\n    IMAGE_CACHE.update(imageCache.img.src, updateCache, ref);\n\n    return updateCache;\n  }\n\n  async createImageTiles(\n    src: Image['attributes']['src'],\n    tiles: [number, number][],\n    ref: DisplayObject,\n  ): Promise<ImageCache> {\n    const imageCache = await this.getOrCreateImage(src, ref);\n    const { requestAnimationFrame, cancelAnimationFrame } =\n      ref.ownerDocument.defaultView;\n\n    ImageSlicer.api = {\n      requestAnimationFrame,\n      cancelAnimationFrame,\n      createCanvas: () => OffscreenCanvasCreator.createCanvas(),\n    };\n\n    const updateCache: ImageCache = {\n      ...imageCache,\n      ...ImageSlicer.sliceImage(\n        imageCache.img,\n        imageCache.tileSize[0],\n        imageCache.tileSize[0],\n      ),\n    };\n\n    IMAGE_CACHE.update(imageCache.img.src, updateCache, ref);\n\n    return updateCache;\n  }\n\n  releaseImage(src: Image['attributes']['src'], ref: DisplayObject) {\n    IMAGE_CACHE.release(isString(src) ? src : src.src, ref);\n  }\n\n  releaseImageRef(ref: DisplayObject) {\n    IMAGE_CACHE.releaseRef(ref);\n  }\n\n  getOrCreatePatternSync(\n    object: DisplayObject,\n    pattern: Pattern,\n    context: CanvasRenderingContext2D,\n    $offscreenCanvas: HTMLCanvasElement,\n    dpr: number,\n    min: Tuple3Number,\n    callback: () => void,\n  ) {\n    const patternKey = this.generatePatternKey(pattern);\n    if (patternKey && this.patternCache[patternKey]) {\n      return this.patternCache[patternKey];\n    }\n\n    const { image, repetition, transform } = pattern;\n    let src: CanvasImageSource;\n    let needScaleWithDPR = false;\n    // Image URL\n    if (isString(image)) {\n      const imageCache = this.getImageSync(image, object, callback);\n      src = imageCache?.img;\n    } else if ($offscreenCanvas) {\n      src = $offscreenCanvas;\n      needScaleWithDPR = true;\n    } else {\n      src = image as CanvasImageSource;\n    }\n\n    // @see https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/createPattern\n    const canvasPattern = src && context.createPattern(src, repetition);\n\n    if (canvasPattern) {\n      let mat: mat4;\n      // @see https://developer.mozilla.org/en-US/docs/Web/API/CanvasPattern/setTransform\n      if (transform) {\n        mat = parsedTransformToMat4(\n          parseTransform(transform),\n          new DisplayObject({}),\n        );\n      } else {\n        mat = mat4.identity(mat4.create());\n      }\n\n      if (needScaleWithDPR) {\n        mat4.scale(mat, mat, [1 / dpr, 1 / dpr, 1]);\n      }\n\n      canvasPattern.setTransform({\n        a: mat[0],\n        b: mat[1],\n        c: mat[4],\n        d: mat[5],\n        e: mat[12] + min[0],\n        f: mat[13] + min[1],\n      });\n    }\n\n    if (patternKey && canvasPattern) {\n      this.patternCache[patternKey] = canvasPattern;\n    }\n\n    return canvasPattern;\n  }\n\n  getOrCreateGradient(\n    params: GradientParams,\n    context: CanvasRenderingContext2D,\n  ) {\n    const key = this.generateGradientKey(params);\n    const { type, steps, min, width, height, angle, cx, cy, size } = params;\n\n    if (this.gradientCache[key]) {\n      return this.gradientCache[key];\n    }\n\n    let gradient: CanvasGradient | null = null;\n    if (type === GradientType.LinearGradient) {\n      const { x1, y1, x2, y2 } = computeLinearGradient(\n        min,\n        width,\n        height,\n        angle,\n      );\n      // @see https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/createLinearGradient\n      gradient = context.createLinearGradient(x1, y1, x2, y2);\n    } else if (type === GradientType.RadialGradient) {\n      const { x, y, r } = computeRadialGradient(\n        min,\n        width,\n        height,\n        cx,\n        cy,\n        size,\n      );\n      // @see https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/createRadialGradient\n      gradient = context.createRadialGradient(x, y, 0, x, y, r);\n    }\n\n    if (gradient) {\n      steps.forEach(({ offset, color }) => {\n        if (offset.unit === UnitType.kPercentage) {\n          gradient?.addColorStop(offset.value / 100, color.toString());\n        }\n      });\n\n      this.gradientCache[key] = gradient;\n    }\n\n    return this.gradientCache[key];\n  }\n\n  private generateGradientKey(params: GradientParams): string {\n    const { type, min, width, height, steps, angle, cx, cy, size } = params;\n    return `gradient-${type}-${angle?.toString() || 0}-${cx?.toString() || 0}-${\n      cy?.toString() || 0\n    }-${size?.toString() || 0}-${min[0]}-${min[1]}-${width}-${height}-${steps\n      .map(({ offset, color }) => `${offset}${color}`)\n      .join('-')}`;\n  }\n\n  private generatePatternKey(pattern: Pattern) {\n    const { image, repetition } = pattern;\n    // only generate cache for Image\n    if (isString(image)) {\n      return `pattern-${image}-${repetition}`;\n    }\n    if ((image as Rect).nodeName === 'rect') {\n      return `pattern-${(image as Rect).entity}-${repetition}`;\n    }\n  }\n}\n\nfunction calculateImageTileSize(img: HTMLImageElement): [number, number] {\n  if (!img.complete) {\n    return [0, 0];\n  }\n\n  const [width, height] = [\n    img.naturalWidth || img.width,\n    img.naturalHeight || img.height,\n  ];\n\n  let tileSize = 256;\n\n  [256, 512].forEach((size) => {\n    const rows = Math.ceil(height / size);\n    const cols = Math.ceil(width / size);\n\n    if (rows * cols < 1e3) {\n      tileSize = size;\n    }\n  });\n\n  return [tileSize, tileSize];\n}\n","import type {\n  FederatedEvent,\n  Image,\n  MutationEvent,\n  RenderingPlugin,\n  RenderingPluginContext,\n} from '@antv/g-lite';\nimport { ElementEvent, Shape } from '@antv/g-lite';\nimport { isString } from '@antv/util';\nimport { ImagePool } from './ImagePool';\n\nexport class LoadImagePlugin implements RenderingPlugin {\n  static tag = 'LoadImage';\n\n  apply(context: RenderingPluginContext & { imagePool: ImagePool }) {\n    const { renderingService, renderingContext, imagePool } = context;\n    const canvas = renderingContext.root.ownerDocument.defaultView;\n\n    const calculateWithAspectRatio = (\n      object: Image,\n      imageWidth: number,\n      imageHeight: number,\n    ) => {\n      const { width, height } = object.parsedStyle;\n      if (width && !height) {\n        object.setAttribute('height', (imageHeight / imageWidth) * width);\n      } else if (!width && height) {\n        object.setAttribute('width', (imageWidth / imageHeight) * height);\n      }\n    };\n\n    const handleMounted = (e: FederatedEvent) => {\n      const object = e.target as Image;\n      const { nodeName, attributes } = object;\n      if (nodeName === Shape.IMAGE) {\n        const { src, keepAspectRatio } = attributes;\n\n        if (isString(src)) {\n          imagePool.getImageSync(src, object, ({ img: { width, height } }) => {\n            if (keepAspectRatio) {\n              calculateWithAspectRatio(object, width, height);\n            }\n\n            // set dirty rectangle flag\n            object.renderable.dirty = true;\n            renderingService.dirtify();\n          });\n        }\n      }\n    };\n\n    const handleAttributeChanged = (e: MutationEvent) => {\n      const object = e.target as Image;\n      const { attrName, prevValue, newValue } = e;\n\n      if (object.nodeName !== Shape.IMAGE || attrName !== 'src') {\n        return;\n      }\n\n      if (prevValue !== newValue) {\n        imagePool.releaseImage(prevValue as Image['attributes']['src'], object);\n      }\n\n      if (isString(newValue)) {\n        imagePool\n          .getOrCreateImage(newValue, object)\n          .then(({ img: { width, height } }) => {\n            if (object.attributes.keepAspectRatio) {\n              calculateWithAspectRatio(object, width, height);\n            }\n\n            // set dirty rectangle flag\n            object.renderable.dirty = true;\n            renderingService.dirtify();\n          })\n          .catch(() => {\n            //\n          });\n      }\n    };\n\n    function handleDestroy(e: FederatedEvent) {\n      const object = e.target as Image;\n\n      if (object.nodeName !== Shape.IMAGE) {\n        return;\n      }\n\n      imagePool.releaseImageRef(object);\n    }\n\n    renderingService.hooks.init.tap(LoadImagePlugin.tag, () => {\n      canvas.addEventListener(ElementEvent.MOUNTED, handleMounted);\n      canvas.addEventListener(\n        ElementEvent.ATTR_MODIFIED,\n        handleAttributeChanged,\n      );\n      canvas.addEventListener(ElementEvent.DESTROY, handleDestroy);\n    });\n\n    renderingService.hooks.destroy.tap(LoadImagePlugin.tag, () => {\n      canvas.removeEventListener(ElementEvent.MOUNTED, handleMounted);\n      canvas.removeEventListener(\n        ElementEvent.ATTR_MODIFIED,\n        handleAttributeChanged,\n      );\n      canvas.removeEventListener(ElementEvent.DESTROY, handleDestroy);\n    });\n  }\n}\n","import { AbstractRendererPlugin, type GlobalRuntime } from '@antv/g-lite';\nimport { ImagePool, type ImageCache } from './ImagePool';\nimport { LoadImagePlugin } from './LoadImagePlugin';\n\nexport { ImagePool, type ImageCache };\n\nexport class Plugin extends AbstractRendererPlugin {\n  name = 'image-loader';\n  init(runtime: GlobalRuntime): void {\n    // @ts-ignore\n    this.context.imagePool = new ImagePool(this.context, runtime);\n    this.addRenderingPlugin(new LoadImagePlugin());\n  }\n  destroy(): void {\n    this.removeAllRenderingPlugins();\n  }\n}\n"],"names":["RefCountCache","_classCallCheck","Object","defineProperty","_cacheStore","writable","value","Map","_createClass","key","has","_classPrivateFieldLooseBase","put","item","ref","set","counter","Set","get","cacheItem","add","update","_objectSpread","release","size","releaseRef","_this","keys","forEach","getSize","clear","tasks","nextFrameTasks","ImageSlicer","stop","api","arguments","length","undefined","rafId","cancelAnimationFrame","executeTask","task","splice","TASK_NUM_PER_FRAME","requestAnimationFrame","sliceImage","image","sliceWidth","sliceHeight","overlap","imageWidth","naturalWidth","width","imageHeight","naturalHeight","height","strideW","strideH","gridCols","Math","ceil","gridRows","result","tileSize","gridSize","tiles","Array","fill","map","_loop","row","_loop2","col","push","startX","startY","_ref","min","tempSliceWidth","tempSliceHeight","sliceCanvas","createCanvas","sliceCtx","getContext","drawImage","x","y","tileX","tileY","data","IMAGE_CACHE","ImagePool","context","runtime","imageCache","gradientCache","patternCache","getImageSync","src","callback","imageSource","isString","img","complete","getOrCreateImage","then","cache","calculateImageTileSize","Promise","resolve","reject","addEventListener","ev","createImage","config","isBrowser","window","Image","onload","onerror","crossOrigin","_createDownSampledImage","_asyncToGenerator","_regeneratorRuntime","mark","_callee","enableLargeImageOptimization","_ref$maxDownSampledIm","maxDownSampledImageSize","_ref$downSamplingRate","downSamplingRateThreshold","createImageBitmapFunc","_imageCache$size","originWidth","originHeight","resizedImage","downSamplingRate","updateCache","wrap","_callee$","_context","prev","next","sent","abrupt","globalThis","createImageBitmap","_slicedToArray","max","resizeWidth","resizeHeight","t0","downSampled","createDownSampledImage","_x","_x2","apply","_createImageTiles","_callee2","_ref$ownerDocument$de","_callee2$","_context2","ownerDocument","defaultView","OffscreenCanvasCreator","createImageTiles","_x3","_x4","_x5","releaseImage","releaseImageRef","getOrCreatePatternSync","object","pattern","$offscreenCanvas","dpr","patternKey","generatePatternKey","repetition","transform","needScaleWithDPR","canvasPattern","createPattern","mat","parsedTransformToMat4","parseTransform","DisplayObject","mat4","identity","create","scale","setTransform","a","b","c","d","e","f","getOrCreateGradient","params","generateGradientKey","type","steps","angle","cx","cy","gradient","GradientType","LinearGradient","_computeLinearGradien","computeLinearGradient","x1","y1","x2","y2","createLinearGradient","RadialGradient","_computeRadialGradien","computeRadialGradient","r","createRadialGradient","_ref2","offset","color","unit","UnitType","kPercentage","_gradient","addColorStop","toString","concat","_ref3","join","nodeName","entity","isSupportTile","rows","cols","LoadImagePlugin","renderingService","renderingContext","imagePool","canvas","root","calculateWithAspectRatio","_object$parsedStyle","parsedStyle","setAttribute","handleMounted","target","attributes","Shape","IMAGE","keepAspectRatio","_ref$img","renderable","dirty","dirtify","handleAttributeChanged","attrName","prevValue","newValue","_ref2$img","handleDestroy","hooks","init","tap","tag","ElementEvent","MOUNTED","ATTR_MODIFIED","DESTROY","destroy","removeEventListener","Plugin","_AbstractRendererPlug","_len","args","_key","_callSuper","name","_inherits","addRenderingPlugin","removeAllRenderingPlugins","AbstractRendererPlugin"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAaA,aAAa,gBAAA,YAAA;AAAA,EAAA,SAAAA,aAAA,GAAA;AAAAC,IAAAA,eAAA,OAAAD,aAAA,CAAA,CAAA;IAAAE,MAAA,CAAAC,cAAA,CAAA,IAAA,EAAAC,WAAA,EAAA;MAAAC,QAAA,EAAA,IAAA;MAAAC,KAAA,EACV,IAAIC,GAAG,EAGnB;AAAC,KAAA,CAAA,CAAA;AAAA,GAAA;EAAA,OAAAC,YAAA,CAAAR,aAAA,EAAA,CAAA;IAAAS,GAAA,EAAA,KAAA;AAAAH,IAAAA,KAAA,EAEH,SAAAI,GAAGA,CAACD,GAAW,EAAE;MACf,OAAOE,2BAAA,CAAI,IAAA,EAAAP,WAAA,CAAA,CAAAA,WAAA,CAAaM,CAAAA,GAAG,CAACD,GAAG,CAAC,CAAA;AAClC,KAAA;AAAC,GAAA,EAAA;IAAAA,GAAA,EAAA,KAAA;IAAAH,KAAA,EAED,SAAAM,GAAGA,CAACH,GAAW,EAAEI,IAAgB,EAAEC,GAAiB,EAAE;MACpD,IAAIH,2BAAA,CAAI,IAAA,EAAAP,WAAA,CAAA,CAAAA,WAAA,CAAA,CAAaM,GAAG,CAACD,GAAG,CAAC,EAAE;AAC7B,QAAA,OAAO,KAAK,CAAA;AACd,OAAA;MAEAE,2BAAA,CAAA,IAAI,EAAAP,WAAA,CAAA,CAAAA,WAAA,CAAaW,CAAAA,GAAG,CAACN,GAAG,EAAE;AACxBH,QAAAA,KAAK,EAAEO,IAAI;AACXG,QAAAA,OAAO,EAAE,IAAIC,GAAG,CAAC,CAACH,GAAG,CAAC,CAAA;AACxB,OAAC,CAAC,CAAA;AAEF,MAAA,OAAO,IAAI,CAAA;AACb,KAAA;AAAC,GAAA,EAAA;IAAAL,GAAA,EAAA,KAAA;AAAAH,IAAAA,KAAA,EAED,SAAAY,GAAGA,CAACT,GAAW,EAAEK,GAAiB,EAAE;AAClC,MAAA,IAAMK,SAAS,GAAGR,2BAAA,CAAA,IAAI,EAAAP,WAAA,CAAAA,CAAAA,WAAA,CAAac,CAAAA,GAAG,CAACT,GAAG,CAAC,CAAA;MAC3C,IAAI,CAACU,SAAS,EAAE;AACd,QAAA,OAAO,IAAI,CAAA;AACb,OAAA;AAEAA,MAAAA,SAAS,CAACH,OAAO,CAACI,GAAG,CAACN,GAAG,CAAC,CAAA;MAE1B,OAAOK,SAAS,CAACb,KAAK,CAAA;AACxB,KAAA;AAAC,GAAA,EAAA;IAAAG,GAAA,EAAA,QAAA;IAAAH,KAAA,EAED,SAAAe,MAAMA,CAACZ,GAAW,EAAEH,KAAiB,EAAEQ,GAAiB,EAAE;AACxD,MAAA,IAAMK,SAAS,GAAGR,2BAAA,CAAA,IAAI,EAAAP,WAAA,CAAAA,CAAAA,WAAA,CAAac,CAAAA,GAAG,CAACT,GAAG,CAAC,CAAA;MAC3C,IAAI,CAACU,SAAS,EAAE;AACd,QAAA,OAAO,KAAK,CAAA;AACd,OAAA;AAEAA,MAAAA,SAAS,CAACb,KAAK,GAAAgB,aAAA,CAAAA,aAAA,CAAQH,EAAAA,EAAAA,SAAS,CAACb,KAAK,CAAKA,EAAAA,KAAK,CAAE,CAAA;AAClDa,MAAAA,SAAS,CAACH,OAAO,CAACI,GAAG,CAACN,GAAG,CAAC,CAAA;AAE1B,MAAA,OAAO,IAAI,CAAA;AACb,KAAA;AAAC,GAAA,EAAA;IAAAL,GAAA,EAAA,SAAA;AAAAH,IAAAA,KAAA,EAED,SAAAiB,OAAOA,CAACd,GAAW,EAAEK,GAAiB,EAAE;AACtC,MAAA,IAAMK,SAAS,GAAGR,2BAAA,CAAA,IAAI,EAAAP,WAAA,CAAAA,CAAAA,WAAA,CAAac,CAAAA,GAAG,CAACT,GAAG,CAAC,CAAA;MAC3C,IAAI,CAACU,SAAS,EAAE;AACd,QAAA,OAAO,KAAK,CAAA;AACd,OAAA;AAEAA,MAAAA,SAAS,CAACH,OAAO,CAAO,QAAA,CAAA,CAACF,GAAG,CAAC,CAAA;AAE7B,MAAA,IAAIK,SAAS,CAACH,OAAO,CAACQ,IAAI,IAAI,CAAC,EAAE;QAC/Bb,2BAAA,CAAA,IAAI,EAAAP,WAAA,CAAA,CAAAA,WAAA,CAAmB,CAAA,QAAA,CAAA,CAACK,GAAG,CAAC,CAAA;AAC9B,OAAA;AAEA,MAAA,OAAO,IAAI,CAAA;AACb,KAAA;AAAC,GAAA,EAAA;IAAAA,GAAA,EAAA,YAAA;AAAAH,IAAAA,KAAA,EAED,SAAAmB,UAAUA,CAACX,GAAiB,EAAE;AAAA,MAAA,IAAAY,KAAA,GAAA,IAAA,CAAA;AAC5Bf,MAAAA,2BAAA,CAAI,IAAA,EAAAP,WAAA,CAAA,CAAAA,WAAA,CAAauB,CAAAA,IAAI,EAAE,CAACC,OAAO,CAAC,UAACnB,GAAG,EAAK;AACvCiB,QAAAA,KAAI,CAACH,OAAO,CAACd,GAAG,EAAEK,GAAG,CAAC,CAAA;AACxB,OAAC,CAAC,CAAA;AACJ,KAAA;AAAC,GAAA,EAAA;IAAAL,GAAA,EAAA,SAAA;AAAAH,IAAAA,KAAA,EAED,SAAAuB,OAAOA,GAAG;AACR,MAAA,OAAOlB,2BAAA,CAAI,IAAA,EAAAP,WAAA,CAAAA,CAAAA,WAAA,EAAaoB,IAAI,CAAA;AAC9B,KAAA;AAAC,GAAA,EAAA;IAAAf,GAAA,EAAA,OAAA;AAAAH,IAAAA,KAAA,EAED,SAAAwB,KAAKA,GAAG;MACNnB,2BAAA,CAAA,IAAI,EAAAP,WAAA,CAAA,CAAAA,WAAA,CAAa0B,CAAAA,KAAK,EAAE,CAAA;AAC1B,KAAA;AAAC,GAAA,CAAA,CAAA,CAAA;AAAA,CAAA,EAAA;;ACzEH,IAAMC,KAAqB,GAAG,EAAE,CAAA;AAChC,IAAIC,cAA8B,GAAG,EAAE,CAAA;AAgCvC,IAAaC,WAAW,gBAAA,YAAA;AAAA,EAAA,SAAAA,WAAA,GAAA;AAAAhC,IAAAA,eAAA,OAAAgC,WAAA,CAAA,CAAA;AAAA,GAAA;EAAA,OAAAzB,YAAA,CAAAyB,WAAA,EAAA,IAAA,EAAA,CAAA;IAAAxB,GAAA,EAAA,MAAA;AAAAH,IAAAA,KAAA,EAKtB,SAAO4B,IAAIA,GAAwB;AAAA,MAAA,IAAvBC,GAAG,GAAAC,SAAA,CAAAC,MAAA,GAAAD,CAAAA,IAAAA,SAAA,CAAAE,CAAAA,CAAAA,KAAAA,SAAA,GAAAF,SAAA,CAAGH,CAAAA,CAAAA,GAAAA,WAAW,CAACE,GAAG,CAAA;MAC/B,IAAIF,WAAW,CAACM,KAAK,EAAE;AACrBJ,QAAAA,GAAG,CAACK,oBAAoB,CAACP,WAAW,CAACM,KAAK,CAAC,CAAA;QAC3CN,WAAW,CAACM,KAAK,GAAG,IAAI,CAAA;AAC1B,OAAA;AACF,KAAA;AAAC,GAAA,EAAA;IAAA9B,GAAA,EAAA,aAAA;AAAAH,IAAAA,KAAA,EAED,SAAOmC,WAAWA,GAAwB;AAAA,MAAA,IAAvBN,GAAG,GAAAC,SAAA,CAAAC,MAAA,GAAAD,CAAAA,IAAAA,SAAA,CAAAE,CAAAA,CAAAA,KAAAA,SAAA,GAAAF,SAAA,CAAGH,CAAAA,CAAAA,GAAAA,WAAW,CAACE,GAAG,CAAA;MACtC,IAAIJ,KAAK,CAACM,MAAM,IAAI,CAAC,IAAIL,cAAc,CAACK,MAAM,IAAI,CAAC,EAAE;AACnD,QAAA,OAAA;AACF,OAAA;AAEAL,MAAAA,cAAc,CAACJ,OAAO,CAAC,UAACc,IAAI,EAAA;QAAA,OAAKA,IAAI,EAAE,CAAA;OAAC,CAAA,CAAA;MACxCV,cAAc,GAAGD,KAAK,CAACY,MAAM,CAAC,CAAC,EAAEV,WAAW,CAACW,kBAAkB,CAAC,CAAA;AAEhEX,MAAAA,WAAW,CAACM,KAAK,GAAGJ,GAAG,CAACU,qBAAqB,CAAC,YAAM;AAClDZ,QAAAA,WAAW,CAACQ,WAAW,CAACN,GAAG,CAAC,CAAA;AAC9B,OAAC,CAAC,CAAA;AACJ,KAAA;AAAC,GAAA,EAAA;IAAA1B,GAAA,EAAA,YAAA;IAAAH,KAAA,EAED,SAAOwC,UAAUA,CACfC,KAAuB,EACvBC,UAAkB,EAClBC,WAAmB,EAGnB;AAAA,MAAA,IAFAC,OAAO,GAAAd,SAAA,CAAAC,MAAA,GAAA,CAAA,IAAAD,SAAA,CAAA,CAAA,CAAA,KAAAE,SAAA,GAAAF,SAAA,CAAA,CAAA,CAAA,GAAG,CAAC,CAAA;AAAA,MAAA,IACXD,GAAG,GAAAC,SAAA,CAAAC,MAAA,GAAAD,CAAAA,IAAAA,SAAA,CAAAE,CAAAA,CAAAA,KAAAA,SAAA,GAAAF,SAAA,CAAGH,CAAAA,CAAAA,GAAAA,WAAW,CAACE,GAAG,CAAA;MAErB,IAAMgB,UAAU,GAAGJ,KAAK,CAACK,YAAY,IAAIL,KAAK,CAACM,KAAK,CAAA;MACpD,IAAMC,WAAW,GAAGP,KAAK,CAACQ,aAAa,IAAIR,KAAK,CAACS,MAAM,CAAA;;AAEvD;AACA,MAAA,IAAMC,OAAO,GAAGT,UAAU,GAAGE,OAAO,CAAA;AACpC,MAAA,IAAMQ,OAAO,GAAGT,WAAW,GAAGC,OAAO,CAAA;;AAErC;MACA,IAAMS,QAAQ,GAAGC,IAAI,CAACC,IAAI,CAACV,UAAU,GAAGM,OAAO,CAAC,CAAA;MAChD,IAAMK,QAAQ,GAAGF,IAAI,CAACC,IAAI,CAACP,WAAW,GAAGI,OAAO,CAAC,CAAA;AAEjD,MAAA,IAAMK,MAAmB,GAAG;AAC1BC,QAAAA,QAAQ,EAAE,CAAChB,UAAU,EAAEC,WAAW,CAAC;AACnCgB,QAAAA,QAAQ,EAAE,CAACH,QAAQ,EAAEH,QAAQ,CAAC;AAC9BO,QAAAA,KAAK,EAAEC,KAAK,CAACL,QAAQ,CAAC,CACnBM,IAAI,CAAC,IAAI,CAAC,CACVC,GAAG,CAAC,YAAA;UAAA,OAAMF,KAAK,CAACR,QAAQ,CAAC,CAACS,IAAI,CAAC,IAAI,CAAC,CAAA;SAAgC,CAAA;OACxE,CAAA;;AAED;AAAA,MAAA,IAAAE,KAAA,GAAA,SAAAA,KAAAC,CAAAA,GAAA,EACyC;AAAA,QAAA,IAAAC,MAAA,GAAA,SAAAA,MAAAC,CAAAA,GAAA,EACE;UACvC1C,KAAK,CAAC2C,IAAI,CAAC,YAAM;AACf;AACA,YAAA,IAAMC,MAAM,GAAGF,GAAG,GAAGhB,OAAO,CAAA;AAC5B,YAAA,IAAMmB,MAAM,GAAGL,GAAG,GAAGb,OAAO,CAAA;;AAE5B;YACA,IAAAmB,IAAA,GAA0C,CACxCjB,IAAI,CAACkB,GAAG,CAAC9B,UAAU,EAAEG,UAAU,GAAGwB,MAAM,CAAC,EACzCf,IAAI,CAACkB,GAAG,CAAC7B,WAAW,EAAEK,WAAW,GAAGsB,MAAM,CAAC,CAC5C;AAHMG,cAAAA,cAAc,GAAAF,IAAA,CAAA,CAAA,CAAA;AAAEG,cAAAA,eAAe,GAAAH,IAAA,CAAA,CAAA,CAAA,CAAA;;AAKtC;AACA,YAAA,IAAMI,WAAW,GAAG9C,GAAG,CAAC+C,YAAY,EAAE,CAAA;YACtCD,WAAW,CAAC5B,KAAK,GAAGL,UAAU,CAAA;YAC9BiC,WAAW,CAACzB,MAAM,GAAGP,WAAW,CAAA;AAChC,YAAA,IAAMkC,QAAQ,GAAGF,WAAW,CAACG,UAAU,CAAC,IAAI,CAAC,CAAA;;AAE7C;YACAD,QAAQ,CAACE,SAAS,CAChBtC,KAAK,EACL4B,MAAM,EACNC,MAAM,EACNG,cAAc,EACdC,eAAe,EACf,CAAC,EACD,CAAC,EACDD,cAAc,EACdC,eACF,CAAC,CAAA;;AAED;YACAjB,MAAM,CAACG,KAAK,CAACK,GAAG,CAAC,CAACE,GAAG,CAAC,GAAG;AACvBa,cAAAA,CAAC,EAAEX,MAAM;AACTY,cAAAA,CAAC,EAAEX,MAAM;AACTY,cAAAA,KAAK,EAAEf,GAAG;AACVgB,cAAAA,KAAK,EAAElB,GAAG;AACVmB,cAAAA,IAAI,EAAET,WAAAA;aACP,CAAA;AACH,WAAC,CAAC,CAAA;SACH,CAAA;QAxCD,KAAK,IAAIR,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAGd,QAAQ,EAAEc,GAAG,EAAE,EAAA;AAAAD,UAAAA,MAAA,CAAAC,GAAA,CAAA,CAAA;AAAA,SAAA;OAyCxC,CAAA;MA1CD,KAAK,IAAIF,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAGT,QAAQ,EAAES,GAAG,EAAE,EAAA;AAAAD,QAAAA,KAAA,CAAAC,GAAA,CAAA,CAAA;AAAA,OAAA;MA4CvCtC,WAAW,CAACC,IAAI,EAAE,CAAA;MAClBD,WAAW,CAACQ,WAAW,EAAE,CAAA;AAEzB,MAAA,OAAOsB,MAAM,CAAA;AACf,KAAA;AAAC,GAAA,CAAA,CAAA,CAAA;AAAA,CAAA,EAAA,CAAA;AApGU9B,WAAW,CAEfW,kBAAkB,GAAG,EAAE;;ACHhC,IAAM+C,WAAW,GAAG,IAAI3F,aAAa,EAA6B,CAAA;AAYlE,IAAa4F,SAAS,gBAAA,YAAA;AAMpB,EAAA,SAAAA,SACSC,CAAAA,OAAsB,EACrBC,OAAsB,EAC9B;AAAA7F,IAAAA,eAAA,OAAA2F,SAAA,CAAA,CAAA;IAAA,IAPMG,CAAAA,UAAU,GAAqC,EAAE,CAAA;IAAA,IACjDC,CAAAA,aAAa,GAAmC,EAAE,CAAA;IAAA,IAClDC,CAAAA,YAAY,GAAkC,EAAE,CAAA;IAAA,IAG/CJ,CAAAA,OAAsB,GAAtBA,OAAsB,CAAA;IAAA,IACrBC,CAAAA,OAAsB,GAAtBA,OAAsB,CAAA;AAC7B,GAAA;EAAC,OAAAtF,YAAA,CAAAoF,SAAA,EAAA,CAAA;IAAAnF,GAAA,EAAA,cAAA;IAAAH,KAAA,EAEJ,SAAA4F,YAAYA,CACVC,GAA+B,EAC/BrF,GAAkB,EAClBsF,QAAsC,EACnB;MACnB,IAAMC,WAAW,GAAGC,QAAQ,CAACH,GAAG,CAAC,GAAGA,GAAG,GAAGA,GAAG,CAACA,GAAG,CAAA;AAEjD,MAAA,IAAIR,WAAW,CAACjF,GAAG,CAAC2F,WAAW,CAAC,EAAE;QAChC,IAAMN,UAAU,GAAGJ,WAAW,CAACzE,GAAG,CAACmF,WAAW,EAAEvF,GAAG,CAAC,CAAA;AAEpD,QAAA,IAAIiF,UAAU,CAACQ,GAAG,CAACC,QAAQ,EAAE;AAC3BJ,UAAAA,QAAQ,aAARA,QAAQ,KAAA,KAAA,CAAA,IAARA,QAAQ,CAAGL,UAAU,CAAC,CAAA;AAEtB,UAAA,OAAOA,UAAU,CAAA;AACnB,SAAA;AACF,OAAA;AAEA,MAAA,IAAI,CAACU,gBAAgB,CAACN,GAAG,EAAErF,GAAG,CAAC,CAC5B4F,IAAI,CAAC,UAACC,KAAK,EAAK;AACfP,QAAAA,QAAQ,aAARA,QAAQ,KAAA,KAAA,CAAA,IAARA,QAAQ,CAAGO,KAAK,CAAC,CAAA;OAClB,CAAC,CACI,OAAA,CAAA,CAAC,YAAM;AACX;AAAA,OACD,CAAC,CAAA;AAEJ,MAAA,OAAO,IAAI,CAAA;AACb,KAAA;AAAC,GAAA,EAAA;IAAAlG,GAAA,EAAA,kBAAA;AAAAH,IAAAA,KAAA,EAED,SAAAmG,gBAAgBA,CACdN,GAA+B,EAC/BrF,GAAkB,EACG;MACrB,IAAMuF,WAAW,GAAGC,QAAQ,CAACH,GAAG,CAAC,GAAGA,GAAG,GAAGA,GAAG,CAACA,GAAG,CAAA;AAEjD,MAAA,IAAI,CAACG,QAAQ,CAACH,GAAG,CAAC,IAAI,CAACR,WAAW,CAACjF,GAAG,CAAC2F,WAAW,CAAC,EAAE;AACnD,QAAA,IAAMN,UAAsB,GAAG;AAC7BQ,UAAAA,GAAG,EAAEJ,GAAG;AACR3E,UAAAA,IAAI,EAAE,CAAC2E,GAAG,CAAC/C,YAAY,IAAI+C,GAAG,CAAC9C,KAAK,EAAE8C,GAAG,CAAC5C,aAAa,IAAI4C,GAAG,CAAC3C,MAAM,CAAC;UACtEQ,QAAQ,EAAE4C,sBAAsB,CAACT,GAAG,CAAA;SACrC,CAAA;QAEDR,WAAW,CAAC/E,GAAG,CAACyF,WAAW,EAAEN,UAAU,EAAEjF,GAAG,CAAC,CAAA;AAC/C,OAAA;AAEA,MAAA,IAAI6E,WAAW,CAACjF,GAAG,CAAC2F,WAAW,CAAC,EAAE;QAChC,IAAMN,WAAU,GAAGJ,WAAW,CAACzE,GAAG,CAACmF,WAAW,EAAEvF,GAAG,CAAC,CAAA;AAEpD,QAAA,IAAIiF,WAAU,CAACQ,GAAG,CAACC,QAAQ,EAAE;AAC3B,UAAA,OAAOK,OAAO,CAACC,OAAO,CAACf,WAAU,CAAC,CAAA;AACpC,SAAA;AAEA,QAAA,OAAO,IAAIc,OAAO,CAAC,UAACC,OAAO,EAAEC,MAAM,EAAK;AACtChB,UAAAA,WAAU,CAACQ,GAAG,CAACS,gBAAgB,CAAC,MAAM,EAAE,YAAM;YAC5CjB,WAAU,CAAC/B,QAAQ,GAAG4C,sBAAsB,CAACb,WAAU,CAACQ,GAAG,CAAC,CAAA;YAC5DO,OAAO,CAACf,WAAU,CAAC,CAAA;AACrB,WAAC,CAAC,CAAA;UAEFA,WAAU,CAACQ,GAAG,CAACS,gBAAgB,CAAC,OAAO,EAAE,UAACC,EAAE,EAAK;YAC/CF,MAAM,CAACE,EAAE,CAAC,CAAA;AACZ,WAAC,CAAC,CAAA;AACJ,SAAC,CAAC,CAAA;AACJ,OAAA;;AAEA;MACA,IAAQC,WAAW,GAAK,IAAI,CAACrB,OAAO,CAACsB,MAAM,CAAnCD,WAAW,CAAA;AAEnB,MAAA,OAAO,IAAIL,OAAO,CAAC,UAACC,OAAO,EAAEC,MAAM,EAAK;AACtC,QAAA,IAAIhE,KAAuB,CAAA;AAC3B,QAAA,IAAImE,WAAW,EAAE;AACfnE,UAAAA,KAAK,GAAGmE,WAAW,CAACb,WAAW,CAAC,CAAA;SACjC,MAAM,IAAIe,SAAS,EAAE;AACpBrE,UAAAA,KAAK,GAAG,IAAIsE,MAAM,CAACC,KAAK,EAAE,CAAA;AAC5B,SAAA;AAEA,QAAA,IAAIvE,KAAK,EAAE;AACT,UAAA,IAAMgD,YAAsB,GAAG;AAC7BQ,YAAAA,GAAG,EAAExD,KAAK;AACVvB,YAAAA,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;YACZwC,QAAQ,EAAE4C,sBAAsB,CAAC7D,KAAK,CAAA;WACvC,CAAA;UAED4C,WAAW,CAAC/E,GAAG,CAACyF,WAAW,EAAEN,YAAU,EAAEjF,GAAG,CAAC,CAAA;UAE7CiC,KAAK,CAACwE,MAAM,GAAG,YAAM;AACnBxB,YAAAA,YAAU,CAACvE,IAAI,GAAG,CAChBuB,KAAK,CAACK,YAAY,IAAIL,KAAK,CAACM,KAAK,EACjCN,KAAK,CAACQ,aAAa,IAAIR,KAAK,CAACS,MAAM,CACpC,CAAA;YACDuC,YAAU,CAAC/B,QAAQ,GAAG4C,sBAAsB,CAACb,YAAU,CAACQ,GAAG,CAAC,CAAA;YAC5DO,OAAO,CAACf,YAAU,CAAC,CAAA;WACpB,CAAA;AACDhD,UAAAA,KAAK,CAACyE,OAAO,GAAG,UAACP,EAAE,EAAK;YACtBF,MAAM,CAACE,EAAE,CAAC,CAAA;WACX,CAAA;UACDlE,KAAK,CAAC0E,WAAW,GAAG,WAAW,CAAA;UAC/B1E,KAAK,CAACoD,GAAG,GAAGE,WAAW,CAAA;AACzB,SAAA;AACF,OAAC,CAAC,CAAA;AACJ,KAAA;AAAC,GAAA,EAAA;IAAA5F,GAAA,EAAA,wBAAA;IAAAH,KAAA,EAAA,YAAA;AAAA,MAAA,IAAAoH,uBAAA,GAAAC,iBAAA,cAAAC,mBAAA,EAAA,CAAAC,IAAA,CAED,SAAAC,OAAAA,CACE3B,GAA+B,EAC/BrF,GAAkB,EAAA;QAAA,IAAAiF,UAAA,EAAAgC,4BAAA,EAAAlD,IAAA,EAAAmD,qBAAA,EAAAC,uBAAA,EAAAC,qBAAA,EAAAC,yBAAA,EAAAC,qBAAA,EAAAC,gBAAA,EAAAC,WAAA,EAAAC,YAAA,EAAAC,YAAA,EAAAC,gBAAA,EAAAC,WAAA,CAAA;AAAA,QAAA,OAAAd,mBAAA,EAAA,CAAAe,IAAA,CAAA,SAAAC,SAAAC,QAAA,EAAA;AAAA,UAAA,OAAA,CAAA,EAAA,QAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;AAAA,YAAA,KAAA,CAAA;AAAAF,cAAAA,QAAA,CAAAE,IAAA,GAAA,CAAA,CAAA;AAAA,cAAA,OAEO,IAAI,CAACtC,gBAAgB,CAACN,GAAG,EAAErF,GAAG,CAAC,CAAA;AAAA,YAAA,KAAA,CAAA;cAAlDiF,UAAU,GAAA8C,QAAA,CAAAG,IAAA,CAAA;AAAA,cAAA,IAAA,EACZ,OAAOjD,UAAU,CAAC0C,gBAAgB,KAAK,WAAW,CAAA,EAAA;AAAAI,gBAAAA,QAAA,CAAAE,IAAA,GAAA,CAAA,CAAA;AAAA,gBAAA,MAAA;AAAA,eAAA;AAAA,cAAA,OAAAF,QAAA,CAAAI,MAAA,CAAA,QAAA,EAC7ClD,UAAU,CAAA,CAAA;AAAA,YAAA,KAAA,CAAA;AAGXgC,cAAAA,4BAA4B,GAAK,IAAI,CAAClC,OAAO,CAACsB,MAAM,CAApDY,4BAA4B,CAAA;AAAAlD,cAAAA,IAAA,GAElC,OAAOkD,4BAA4B,KAAK,SAAS,GAC7C,EAAE,GACFA,4BAA4B,EAAAC,qBAAA,GAAAnD,IAAA,CAH1BoD,uBAAuB,EAAvBA,uBAAuB,GAAAD,qBAAA,cAAG,IAAI,GAAAA,qBAAA,EAAAE,qBAAA,GAAArD,IAAA,CAAEsD,yBAAyB,EAAzBA,yBAAyB,GAAAD,qBAAA,KAAG,KAAA,CAAA,GAAA,GAAG,GAAAA,qBAAA,CAAA;AAIjEE,cAAAA,qBAAqB,GAAG,IAAI,CAACtC,OAAO,CAACoD,UAAU,CAClDC,iBAAiB,CAAA;AAAAd,cAAAA,gBAAA,GAAAe,cAAA,CACgBrD,UAAU,CAACvE,IAAI,EAA5C8G,CAAAA,CAAAA,EAAAA,WAAW,GAAAD,gBAAA,CAAEE,CAAAA,CAAAA,EAAAA,YAAY,GAAAF,gBAAA,CAAA,CAAA,CAAA,CAAA;cAC5BG,YAAuC,GAAGzC,UAAU,CAACQ,GAAG,CAAA;AACxDkC,cAAAA,gBAAgB,GAAG7E,IAAI,CAACkB,GAAG,CAC7B,CAACmD,uBAAuB,GAAGA,uBAAuB,KAC/CK,WAAW,GAAGC,YAAY,CAAC,EAC9B3E,IAAI,CAACyF,GAAG,CAAC,IAAI,EAAEzF,IAAI,CAACkB,GAAG,CAACqD,yBAAyB,EAAE,GAAG,CAAC,CACzD,CAAC,CAAA;AAEGO,cAAAA,WAAuB,GAAApH,aAAA,CAAAA,aAAA,KACtByE,UAAU,CAAA,EAAA,EAAA,EAAA;AACb0C,gBAAAA,gBAAgB,EAAhBA,gBAAAA;AAAgB,eAAA,CAAA,CAAA;AAGlB9C,cAAAA,WAAW,CAACtE,MAAM,CAAC0E,UAAU,CAACQ,GAAG,CAACJ,GAAG,EAAEuC,WAAW,EAAE5H,GAAG,CAAC,CAAA;AAAC,cAAA,IAAA,CAErDsH,qBAAqB,EAAA;AAAAS,gBAAAA,QAAA,CAAAE,IAAA,GAAA,EAAA,CAAA;AAAA,gBAAA,MAAA;AAAA,eAAA;AAAAF,cAAAA,QAAA,CAAAC,IAAA,GAAA,EAAA,CAAA;AAAAD,cAAAA,QAAA,CAAAE,IAAA,GAAA,EAAA,CAAA;AAAA,cAAA,OAEAX,qBAAqB,CAACrC,UAAU,CAACQ,GAAG,EAAE;gBACzD+C,WAAW,EAAEhB,WAAW,GAAGG,gBAAgB;gBAC3Cc,YAAY,EAAEhB,YAAY,GAAGE,gBAAAA;AAC/B,eAAC,CAAC,CAAA;AAAA,YAAA,KAAA,EAAA;cAHFD,YAAY,GAAAK,QAAA,CAAAG,IAAA,CAAA;AAAAH,cAAAA,QAAA,CAAAE,IAAA,GAAA,EAAA,CAAA;AAAA,cAAA,MAAA;AAAA,YAAA,KAAA,EAAA;AAAAF,cAAAA,QAAA,CAAAC,IAAA,GAAA,EAAA,CAAA;cAAAD,QAAA,CAAAW,EAAA,GAAAX,QAAA,CAAA,OAAA,CAAA,CAAA,EAAA,CAAA,CAAA;AAKZJ,cAAAA,gBAAgB,GAAG,CAAC,CAAA;AAAC,YAAA,KAAA,EAAA;AAAAI,cAAAA,QAAA,CAAAE,IAAA,GAAA,EAAA,CAAA;AAAA,cAAA,MAAA;AAAA,YAAA,KAAA,EAAA;AAGvBN,cAAAA,gBAAgB,GAAG,CAAC,CAAA;AAAC,YAAA,KAAA,EAAA;AAGvBC,cAAAA,WAAW,GAAApH,aAAA,CAAAA,aAAA,CACN,EAAA,EAAA,IAAI,CAAC4E,YAAY,CAACC,GAAG,EAAErF,GAAG,CAAC,CAAA,EAAA,EAAA,EAAA;AAC9B2I,gBAAAA,WAAW,EAAEjB,YAAY;AACzBC,gBAAAA,gBAAgB,EAAhBA,gBAAAA;eACD,CAAA,CAAA;AAED9C,cAAAA,WAAW,CAACtE,MAAM,CAAC0E,UAAU,CAACQ,GAAG,CAACJ,GAAG,EAAEuC,WAAW,EAAE5H,GAAG,CAAC,CAAA;AAAC,cAAA,OAAA+H,QAAA,CAAAI,MAAA,CAAA,QAAA,EAElDP,WAAW,CAAA,CAAA;AAAA,YAAA,KAAA,EAAA,CAAA;AAAA,YAAA,KAAA,KAAA;cAAA,OAAAG,QAAA,CAAA3G,IAAA,EAAA,CAAA;AAAA,WAAA;AAAA,SAAA,EAAA4F,OAAA,EAAA,IAAA,EAAA,CAAA,CAAA,EAAA,EAAA,EAAA,CAAA,CAAA,CAAA,CAAA;OACnB,CAAA,CAAA,CAAA;AAAA,MAAA,SArDK4B,sBAAsBA,CAAAC,EAAA,EAAAC,GAAA,EAAA;AAAA,QAAA,OAAAlC,uBAAA,CAAAmC,KAAA,CAAA,IAAA,EAAAzH,SAAA,CAAA,CAAA;AAAA,OAAA;AAAA,MAAA,OAAtBsH,sBAAsB,CAAA;AAAA,KAAA,EAAA;AAAA,GAAA,EAAA;IAAAjJ,GAAA,EAAA,kBAAA;IAAAH,KAAA,EAAA,YAAA;AAAA,MAAA,IAAAwJ,iBAAA,GAAAnC,iBAAA,cAAAC,mBAAA,EAAAC,CAAAA,IAAA,CAuD5B,SAAAkC,QACE5D,CAAAA,GAA+B,EAC/BjC,KAAyB,EACzBpD,GAAkB,EAAA;QAAA,IAAAiF,UAAA,EAAAiE,qBAAA,EAAAnH,qBAAA,EAAAL,oBAAA,EAAAkG,WAAA,CAAA;AAAA,QAAA,OAAAd,mBAAA,EAAA,CAAAe,IAAA,CAAA,SAAAsB,UAAAC,SAAA,EAAA;AAAA,UAAA,OAAA,CAAA,EAAA,QAAAA,SAAA,CAAApB,IAAA,GAAAoB,SAAA,CAAAnB,IAAA;AAAA,YAAA,KAAA,CAAA;AAAAmB,cAAAA,SAAA,CAAAnB,IAAA,GAAA,CAAA,CAAA;AAAA,cAAA,OAEO,IAAI,CAACtC,gBAAgB,CAACN,GAAG,EAAErF,GAAG,CAAC,CAAA;AAAA,YAAA,KAAA,CAAA;cAAlDiF,UAAU,GAAAmE,SAAA,CAAAlB,IAAA,CAAA;AAAAgB,cAAAA,qBAAA,GAEdlJ,GAAG,CAACqJ,aAAa,CAACC,WAAW,EADvBvH,qBAAqB,GAAAmH,qBAAA,CAArBnH,qBAAqB,EAAEL,oBAAoB,GAAAwH,qBAAA,CAApBxH,oBAAoB,CAAA;cAGnDP,WAAW,CAACE,GAAG,GAAG;AAChBU,gBAAAA,qBAAqB,EAArBA,qBAAqB;AACrBL,gBAAAA,oBAAoB,EAApBA,oBAAoB;gBACpB0C,YAAY,EAAE,SAAdA,YAAYA,GAAA;AAAA,kBAAA,OAAQmF,sBAAsB,CAACnF,YAAY,EAAE,CAAA;AAAA,iBAAA;eAC1D,CAAA;AAEKwD,cAAAA,WAAuB,GAAApH,aAAA,CAAAA,aAAA,CACxByE,EAAAA,EAAAA,UAAU,CACV9D,EAAAA,WAAW,CAACa,UAAU,CACvBiD,UAAU,CAACQ,GAAG,EACdR,UAAU,CAAC/B,QAAQ,CAAC,CAAC,CAAC,EACtB+B,UAAU,CAAC/B,QAAQ,CAAC,CAAC,CACvB,CAAC,CAAA,CAAA;AAGH2B,cAAAA,WAAW,CAACtE,MAAM,CAAC0E,UAAU,CAACQ,GAAG,CAACJ,GAAG,EAAEuC,WAAW,EAAE5H,GAAG,CAAC,CAAA;AAAC,cAAA,OAAAoJ,SAAA,CAAAjB,MAAA,CAAA,QAAA,EAElDP,WAAW,CAAA,CAAA;AAAA,YAAA,KAAA,CAAA,CAAA;AAAA,YAAA,KAAA,KAAA;cAAA,OAAAwB,SAAA,CAAAhI,IAAA,EAAA,CAAA;AAAA,WAAA;AAAA,SAAA,EAAA6H,QAAA,EAAA,IAAA,CAAA,CAAA;OACnB,CAAA,CAAA,CAAA;AAAA,MAAA,SA3BKO,gBAAgBA,CAAAC,GAAA,EAAAC,GAAA,EAAAC,GAAA,EAAA;AAAA,QAAA,OAAAX,iBAAA,CAAAD,KAAA,CAAA,IAAA,EAAAzH,SAAA,CAAA,CAAA;AAAA,OAAA;AAAA,MAAA,OAAhBkI,gBAAgB,CAAA;AAAA,KAAA,EAAA;AAAA,GAAA,EAAA;IAAA7J,GAAA,EAAA,cAAA;AAAAH,IAAAA,KAAA,EA6BtB,SAAAoK,YAAYA,CAACvE,GAA+B,EAAErF,GAAkB,EAAE;AAChE6E,MAAAA,WAAW,CAACpE,OAAO,CAAC+E,QAAQ,CAACH,GAAG,CAAC,GAAGA,GAAG,GAAGA,GAAG,CAACA,GAAG,EAAErF,GAAG,CAAC,CAAA;AACzD,KAAA;AAAC,GAAA,EAAA;IAAAL,GAAA,EAAA,iBAAA;AAAAH,IAAAA,KAAA,EAED,SAAAqK,eAAeA,CAAC7J,GAAkB,EAAE;AAClC6E,MAAAA,WAAW,CAAClE,UAAU,CAACX,GAAG,CAAC,CAAA;AAC7B,KAAA;AAAC,GAAA,EAAA;IAAAL,GAAA,EAAA,wBAAA;AAAAH,IAAAA,KAAA,EAED,SAAAsK,sBAAsBA,CACpBC,MAAqB,EACrBC,OAAgB,EAChBjF,OAAiC,EACjCkF,gBAAmC,EACnCC,GAAW,EACXlG,GAAiB,EACjBsB,QAAoB,EACpB;AACA,MAAA,IAAM6E,UAAU,GAAG,IAAI,CAACC,kBAAkB,CAACJ,OAAO,CAAC,CAAA;MACnD,IAAIG,UAAU,IAAI,IAAI,CAAChF,YAAY,CAACgF,UAAU,CAAC,EAAE;AAC/C,QAAA,OAAO,IAAI,CAAChF,YAAY,CAACgF,UAAU,CAAC,CAAA;AACtC,OAAA;AAEA,MAAA,IAAQlI,KAAK,GAA4B+H,OAAO,CAAxC/H,KAAK;QAAEoI,UAAU,GAAgBL,OAAO,CAAjCK,UAAU;QAAEC,SAAS,GAAKN,OAAO,CAArBM,SAAS,CAAA;AACpC,MAAA,IAAIjF,GAAsB,CAAA;MAC1B,IAAIkF,gBAAgB,GAAG,KAAK,CAAA;AAC5B;AACA,MAAA,IAAI/E,QAAQ,CAACvD,KAAK,CAAC,EAAE;QACnB,IAAMgD,UAAU,GAAG,IAAI,CAACG,YAAY,CAACnD,KAAK,EAAE8H,MAAM,EAAEzE,QAAQ,CAAC,CAAA;AAC7DD,QAAAA,GAAG,GAAGJ,UAAU,KAAA,IAAA,IAAVA,UAAU,KAAVA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,UAAU,CAAEQ,GAAG,CAAA;OACtB,MAAM,IAAIwE,gBAAgB,EAAE;AAC3B5E,QAAAA,GAAG,GAAG4E,gBAAgB,CAAA;AACtBM,QAAAA,gBAAgB,GAAG,IAAI,CAAA;AACzB,OAAC,MAAM;AACLlF,QAAAA,GAAG,GAAGpD,KAA0B,CAAA;AAClC,OAAA;;AAEA;MACA,IAAMuI,aAAa,GAAGnF,GAAG,IAAIN,OAAO,CAAC0F,aAAa,CAACpF,GAAG,EAAEgF,UAAU,CAAC,CAAA;AAEnE,MAAA,IAAIG,aAAa,EAAE;AACjB,QAAA,IAAIE,GAAS,CAAA;AACb;AACA,QAAA,IAAIJ,SAAS,EAAE;AACbI,UAAAA,GAAG,GAAGC,qBAAqB,CACzBC,cAAc,CAACN,SAAS,CAAC,EACzB,IAAIO,aAAa,CAAC,EAAE,CACtB,CAAC,CAAA;AACH,SAAC,MAAM;UACLH,GAAG,GAAGI,IAAI,CAACC,QAAQ,CAACD,IAAI,CAACE,MAAM,EAAE,CAAC,CAAA;AACpC,SAAA;AAEA,QAAA,IAAIT,gBAAgB,EAAE;AACpBO,UAAAA,IAAI,CAACG,KAAK,CAACP,GAAG,EAAEA,GAAG,EAAE,CAAC,CAAC,GAAGR,GAAG,EAAE,CAAC,GAAGA,GAAG,EAAE,CAAC,CAAC,CAAC,CAAA;AAC7C,SAAA;QAEAM,aAAa,CAACU,YAAY,CAAC;AACzBC,UAAAA,CAAC,EAAET,GAAG,CAAC,CAAC,CAAC;AACTU,UAAAA,CAAC,EAAEV,GAAG,CAAC,CAAC,CAAC;AACTW,UAAAA,CAAC,EAAEX,GAAG,CAAC,CAAC,CAAC;AACTY,UAAAA,CAAC,EAAEZ,GAAG,CAAC,CAAC,CAAC;UACTa,CAAC,EAAEb,GAAG,CAAC,EAAE,CAAC,GAAG1G,GAAG,CAAC,CAAC,CAAC;UACnBwH,CAAC,EAAEd,GAAG,CAAC,EAAE,CAAC,GAAG1G,GAAG,CAAC,CAAC,CAAA;AACpB,SAAC,CAAC,CAAA;AACJ,OAAA;MAEA,IAAImG,UAAU,IAAIK,aAAa,EAAE;AAC/B,QAAA,IAAI,CAACrF,YAAY,CAACgF,UAAU,CAAC,GAAGK,aAAa,CAAA;AAC/C,OAAA;AAEA,MAAA,OAAOA,aAAa,CAAA;AACtB,KAAA;AAAC,GAAA,EAAA;IAAA7K,GAAA,EAAA,qBAAA;AAAAH,IAAAA,KAAA,EAED,SAAAiM,mBAAmBA,CACjBC,MAAsB,EACtB3G,OAAiC,EACjC;AACA,MAAA,IAAMpF,GAAG,GAAG,IAAI,CAACgM,mBAAmB,CAACD,MAAM,CAAC,CAAA;AAC5C,MAAA,IAAQE,IAAI,GAAqDF,MAAM,CAA/DE,IAAI;QAAEC,KAAK,GAA8CH,MAAM,CAAzDG,KAAK;QAAE7H,GAAG,GAAyC0H,MAAM,CAAlD1H,GAAG;QAAEzB,KAAK,GAAkCmJ,MAAM,CAA7CnJ,KAAK;QAAEG,MAAM,GAA0BgJ,MAAM,CAAtChJ,MAAM;QAAEoJ,KAAK,GAAmBJ,MAAM,CAA9BI,KAAK;QAAEC,EAAE,GAAeL,MAAM,CAAvBK,EAAE;QAAEC,EAAE,GAAWN,MAAM,CAAnBM,EAAE;QAAEtL,IAAI,GAAKgL,MAAM,CAAfhL,IAAI,CAAA;AAE5D,MAAA,IAAI,IAAI,CAACwE,aAAa,CAACvF,GAAG,CAAC,EAAE;AAC3B,QAAA,OAAO,IAAI,CAACuF,aAAa,CAACvF,GAAG,CAAC,CAAA;AAChC,OAAA;MAEA,IAAIsM,QAA+B,GAAG,IAAI,CAAA;AAC1C,MAAA,IAAIL,IAAI,KAAKM,YAAY,CAACC,cAAc,EAAE;QACxC,IAAAC,qBAAA,GAA2BC,qBAAqB,CAC9CrI,GAAG,EACHzB,KAAK,EACLG,MAAM,EACNoJ,KACF,CAAC;UALOQ,EAAE,GAAAF,qBAAA,CAAFE,EAAE;UAAEC,EAAE,GAAAH,qBAAA,CAAFG,EAAE;UAAEC,EAAE,GAAAJ,qBAAA,CAAFI,EAAE;UAAEC,EAAE,GAAAL,qBAAA,CAAFK,EAAE,CAAA;AAMtB;AACAR,QAAAA,QAAQ,GAAGlH,OAAO,CAAC2H,oBAAoB,CAACJ,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,CAAC,CAAA;AACzD,OAAC,MAAM,IAAIb,IAAI,KAAKM,YAAY,CAACS,cAAc,EAAE;AAC/C,QAAA,IAAAC,qBAAA,GAAoBC,qBAAqB,CACvC7I,GAAG,EACHzB,KAAK,EACLG,MAAM,EACNqJ,EAAE,EACFC,EAAE,EACFtL,IACF,CAAC;UAPO8D,CAAC,GAAAoI,qBAAA,CAADpI,CAAC;UAAEC,CAAC,GAAAmI,qBAAA,CAADnI,CAAC;UAAEqI,CAAC,GAAAF,qBAAA,CAADE,CAAC,CAAA;AAQf;AACAb,QAAAA,QAAQ,GAAGlH,OAAO,CAACgI,oBAAoB,CAACvI,CAAC,EAAEC,CAAC,EAAE,CAAC,EAAED,CAAC,EAAEC,CAAC,EAAEqI,CAAC,CAAC,CAAA;AAC3D,OAAA;AAEA,MAAA,IAAIb,QAAQ,EAAE;AACZJ,QAAAA,KAAK,CAAC/K,OAAO,CAAC,UAAAkM,KAAA,EAAuB;AAAA,UAAA,IAApBC,MAAM,GAAAD,KAAA,CAANC,MAAM;YAAEC,KAAK,GAAAF,KAAA,CAALE,KAAK,CAAA;AAC5B,UAAA,IAAID,MAAM,CAACE,IAAI,KAAKC,QAAQ,CAACC,WAAW,EAAE;AAAA,YAAA,IAAAC,SAAA,CAAA;YACxC,CAAAA,SAAA,GAAArB,QAAQ,MAAA,IAAA,IAAAqB,SAAA,KAARA,KAAAA,CAAAA,IAAAA,SAAA,CAAUC,YAAY,CAACN,MAAM,CAACzN,KAAK,GAAG,GAAG,EAAE0N,KAAK,CAACM,QAAQ,EAAE,CAAC,CAAA;AAC9D,WAAA;AACF,SAAC,CAAC,CAAA;AAEF,QAAA,IAAI,CAACtI,aAAa,CAACvF,GAAG,CAAC,GAAGsM,QAAQ,CAAA;AACpC,OAAA;AAEA,MAAA,OAAO,IAAI,CAAC/G,aAAa,CAACvF,GAAG,CAAC,CAAA;AAChC,KAAA;AAAC,GAAA,EAAA;IAAAA,GAAA,EAAA,qBAAA;AAAAH,IAAAA,KAAA,EAED,SAAQmM,mBAAmBA,CAACD,MAAsB,EAAU;AAC1D,MAAA,IAAQE,IAAI,GAAqDF,MAAM,CAA/DE,IAAI;QAAE5H,GAAG,GAAgD0H,MAAM,CAAzD1H,GAAG;QAAEzB,KAAK,GAAyCmJ,MAAM,CAApDnJ,KAAK;QAAEG,MAAM,GAAiCgJ,MAAM,CAA7ChJ,MAAM;QAAEmJ,KAAK,GAA0BH,MAAM,CAArCG,KAAK;QAAEC,KAAK,GAAmBJ,MAAM,CAA9BI,KAAK;QAAEC,EAAE,GAAeL,MAAM,CAAvBK,EAAE;QAAEC,EAAE,GAAWN,MAAM,CAAnBM,EAAE;QAAEtL,IAAI,GAAKgL,MAAM,CAAfhL,IAAI,CAAA;MAC5D,OAAA+M,WAAAA,CAAAA,MAAA,CAAmB7B,IAAI,EAAA,GAAA,CAAA,CAAA6B,MAAA,CAAI,CAAA3B,KAAK,KAALA,IAAAA,IAAAA,KAAK,uBAALA,KAAK,CAAE0B,QAAQ,EAAE,KAAI,CAAC,EAAA,GAAA,CAAA,CAAAC,MAAA,CAAI,CAAA1B,EAAE,KAAFA,IAAAA,IAAAA,EAAE,uBAAFA,EAAE,CAAEyB,QAAQ,EAAE,KAAI,CAAC,EAAA,GAAA,CAAA,CAAAC,MAAA,CACtE,CAAAzB,EAAE,KAAFA,IAAAA,IAAAA,EAAE,uBAAFA,EAAE,CAAEwB,QAAQ,EAAE,KAAI,CAAC,EAAA,GAAA,CAAA,CAAAC,MAAA,CACjB,CAAA/M,IAAI,KAAJA,IAAAA,IAAAA,IAAI,uBAAJA,IAAI,CAAE8M,QAAQ,EAAE,KAAI,CAAC,EAAA,GAAA,CAAA,CAAAC,MAAA,CAAIzJ,GAAG,CAAC,CAAC,CAAC,OAAAyJ,MAAA,CAAIzJ,GAAG,CAAC,CAAC,CAAC,EAAAyJ,GAAAA,CAAAA,CAAAA,MAAA,CAAIlL,KAAK,EAAA,GAAA,CAAA,CAAAkL,MAAA,CAAI/K,MAAM,OAAA+K,MAAA,CAAI5B,KAAK,CACtEtI,GAAG,CAAC,UAAAmK,KAAA,EAAA;AAAA,QAAA,IAAGT,MAAM,GAAAS,KAAA,CAANT,MAAM;UAAEC,KAAK,GAAAQ,KAAA,CAALR,KAAK,CAAA;AAAA,QAAA,OAAA,EAAA,CAAAO,MAAA,CAAUR,MAAM,CAAAQ,CAAAA,MAAA,CAAGP,KAAK,CAAA,CAAA;AAAA,OAAE,CAAC,CAC/CS,IAAI,CAAC,GAAG,CAAC,CAAA,CAAA;AACd,KAAA;AAAC,GAAA,EAAA;IAAAhO,GAAA,EAAA,oBAAA;AAAAH,IAAAA,KAAA,EAED,SAAQ4K,kBAAkBA,CAACJ,OAAgB,EAAE;AAC3C,MAAA,IAAQ/H,KAAK,GAAiB+H,OAAO,CAA7B/H,KAAK;QAAEoI,UAAU,GAAKL,OAAO,CAAtBK,UAAU,CAAA;AACzB;AACA,MAAA,IAAI7E,QAAQ,CAACvD,KAAK,CAAC,EAAE;AACnB,QAAA,OAAA,UAAA,CAAAwL,MAAA,CAAkBxL,KAAK,EAAAwL,GAAAA,CAAAA,CAAAA,MAAA,CAAIpD,UAAU,CAAA,CAAA;AACvC,OAAA;AACA,MAAA,IAAKpI,KAAK,CAAU2L,QAAQ,KAAK,MAAM,EAAE;QACvC,OAAAH,UAAAA,CAAAA,MAAA,CAAmBxL,KAAK,CAAU4L,MAAM,EAAAJ,GAAAA,CAAAA,CAAAA,MAAA,CAAIpD,UAAU,CAAA,CAAA;AACxD,OAAA;AACF,KAAA;AAAC,GAAA,CAAA,CAAA,CAAA;AAAA,CAAA,GAAA;AA5UUvF,SAAS,CACbgJ,aAAa,GAAG,CAAC,CAACvE,sBAAsB,CAACnF,YAAY,EAAE,CAAA;AA8UhE,SAAS0B,sBAAsBA,CAACL,GAAqB,EAAoB;AACvE,EAAA,IAAI,CAACA,GAAG,CAACC,QAAQ,EAAE;AACjB,IAAA,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;AACf,GAAA;EAEA,IAAOnD,KAAK,GACVkD,GAAG,CAACnD,YAAY,IAAImD,GAAG,CAAClD,KAAK;AADjBG,IAAAA,MAAM,GAElB+C,GAAG,CAAChD,aAAa,IAAIgD,GAAG,CAAC/C,MAAM,CAAA;EAGjC,IAAIQ,QAAQ,GAAG,GAAG,CAAA;EAElB,CAAC,GAAG,EAAE,GAAG,CAAC,CAACpC,OAAO,CAAC,UAACJ,IAAI,EAAK;IAC3B,IAAMqN,IAAI,GAAGjL,IAAI,CAACC,IAAI,CAACL,MAAM,GAAGhC,IAAI,CAAC,CAAA;IACrC,IAAMsN,IAAI,GAAGlL,IAAI,CAACC,IAAI,CAACR,KAAK,GAAG7B,IAAI,CAAC,CAAA;AAEpC,IAAA,IAAIqN,IAAI,GAAGC,IAAI,GAAG,GAAG,EAAE;AACrB9K,MAAAA,QAAQ,GAAGxC,IAAI,CAAA;AACjB,KAAA;AACF,GAAC,CAAC,CAAA;AAEF,EAAA,OAAO,CAACwC,QAAQ,EAAEA,QAAQ,CAAC,CAAA;AAC7B;;ACtYA,IAAa+K,eAAe,gBAAA,YAAA;AAAA,EAAA,SAAAA,eAAA,GAAA;AAAA9O,IAAAA,eAAA,OAAA8O,eAAA,CAAA,CAAA;AAAA,GAAA;EAAA,OAAAvO,YAAA,CAAAuO,eAAA,EAAA,CAAA;IAAAtO,GAAA,EAAA,OAAA;AAAAH,IAAAA,KAAA,EAG1B,SAAAuJ,KAAKA,CAAChE,OAA0D,EAAE;AAChE,MAAA,IAAQmJ,gBAAgB,GAAkCnJ,OAAO,CAAzDmJ,gBAAgB;QAAEC,gBAAgB,GAAgBpJ,OAAO,CAAvCoJ,gBAAgB;QAAEC,SAAS,GAAKrJ,OAAO,CAArBqJ,SAAS,CAAA;MACrD,IAAMC,MAAM,GAAGF,gBAAgB,CAACG,IAAI,CAACjF,aAAa,CAACC,WAAW,CAAA;MAE9D,IAAMiF,wBAAwB,GAAG,SAA3BA,wBAAwBA,CAC5BxE,MAAa,EACb1H,UAAkB,EAClBG,WAAmB,EAChB;AACH,QAAA,IAAAgM,mBAAA,GAA0BzE,MAAM,CAAC0E,WAAW;UAApClM,KAAK,GAAAiM,mBAAA,CAALjM,KAAK;UAAEG,MAAM,GAAA8L,mBAAA,CAAN9L,MAAM,CAAA;AACrB,QAAA,IAAIH,KAAK,IAAI,CAACG,MAAM,EAAE;UACpBqH,MAAM,CAAC2E,YAAY,CAAC,QAAQ,EAAGlM,WAAW,GAAGH,UAAU,GAAIE,KAAK,CAAC,CAAA;AACnE,SAAC,MAAM,IAAI,CAACA,KAAK,IAAIG,MAAM,EAAE;UAC3BqH,MAAM,CAAC2E,YAAY,CAAC,OAAO,EAAGrM,UAAU,GAAGG,WAAW,GAAIE,MAAM,CAAC,CAAA;AACnE,SAAA;OACD,CAAA;AAED,MAAA,IAAMiM,aAAa,GAAG,SAAhBA,aAAaA,CAAIpD,CAAiB,EAAK;AAC3C,QAAA,IAAMxB,MAAM,GAAGwB,CAAC,CAACqD,MAAe,CAAA;AAChC,QAAA,IAAQhB,QAAQ,GAAiB7D,MAAM,CAA/B6D,QAAQ;UAAEiB,UAAU,GAAK9E,MAAM,CAArB8E,UAAU,CAAA;AAC5B,QAAA,IAAIjB,QAAQ,KAAKkB,KAAK,CAACC,KAAK,EAAE;AAC5B,UAAA,IAAQ1J,GAAG,GAAsBwJ,UAAU,CAAnCxJ,GAAG;YAAE2J,eAAe,GAAKH,UAAU,CAA9BG,eAAe,CAAA;AAE5B,UAAA,IAAIxJ,QAAQ,CAACH,GAAG,CAAC,EAAE;YACjB+I,SAAS,CAAChJ,YAAY,CAACC,GAAG,EAAE0E,MAAM,EAAE,UAAAhG,IAAA,EAAgC;AAAA,cAAA,IAAAkL,QAAA,GAAAlL,IAAA,CAA7B0B,GAAG;gBAAIlD,KAAK,GAAA0M,QAAA,CAAL1M,KAAK;gBAAEG,MAAM,GAAAuM,QAAA,CAANvM,MAAM,CAAA;AACzD,cAAA,IAAIsM,eAAe,EAAE;AACnBT,gBAAAA,wBAAwB,CAACxE,MAAM,EAAExH,KAAK,EAAEG,MAAM,CAAC,CAAA;AACjD,eAAA;;AAEA;AACAqH,cAAAA,MAAM,CAACmF,UAAU,CAACC,KAAK,GAAG,IAAI,CAAA;cAC9BjB,gBAAgB,CAACkB,OAAO,EAAE,CAAA;AAC5B,aAAC,CAAC,CAAA;AACJ,WAAA;AACF,SAAA;OACD,CAAA;AAED,MAAA,IAAMC,sBAAsB,GAAG,SAAzBA,sBAAsBA,CAAI9D,CAAgB,EAAK;AACnD,QAAA,IAAMxB,MAAM,GAAGwB,CAAC,CAACqD,MAAe,CAAA;AAChC,QAAA,IAAQU,QAAQ,GAA0B/D,CAAC,CAAnC+D,QAAQ;UAAEC,SAAS,GAAehE,CAAC,CAAzBgE,SAAS;UAAEC,QAAQ,GAAKjE,CAAC,CAAdiE,QAAQ,CAAA;QAErC,IAAIzF,MAAM,CAAC6D,QAAQ,KAAKkB,KAAK,CAACC,KAAK,IAAIO,QAAQ,KAAK,KAAK,EAAE;AACzD,UAAA,OAAA;AACF,SAAA;QAEA,IAAIC,SAAS,KAAKC,QAAQ,EAAE;AAC1BpB,UAAAA,SAAS,CAACxE,YAAY,CAAC2F,SAAS,EAAgCxF,MAAM,CAAC,CAAA;AACzE,SAAA;AAEA,QAAA,IAAIvE,QAAQ,CAACgK,QAAQ,CAAC,EAAE;AACtBpB,UAAAA,SAAS,CACNzI,gBAAgB,CAAC6J,QAAQ,EAAEzF,MAAM,CAAC,CAClCnE,IAAI,CAAC,UAAAoH,KAAA,EAAgC;AAAA,YAAA,IAAAyC,SAAA,GAAAzC,KAAA,CAA7BvH,GAAG;cAAIlD,KAAK,GAAAkN,SAAA,CAALlN,KAAK;cAAEG,MAAM,GAAA+M,SAAA,CAAN/M,MAAM,CAAA;AAC3B,YAAA,IAAIqH,MAAM,CAAC8E,UAAU,CAACG,eAAe,EAAE;AACrCT,cAAAA,wBAAwB,CAACxE,MAAM,EAAExH,KAAK,EAAEG,MAAM,CAAC,CAAA;AACjD,aAAA;;AAEA;AACAqH,YAAAA,MAAM,CAACmF,UAAU,CAACC,KAAK,GAAG,IAAI,CAAA;YAC9BjB,gBAAgB,CAACkB,OAAO,EAAE,CAAA;WAC3B,CAAC,CACI,OAAA,CAAA,CAAC,YAAM;AACX;AAAA,WACD,CAAC,CAAA;AACN,SAAA;OACD,CAAA;MAED,SAASM,aAAaA,CAACnE,CAAiB,EAAE;AACxC,QAAA,IAAMxB,MAAM,GAAGwB,CAAC,CAACqD,MAAe,CAAA;AAEhC,QAAA,IAAI7E,MAAM,CAAC6D,QAAQ,KAAKkB,KAAK,CAACC,KAAK,EAAE;AACnC,UAAA,OAAA;AACF,SAAA;AAEAX,QAAAA,SAAS,CAACvE,eAAe,CAACE,MAAM,CAAC,CAAA;AACnC,OAAA;MAEAmE,gBAAgB,CAACyB,KAAK,CAACC,IAAI,CAACC,GAAG,CAAC5B,eAAe,CAAC6B,GAAG,EAAE,YAAM;QACzDzB,MAAM,CAACnI,gBAAgB,CAAC6J,YAAY,CAACC,OAAO,EAAErB,aAAa,CAAC,CAAA;QAC5DN,MAAM,CAACnI,gBAAgB,CACrB6J,YAAY,CAACE,aAAa,EAC1BZ,sBACF,CAAC,CAAA;QACDhB,MAAM,CAACnI,gBAAgB,CAAC6J,YAAY,CAACG,OAAO,EAAER,aAAa,CAAC,CAAA;AAC9D,OAAC,CAAC,CAAA;MAEFxB,gBAAgB,CAACyB,KAAK,CAACQ,OAAO,CAACN,GAAG,CAAC5B,eAAe,CAAC6B,GAAG,EAAE,YAAM;QAC5DzB,MAAM,CAAC+B,mBAAmB,CAACL,YAAY,CAACC,OAAO,EAAErB,aAAa,CAAC,CAAA;QAC/DN,MAAM,CAAC+B,mBAAmB,CACxBL,YAAY,CAACE,aAAa,EAC1BZ,sBACF,CAAC,CAAA;QACDhB,MAAM,CAAC+B,mBAAmB,CAACL,YAAY,CAACG,OAAO,EAAER,aAAa,CAAC,CAAA;AACjE,OAAC,CAAC,CAAA;AACJ,KAAA;AAAC,GAAA,CAAA,CAAA,CAAA;AAAA,CAAA,EAAA,CAAA;AAjGUzB,eAAe,CACnB6B,GAAG,GAAG,WAAW;;ACNbO,IAAAA,MAAM,0BAAAC,qBAAA,EAAA;AAAA,EAAA,SAAAD,MAAA,GAAA;AAAA,IAAA,IAAAzP,KAAA,CAAA;AAAAzB,IAAAA,eAAA,OAAAkR,MAAA,CAAA,CAAA;AAAA,IAAA,KAAA,IAAAE,IAAA,GAAAjP,SAAA,CAAAC,MAAA,EAAAiP,IAAA,GAAAnN,IAAAA,KAAA,CAAAkN,IAAA,GAAAE,IAAA,GAAA,CAAA,EAAAA,IAAA,GAAAF,IAAA,EAAAE,IAAA,EAAA,EAAA;AAAAD,MAAAA,IAAA,CAAAC,IAAA,CAAAnP,GAAAA,SAAA,CAAAmP,IAAA,CAAA,CAAA;AAAA,KAAA;AAAA7P,IAAAA,KAAA,GAAA8P,UAAA,CAAA,IAAA,EAAAL,MAAA,EAAA5C,EAAAA,CAAAA,MAAA,CAAA+C,IAAA,CAAA,CAAA,CAAA;IAAA5P,KAAA,CACjB+P,IAAI,GAAG,cAAc,CAAA;AAAA,IAAA,OAAA/P,KAAA,CAAA;AAAA,GAAA;EAAAgQ,SAAA,CAAAP,MAAA,EAAAC,qBAAA,CAAA,CAAA;EAAA,OAAA5Q,YAAA,CAAA2Q,MAAA,EAAA,CAAA;IAAA1Q,GAAA,EAAA,MAAA;AAAAH,IAAAA,KAAA,EACrB,SAAAoQ,IAAIA,CAAC5K,OAAsB,EAAQ;AACjC;AACA,MAAA,IAAI,CAACD,OAAO,CAACqJ,SAAS,GAAG,IAAItJ,SAAS,CAAC,IAAI,CAACC,OAAO,EAAEC,OAAO,CAAC,CAAA;AAC7D,MAAA,IAAI,CAAC6L,kBAAkB,CAAC,IAAI5C,eAAe,EAAE,CAAC,CAAA;AAChD,KAAA;AAAC,GAAA,EAAA;IAAAtO,GAAA,EAAA,SAAA;AAAAH,IAAAA,KAAA,EACD,SAAA2Q,OAAOA,GAAS;MACd,IAAI,CAACW,yBAAyB,EAAE,CAAA;AAClC,KAAA;AAAC,GAAA,CAAA,CAAA,CAAA;AAAA,CAAA,CATyBC,sBAAsB;;;;"}