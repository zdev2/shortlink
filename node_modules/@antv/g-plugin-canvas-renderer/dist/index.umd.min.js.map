{"version":3,"file":"index.umd.min.js","sources":["../../../node_modules/.pnpm/@babel+runtime@7.25.6/node_modules/@babel/runtime/helpers/esm/typeof.js","../../../node_modules/.pnpm/@babel+runtime@7.25.6/node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","../../../node_modules/.pnpm/@babel+runtime@7.25.6/node_modules/@babel/runtime/helpers/esm/toPrimitive.js","../../../node_modules/.pnpm/@babel+runtime@7.25.6/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../../../node_modules/.pnpm/@babel+runtime@7.25.6/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../../../node_modules/.pnpm/@babel+runtime@7.25.6/node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../../../node_modules/.pnpm/@babel+runtime@7.25.6/node_modules/@babel/runtime/helpers/esm/createClass.js","../../../node_modules/.pnpm/@babel+runtime@7.25.6/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../../../node_modules/.pnpm/@babel+runtime@7.25.6/node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../../../node_modules/.pnpm/@babel+runtime@7.25.6/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../../../node_modules/.pnpm/@babel+runtime@7.25.6/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../../../node_modules/.pnpm/@babel+runtime@7.25.6/node_modules/@babel/runtime/helpers/esm/callSuper.js","../../../node_modules/.pnpm/@babel+runtime@7.25.6/node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../../../node_modules/.pnpm/@babel+runtime@7.25.6/node_modules/@babel/runtime/helpers/esm/inherits.js","../../../node_modules/.pnpm/@babel+runtime@7.25.6/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../../../node_modules/.pnpm/@babel+runtime@7.25.6/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../../../node_modules/.pnpm/@babel+runtime@7.25.6/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../../../node_modules/.pnpm/@babel+runtime@7.25.6/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../../../node_modules/.pnpm/@babel+runtime@7.25.6/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../../../node_modules/.pnpm/@babel+runtime@7.25.6/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../../../node_modules/.pnpm/@babel+runtime@7.25.6/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../../../node_modules/.pnpm/@babel+runtime@7.25.6/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../../../node_modules/.pnpm/@babel+runtime@7.25.6/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../../../node_modules/.pnpm/@babel+runtime@7.25.6/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../../../node_modules/.pnpm/@antv+util@3.3.5/node_modules/@antv/util/esm/lodash/is-nil.js","../../../node_modules/.pnpm/gl-matrix@3.4.3/node_modules/gl-matrix/esm/common.js","../../../node_modules/.pnpm/gl-matrix@3.4.3/node_modules/gl-matrix/esm/mat4.js","../../../node_modules/.pnpm/gl-matrix@3.4.3/node_modules/gl-matrix/esm/vec3.js","../src/CanvasRendererPlugin.ts","../src/shapes/styles/Default.ts","../../../node_modules/.pnpm/@babel+runtime@7.25.6/node_modules/@babel/runtime/helpers/esm/classPrivateFieldLooseBase.js","../../../node_modules/.pnpm/@babel+runtime@7.25.6/node_modules/@babel/runtime/helpers/esm/classPrivateFieldLooseKey.js","../src/shapes/styles/Image.ts","../src/utils/math.ts","../src/shapes/styles/Text.ts","../src/shapes/styles/Rect.ts","../src/shapes/styles/Circle.ts","../src/shapes/styles/Ellipse.ts","../src/shapes/styles/Line.ts","../src/shapes/styles/Polyline.ts","../src/shapes/styles/Polygon.ts","../src/shapes/styles/Path.ts","../src/index.ts"],"sourcesContent":["function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}\nexport { _typeof as default };","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nfunction toPropertyKey(t) {\n  var i = toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nexport { toPropertyKey as default };","import _typeof from \"./typeof.js\";\nfunction toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nexport { toPrimitive as default };","import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperty(e, r, t) {\n  return (r = toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nexport { _defineProperty as default };","import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread2(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\nexport { _objectSpread2 as default };","function _classCallCheck(a, n) {\n  if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\");\n}\nexport { _classCallCheck as default };","import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperties(e, r) {\n  for (var t = 0; t < r.length; t++) {\n    var o = r[t];\n    o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, toPropertyKey(o.key), o);\n  }\n}\nfunction _createClass(e, r, t) {\n  return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", {\n    writable: !1\n  }), e;\n}\nexport { _createClass as default };","function _getPrototypeOf(t) {\n  return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) {\n    return t.__proto__ || Object.getPrototypeOf(t);\n  }, _getPrototypeOf(t);\n}\nexport { _getPrototypeOf as default };","function _isNativeReflectConstruct() {\n  try {\n    var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n  } catch (t) {}\n  return (_isNativeReflectConstruct = function _isNativeReflectConstruct() {\n    return !!t;\n  })();\n}\nexport { _isNativeReflectConstruct as default };","import _typeof from \"./typeof.js\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nfunction _possibleConstructorReturn(t, e) {\n  if (e && (\"object\" == _typeof(e) || \"function\" == typeof e)) return e;\n  if (void 0 !== e) throw new TypeError(\"Derived constructors may only return object or undefined\");\n  return assertThisInitialized(t);\n}\nexport { _possibleConstructorReturn as default };","function _assertThisInitialized(e) {\n  if (void 0 === e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  return e;\n}\nexport { _assertThisInitialized as default };","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nimport possibleConstructorReturn from \"./possibleConstructorReturn.js\";\nfunction _callSuper(t, o, e) {\n  return o = getPrototypeOf(o), possibleConstructorReturn(t, isNativeReflectConstruct() ? Reflect.construct(o, e || [], getPrototypeOf(t).constructor) : o.apply(t, e));\n}\nexport { _callSuper as default };","function _setPrototypeOf(t, e) {\n  return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) {\n    return t.__proto__ = e, t;\n  }, _setPrototypeOf(t, e);\n}\nexport { _setPrototypeOf as default };","import setPrototypeOf from \"./setPrototypeOf.js\";\nfunction _inherits(t, e) {\n  if (\"function\" != typeof e && null !== e) throw new TypeError(\"Super expression must either be null or a function\");\n  t.prototype = Object.create(e && e.prototype, {\n    constructor: {\n      value: t,\n      writable: !0,\n      configurable: !0\n    }\n  }), Object.defineProperty(t, \"prototype\", {\n    writable: !1\n  }), e && setPrototypeOf(t, e);\n}\nexport { _inherits as default };","function _arrayLikeToArray(r, a) {\n  (null == a || a > r.length) && (a = r.length);\n  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];\n  return n;\n}\nexport { _arrayLikeToArray as default };","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nfunction _unsupportedIterableToArray(r, a) {\n  if (r) {\n    if (\"string\" == typeof r) return arrayLikeToArray(r, a);\n    var t = {}.toString.call(r).slice(8, -1);\n    return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? arrayLikeToArray(r, a) : void 0;\n  }\n}\nexport { _unsupportedIterableToArray as default };","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nfunction _slicedToArray(r, e) {\n  return arrayWithHoles(r) || iterableToArrayLimit(r, e) || unsupportedIterableToArray(r, e) || nonIterableRest();\n}\nexport { _slicedToArray as default };","function _arrayWithHoles(r) {\n  if (Array.isArray(r)) return r;\n}\nexport { _arrayWithHoles as default };","function _iterableToArrayLimit(r, l) {\n  var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"];\n  if (null != t) {\n    var e,\n      n,\n      i,\n      u,\n      a = [],\n      f = !0,\n      o = !1;\n    try {\n      if (i = (t = t.call(r)).next, 0 === l) {\n        if (Object(t) !== t) return;\n        f = !1;\n      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);\n    } catch (r) {\n      o = !0, n = r;\n    } finally {\n      try {\n        if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return;\n      } finally {\n        if (o) throw n;\n      }\n    }\n    return a;\n  }\n}\nexport { _iterableToArrayLimit as default };","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _nonIterableRest as default };","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nfunction _toConsumableArray(r) {\n  return arrayWithoutHoles(r) || iterableToArray(r) || unsupportedIterableToArray(r) || nonIterableSpread();\n}\nexport { _toConsumableArray as default };","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nfunction _arrayWithoutHoles(r) {\n  if (Array.isArray(r)) return arrayLikeToArray(r);\n}\nexport { _arrayWithoutHoles as default };","function _iterableToArray(r) {\n  if (\"undefined\" != typeof Symbol && null != r[Symbol.iterator] || null != r[\"@@iterator\"]) return Array.from(r);\n}\nexport { _iterableToArray as default };","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _nonIterableSpread as default };","// isFinite,\nvar isNil = function (value) {\n    /**\n     * isNil(null) => true\n     * isNil() => true\n     */\n    return value === null || value === undefined;\n};\nexport default isNil;\n//# sourceMappingURL=is-nil.js.map","/**\n * Common utilities\n * @module glMatrix\n */\n// Configuration Constants\nexport var EPSILON = 0.000001;\nexport var ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nexport var RANDOM = Math.random;\n/**\n * Sets the type of array used when creating new vectors and matrices\n *\n * @param {Float32ArrayConstructor | ArrayConstructor} type Array type, such as Float32Array or Array\n */\n\nexport function setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\nvar degree = Math.PI / 180;\n/**\n * Convert Degree To Radian\n *\n * @param {Number} a Angle in Degrees\n */\n\nexport function toRadian(a) {\n  return a * degree;\n}\n/**\n * Tests whether or not the arguments have approximately the same value, within an absolute\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\n * than or equal to 1.0, and a relative tolerance is used for larger values)\n *\n * @param {Number} a The first number to test.\n * @param {Number} b The second number to test.\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n}\nif (!Math.hypot) Math.hypot = function () {\n  var y = 0,\n      i = arguments.length;\n\n  while (i--) {\n    y += arguments[i] * arguments[i];\n  }\n\n  return Math.sqrt(y);\n};","import * as glMatrix from \"./common.js\";\n/**\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\n * @module mat4\n */\n\n/**\n * Creates a new identity mat4\n *\n * @returns {mat4} a new 4x4 matrix\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(16);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n  }\n\n  out[0] = 1;\n  out[5] = 1;\n  out[10] = 1;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a new mat4 initialized with values from an existing matrix\n *\n * @param {ReadonlyMat4} a matrix to clone\n * @returns {mat4} a new 4x4 matrix\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Copy the values from one mat4 to another\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Create a new mat4 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} A new mat4\n */\n\nexport function fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\n * Set the components of a mat4 to the given values\n *\n * @param {mat4} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} out\n */\n\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\n * Set a mat4 to the identity matrix\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Transpose the values of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    var a12 = a[6],\n        a13 = a[7];\n    var a23 = a[11];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\n * Inverts a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n  return out;\n}\n/**\n * Calculates the adjugate of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\n  return out;\n}\n/**\n * Calculates the determinant of a mat4\n *\n * @param {ReadonlyMat4} a the source matrix\n * @returns {Number} determinant of a\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n/**\n * Multiplies two mat4s\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15]; // Cache only the current line of the second matrix\n\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[4];\n  b1 = b[5];\n  b2 = b[6];\n  b3 = b[7];\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[8];\n  b1 = b[9];\n  b2 = b[10];\n  b3 = b[11];\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[12];\n  b1 = b[13];\n  b2 = b[14];\n  b3 = b[15];\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  return out;\n}\n/**\n * Translate a mat4 by the given vector\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to translate\n * @param {ReadonlyVec3} v vector to translate by\n * @returns {mat4} out\n */\n\nexport function translate(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n    out[3] = a03;\n    out[4] = a10;\n    out[5] = a11;\n    out[6] = a12;\n    out[7] = a13;\n    out[8] = a20;\n    out[9] = a21;\n    out[10] = a22;\n    out[11] = a23;\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n\n  return out;\n}\n/**\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to scale\n * @param {ReadonlyVec3} v the vec3 to scale the matrix by\n * @returns {mat4} out\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Rotates a mat4 by the given angle around the given axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @returns {mat4} out\n */\n\nexport function rotate(out, a, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n  var b00, b01, b02;\n  var b10, b11, b12;\n  var b20, b21, b22;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n  a00 = a[0];\n  a01 = a[1];\n  a02 = a[2];\n  a03 = a[3];\n  a10 = a[4];\n  a11 = a[5];\n  a12 = a[6];\n  a13 = a[7];\n  a20 = a[8];\n  a21 = a[9];\n  a22 = a[10];\n  a23 = a[11]; // Construct the elements of the rotation matrix\n\n  b00 = x * x * t + c;\n  b01 = y * x * t + z * s;\n  b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s;\n  b11 = y * y * t + c;\n  b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s;\n  b21 = y * z * t - x * s;\n  b22 = z * z * t + c; // Perform rotation-specific matrix multiplication\n\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the X axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateX(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the Y axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateY(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the Z axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateZ(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyVec3} v Translation vector\n * @returns {mat4} out\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.scale(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyVec3} v Scaling vector\n * @returns {mat4} out\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = v[1];\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = v[2];\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a given angle around a given axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotate(dest, dest, rad, axis);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @returns {mat4} out\n */\n\nexport function fromRotation(out, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c; // Perform rotation-specific matrix multiplication\n\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the X axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateX(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromXRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = c;\n  out[6] = s;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = -s;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the Y axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateY(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromYRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = 0;\n  out[2] = -s;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = s;\n  out[9] = 0;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the Z axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateZ(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromZRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -s;\n  out[5] = c;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation and vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslation(out, q, v) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a new mat4 from a dual quat.\n *\n * @param {mat4} out Matrix\n * @param {ReadonlyQuat2} a Dual Quaternion\n * @returns {mat4} mat4 receiving operation result\n */\n\nexport function fromQuat2(out, a) {\n  var translation = new glMatrix.ARRAY_TYPE(3);\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw; //Only scale if it makes sense\n\n  if (magnitude > 0) {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\n  } else {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  }\n\n  fromRotationTranslation(out, a, translation);\n  return out;\n}\n/**\n * Returns the translation vector component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslation,\n *  the returned vector will be the same as the translation vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive translation component\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\n\nexport function getTranslation(out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n  return out;\n}\n/**\n * Returns the scaling factor component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslationScale\n *  with a normalized Quaternion paramter, the returned vector will be\n *  the same as the scaling vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive scaling factor component\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\n\nexport function getScaling(out, mat) {\n  var m11 = mat[0];\n  var m12 = mat[1];\n  var m13 = mat[2];\n  var m21 = mat[4];\n  var m22 = mat[5];\n  var m23 = mat[6];\n  var m31 = mat[8];\n  var m32 = mat[9];\n  var m33 = mat[10];\n  out[0] = Math.hypot(m11, m12, m13);\n  out[1] = Math.hypot(m21, m22, m23);\n  out[2] = Math.hypot(m31, m32, m33);\n  return out;\n}\n/**\n * Returns a quaternion representing the rotational component\n *  of a transformation matrix. If a matrix is built with\n *  fromRotationTranslation, the returned quaternion will be the\n *  same as the quaternion originally supplied.\n * @param {quat} out Quaternion to receive the rotation component\n * @param {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {quat} out\n */\n\nexport function getRotation(out, mat) {\n  var scaling = new glMatrix.ARRAY_TYPE(3);\n  getScaling(scaling, mat);\n  var is1 = 1 / scaling[0];\n  var is2 = 1 / scaling[1];\n  var is3 = 1 / scaling[2];\n  var sm11 = mat[0] * is1;\n  var sm12 = mat[1] * is2;\n  var sm13 = mat[2] * is3;\n  var sm21 = mat[4] * is1;\n  var sm22 = mat[5] * is2;\n  var sm23 = mat[6] * is3;\n  var sm31 = mat[8] * is1;\n  var sm32 = mat[9] * is2;\n  var sm33 = mat[10] * is3;\n  var trace = sm11 + sm22 + sm33;\n  var S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (sm23 - sm32) / S;\n    out[1] = (sm31 - sm13) / S;\n    out[2] = (sm12 - sm21) / S;\n  } else if (sm11 > sm22 && sm11 > sm33) {\n    S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n    out[3] = (sm23 - sm32) / S;\n    out[0] = 0.25 * S;\n    out[1] = (sm12 + sm21) / S;\n    out[2] = (sm31 + sm13) / S;\n  } else if (sm22 > sm33) {\n    S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n    out[3] = (sm31 - sm13) / S;\n    out[0] = (sm12 + sm21) / S;\n    out[1] = 0.25 * S;\n    out[2] = (sm23 + sm32) / S;\n  } else {\n    S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n    out[3] = (sm12 - sm21) / S;\n    out[0] = (sm31 + sm13) / S;\n    out[1] = (sm23 + sm32) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @param {ReadonlyVec3} s Scaling vector\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     mat4.translate(dest, origin);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *     mat4.translate(dest, negativeOrigin);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @param {ReadonlyVec3} s Scaling vector\n * @param {ReadonlyVec3} o The origin vector around which to scale and rotate\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  var ox = o[0];\n  var oy = o[1];\n  var oz = o[2];\n  var out0 = (1 - (yy + zz)) * sx;\n  var out1 = (xy + wz) * sx;\n  var out2 = (xz - wy) * sx;\n  var out4 = (xy - wz) * sy;\n  var out5 = (1 - (xx + zz)) * sy;\n  var out6 = (yz + wx) * sy;\n  var out8 = (xz + wy) * sz;\n  var out9 = (yz - wx) * sz;\n  var out10 = (1 - (xx + yy)) * sz;\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = 0;\n  out[4] = out4;\n  out[5] = out5;\n  out[6] = out6;\n  out[7] = 0;\n  out[8] = out8;\n  out[9] = out9;\n  out[10] = out10;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\n  out[15] = 1;\n  return out;\n}\n/**\n * Calculates a 4x4 matrix from the given quaternion\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyQuat} q Quaternion to create matrix from\n *\n * @returns {mat4} out\n */\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[1] = yx + wz;\n  out[2] = zx - wy;\n  out[3] = 0;\n  out[4] = yx - wz;\n  out[5] = 1 - xx - zz;\n  out[6] = zy + wx;\n  out[7] = 0;\n  out[8] = zx + wy;\n  out[9] = zy - wx;\n  out[10] = 1 - xx - yy;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a frustum matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Number} left Left bound of the frustum\n * @param {Number} right Right bound of the frustum\n * @param {Number} bottom Bottom bound of the frustum\n * @param {Number} top Top bound of the frustum\n * @param {Number} near Near bound of the frustum\n * @param {Number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function frustum(out, left, right, bottom, top, near, far) {\n  var rl = 1 / (right - left);\n  var tb = 1 / (top - bottom);\n  var nf = 1 / (near - far);\n  out[0] = near * 2 * rl;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = near * 2 * tb;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = (right + left) * rl;\n  out[9] = (top + bottom) * tb;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = far * near * 2 * nf;\n  out[15] = 0;\n  return out;\n}\n/**\n * Generates a perspective projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n * which matches WebGL/OpenGL's clip volume.\n * Passing null/undefined/no value for far will generate infinite projection matrix.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum, can be null or Infinity\n * @returns {mat4} out\n */\n\nexport function perspectiveNO(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = (far + near) * nf;\n    out[14] = 2 * far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -2 * near;\n  }\n\n  return out;\n}\n/**\n * Alias for {@link mat4.perspectiveNO}\n * @function\n */\n\nexport var perspective = perspectiveNO;\n/**\n * Generates a perspective projection matrix suitable for WebGPU with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n * Passing null/undefined/no value for far will generate infinite projection matrix.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum, can be null or Infinity\n * @returns {mat4} out\n */\n\nexport function perspectiveZO(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = far * nf;\n    out[14] = far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -near;\n  }\n\n  return out;\n}\n/**\n * Generates a perspective projection matrix with the given field of view.\n * This is primarily useful for generating projection matrices to be used\n * with the still experiemental WebVR API.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function perspectiveFromFieldOfView(out, fov, near, far) {\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\n  var xScale = 2.0 / (leftTan + rightTan);\n  var yScale = 2.0 / (upTan + downTan);\n  out[0] = xScale;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  out[4] = 0.0;\n  out[5] = yScale;\n  out[6] = 0.0;\n  out[7] = 0.0;\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n  out[9] = (upTan - downTan) * yScale * 0.5;\n  out[10] = far / (near - far);\n  out[11] = -1.0;\n  out[12] = 0.0;\n  out[13] = 0.0;\n  out[14] = far * near / (near - far);\n  out[15] = 0.0;\n  return out;\n}\n/**\n * Generates a orthogonal projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n * which matches WebGL/OpenGL's clip volume.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function orthoNO(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n/**\n * Alias for {@link mat4.orthoNO}\n * @function\n */\n\nexport var ortho = orthoNO;\n/**\n * Generates a orthogonal projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function orthoZO(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = near * nf;\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {ReadonlyVec3} eye Position of the viewer\n * @param {ReadonlyVec3} center Point the viewer is looking at\n * @param {ReadonlyVec3} up vec3 pointing up\n * @returns {mat4} out\n */\n\nexport function lookAt(out, eye, center, up) {\n  var x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\n  var eyex = eye[0];\n  var eyey = eye[1];\n  var eyez = eye[2];\n  var upx = up[0];\n  var upy = up[1];\n  var upz = up[2];\n  var centerx = center[0];\n  var centery = center[1];\n  var centerz = center[2];\n\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON && Math.abs(eyey - centery) < glMatrix.EPSILON && Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n    return identity(out);\n  }\n\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n  len = 1 / Math.hypot(z0, z1, z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.hypot(x0, x1, x2);\n\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n  len = Math.hypot(y0, y1, y2);\n\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a matrix that makes something look at something else.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {ReadonlyVec3} eye Position of the viewer\n * @param {ReadonlyVec3} center Point the viewer is looking at\n * @param {ReadonlyVec3} up vec3 pointing up\n * @returns {mat4} out\n */\n\nexport function targetTo(out, eye, target, up) {\n  var eyex = eye[0],\n      eyey = eye[1],\n      eyez = eye[2],\n      upx = up[0],\n      upy = up[1],\n      upz = up[2];\n  var z0 = eyex - target[0],\n      z1 = eyey - target[1],\n      z2 = eyez - target[2];\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n\n  var x0 = upy * z2 - upz * z1,\n      x1 = upz * z0 - upx * z2,\n      x2 = upx * z1 - upy * z0;\n  len = x0 * x0 + x1 * x1 + x2 * x2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = x1;\n  out[2] = x2;\n  out[3] = 0;\n  out[4] = z1 * x2 - z2 * x1;\n  out[5] = z2 * x0 - z0 * x2;\n  out[6] = z0 * x1 - z1 * x0;\n  out[7] = 0;\n  out[8] = z0;\n  out[9] = z1;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = eyex;\n  out[13] = eyey;\n  out[14] = eyez;\n  out[15] = 1;\n  return out;\n}\n/**\n * Returns a string representation of a mat4\n *\n * @param {ReadonlyMat4} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\n\nexport function str(a) {\n  return \"mat4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \", \" + a[9] + \", \" + a[10] + \", \" + a[11] + \", \" + a[12] + \", \" + a[13] + \", \" + a[14] + \", \" + a[15] + \")\";\n}\n/**\n * Returns Frobenius norm of a mat4\n *\n * @param {ReadonlyMat4} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a[11], a[12], a[13], a[14], a[15]);\n}\n/**\n * Adds two mat4's\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  out[9] = a[9] + b[9];\n  out[10] = a[10] + b[10];\n  out[11] = a[11] + b[11];\n  out[12] = a[12] + b[12];\n  out[13] = a[13] + b[13];\n  out[14] = a[14] + b[14];\n  out[15] = a[15] + b[15];\n  return out;\n}\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  out[9] = a[9] - b[9];\n  out[10] = a[10] - b[10];\n  out[11] = a[11] - b[11];\n  out[12] = a[12] - b[12];\n  out[13] = a[13] - b[13];\n  out[14] = a[14] - b[14];\n  out[15] = a[15] - b[15];\n  return out;\n}\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat4} out\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  out[9] = a[9] * b;\n  out[10] = a[10] * b;\n  out[11] = a[11] * b;\n  out[12] = a[12] * b;\n  out[13] = a[13] * b;\n  out[14] = a[14] * b;\n  out[15] = a[15] * b;\n  return out;\n}\n/**\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat4} out the receiving vector\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat4} out\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  out[9] = a[9] + b[9] * scale;\n  out[10] = a[10] + b[10] * scale;\n  out[11] = a[11] + b[11] * scale;\n  out[12] = a[12] + b[12] * scale;\n  out[13] = a[13] + b[13] * scale;\n  out[14] = a[14] + b[14] * scale;\n  out[15] = a[15] + b[15] * scale;\n  return out;\n}\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyMat4} a The first matrix.\n * @param {ReadonlyMat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n}\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {ReadonlyMat4} a The first matrix.\n * @param {ReadonlyMat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var a8 = a[8],\n      a9 = a[9],\n      a10 = a[10],\n      a11 = a[11];\n  var a12 = a[12],\n      a13 = a[13],\n      a14 = a[14],\n      a15 = a[15];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  var b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  var b8 = b[8],\n      b9 = b[9],\n      b10 = b[10],\n      b11 = b[11];\n  var b12 = b[12],\n      b13 = b[13],\n      b14 = b[14],\n      b15 = b[15];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\n}\n/**\n * Alias for {@link mat4.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link mat4.subtract}\n * @function\n */\n\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\n/**\n * 3 Dimensional Vector\n * @module vec3\n */\n\n/**\n * Creates a new, empty vec3\n *\n * @returns {vec3} a new 3D vector\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(3);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  return out;\n}\n/**\n * Creates a new vec3 initialized with values from an existing vector\n *\n * @param {ReadonlyVec3} a vector to clone\n * @returns {vec3} a new 3D vector\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\n * Calculates the length of a vec3\n *\n * @param {ReadonlyVec3} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return Math.hypot(x, y, z);\n}\n/**\n * Creates a new vec3 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} a new 3D vector\n */\n\nexport function fromValues(x, y, z) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\n * Copy the values from one vec3 to another\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the source vector\n * @returns {vec3} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\n * Set the components of a vec3 to the given values\n *\n * @param {vec3} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} out\n */\n\nexport function set(out, x, y, z) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\n * Adds two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  return out;\n}\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  return out;\n}\n/**\n * Multiplies two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  return out;\n}\n/**\n * Divides two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  return out;\n}\n/**\n * Math.ceil the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to ceil\n * @returns {vec3} out\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  return out;\n}\n/**\n * Math.floor the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to floor\n * @returns {vec3} out\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  return out;\n}\n/**\n * Returns the minimum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  return out;\n}\n/**\n * Returns the maximum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  return out;\n}\n/**\n * Math.round the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to round\n * @returns {vec3} out\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  return out;\n}\n/**\n * Scales a vec3 by a scalar number\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec3} out\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  return out;\n}\n/**\n * Adds two vec3's after scaling the second operand by a scalar value\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec3} out\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  return out;\n}\n/**\n * Calculates the euclidian distance between two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} distance between a and b\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return Math.hypot(x, y, z);\n}\n/**\n * Calculates the squared euclidian distance between two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} squared distance between a and b\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return x * x + y * y + z * z;\n}\n/**\n * Calculates the squared length of a vec3\n *\n * @param {ReadonlyVec3} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return x * x + y * y + z * z;\n}\n/**\n * Negates the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to negate\n * @returns {vec3} out\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  return out;\n}\n/**\n * Returns the inverse of the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to invert\n * @returns {vec3} out\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n}\n/**\n * Normalize a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to normalize\n * @returns {vec3} out\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var len = x * x + y * y + z * z;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  out[2] = a[2] * len;\n  return out;\n}\n/**\n * Calculates the dot product of two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} dot product of a and b\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n/**\n * Computes the cross product of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function cross(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2];\n  out[0] = ay * bz - az * by;\n  out[1] = az * bx - ax * bz;\n  out[2] = ax * by - ay * bx;\n  return out;\n}\n/**\n * Performs a linear interpolation between two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  return out;\n}\n/**\n * Performs a hermite interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {ReadonlyVec3} c the third operand\n * @param {ReadonlyVec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nexport function hermite(out, a, b, c, d, t) {\n  var factorTimes2 = t * t;\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\n  var factor2 = factorTimes2 * (t - 2) + t;\n  var factor3 = factorTimes2 * (t - 1);\n  var factor4 = factorTimes2 * (3 - 2 * t);\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\n * Performs a bezier interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {ReadonlyVec3} c the third operand\n * @param {ReadonlyVec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nexport function bezier(out, a, b, c, d, t) {\n  var inverseFactor = 1 - t;\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\n  var factorTimes2 = t * t;\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\n  var factor2 = 3 * t * inverseFactorTimesTwo;\n  var factor3 = 3 * factorTimes2 * inverseFactor;\n  var factor4 = factorTimes2 * t;\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec3} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec3} out\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  var z = glMatrix.RANDOM() * 2.0 - 1.0;\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\n  out[0] = Math.cos(r) * zScale;\n  out[1] = Math.sin(r) * zScale;\n  out[2] = z * scale;\n  return out;\n}\n/**\n * Transforms the vec3 with a mat4.\n * 4th vector component is implicitly '1'\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec3} out\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\n  w = w || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n  return out;\n}\n/**\n * Transforms the vec3 with a mat3.\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyMat3} m the 3x3 matrix to transform with\n * @returns {vec3} out\n */\n\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x * m[0] + y * m[3] + z * m[6];\n  out[1] = x * m[1] + y * m[4] + z * m[7];\n  out[2] = x * m[2] + y * m[5] + z * m[8];\n  return out;\n}\n/**\n * Transforms the vec3 with a quat\n * Can also be used for dual quaternions. (Multiply it with the real part)\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyQuat} q quaternion to transform with\n * @returns {vec3} out\n */\n\nexport function transformQuat(out, a, q) {\n  // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3];\n  var x = a[0],\n      y = a[1],\n      z = a[2]; // var qvec = [qx, qy, qz];\n  // var uv = vec3.cross([], qvec, a);\n\n  var uvx = qy * z - qz * y,\n      uvy = qz * x - qx * z,\n      uvz = qx * y - qy * x; // var uuv = vec3.cross([], qvec, uv);\n\n  var uuvx = qy * uvz - qz * uvy,\n      uuvy = qz * uvx - qx * uvz,\n      uuvz = qx * uvy - qy * uvx; // vec3.scale(uv, uv, 2 * w);\n\n  var w2 = qw * 2;\n  uvx *= w2;\n  uvy *= w2;\n  uvz *= w2; // vec3.scale(uuv, uuv, 2);\n\n  uuvx *= 2;\n  uuvy *= 2;\n  uuvz *= 2; // return vec3.add(out, a, vec3.add(out, uv, uuv));\n\n  out[0] = x + uvx + uuvx;\n  out[1] = y + uvy + uuvy;\n  out[2] = z + uvz + uuvz;\n  return out;\n}\n/**\n * Rotate a 3D vector around the x-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nexport function rotateX(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0];\n  r[1] = p[1] * Math.cos(rad) - p[2] * Math.sin(rad);\n  r[2] = p[1] * Math.sin(rad) + p[2] * Math.cos(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Rotate a 3D vector around the y-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nexport function rotateY(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[2] * Math.sin(rad) + p[0] * Math.cos(rad);\n  r[1] = p[1];\n  r[2] = p[2] * Math.cos(rad) - p[0] * Math.sin(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Rotate a 3D vector around the z-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nexport function rotateZ(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0] * Math.cos(rad) - p[1] * Math.sin(rad);\n  r[1] = p[0] * Math.sin(rad) + p[1] * Math.cos(rad);\n  r[2] = p[2]; //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Get the angle between two 3D vectors\n * @param {ReadonlyVec3} a The first operand\n * @param {ReadonlyVec3} b The second operand\n * @returns {Number} The angle in radians\n */\n\nexport function angle(a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      bx = b[0],\n      by = b[1],\n      bz = b[2],\n      mag1 = Math.sqrt(ax * ax + ay * ay + az * az),\n      mag2 = Math.sqrt(bx * bx + by * by + bz * bz),\n      mag = mag1 * mag2,\n      cosine = mag && dot(a, b) / mag;\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\n * Set the components of a vec3 to zero\n *\n * @param {vec3} out the receiving vector\n * @returns {vec3} out\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  return out;\n}\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec3} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nexport function str(a) {\n  return \"vec3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \")\";\n}\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec3} a The first vector.\n * @param {ReadonlyVec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec3} a The first vector.\n * @param {ReadonlyVec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\n}\n/**\n * Alias for {@link vec3.subtract}\n * @function\n */\n\nexport var sub = subtract;\n/**\n * Alias for {@link vec3.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link vec3.divide}\n * @function\n */\n\nexport var div = divide;\n/**\n * Alias for {@link vec3.distance}\n * @function\n */\n\nexport var dist = distance;\n/**\n * Alias for {@link vec3.squaredDistance}\n * @function\n */\n\nexport var sqrDist = squaredDistance;\n/**\n * Alias for {@link vec3.length}\n * @function\n */\n\nexport var len = length;\n/**\n * Alias for {@link vec3.squaredLength}\n * @function\n */\n\nexport var sqrLen = squaredLength;\n/**\n * Perform some operation over an array of vec3s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 3;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n    }\n\n    return a;\n  };\n}();","import type {\n  CSSRGB,\n  DisplayObject,\n  FederatedEvent,\n  ParsedBaseStyleProps,\n  RBushNodeAABB,\n  RenderingPlugin,\n  RBush,\n  RenderingPluginContext,\n  ContextService,\n  CanvasContext,\n  GlobalRuntime,\n} from '@antv/g-lite';\nimport {\n  AABB,\n  CanvasEvent,\n  CustomEvent,\n  ElementEvent,\n  Shape,\n  Node,\n} from '@antv/g-lite';\nimport type { PathGenerator } from '@antv/g-plugin-canvas-path-generator';\nimport { isNil } from '@antv/util';\nimport { mat4, vec3 } from 'gl-matrix';\nimport type { CanvasRendererPluginOptions } from './interfaces';\n\ninterface Rect {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n}\n\n/**\n * support 2 modes in rendering:\n * * immediate\n * * delayed: render at the end of frame with dirty-rectangle\n */\nexport class CanvasRendererPlugin implements RenderingPlugin {\n  static tag = 'CanvasRenderer';\n\n  private context: RenderingPluginContext;\n\n  private pathGeneratorFactory: Record<Shape, PathGenerator<any>>;\n\n  /**\n   * RBush used in dirty rectangle rendering\n   */\n  private rBush: RBush<RBushNodeAABB>;\n\n  constructor(\n    private canvasRendererPluginOptions: CanvasRendererPluginOptions, // private styleRendererFactory: Record<Shape, StyleRenderer>,\n  ) {}\n\n  private removedRBushNodeAABBs: RBushNodeAABB[] = [];\n\n  private renderQueue: DisplayObject[] = [];\n\n  /**\n   * This stack is only used by clipPath for now.\n   */\n  private restoreStack: DisplayObject[] = [];\n\n  private clearFullScreenLastFrame = false;\n  private clearFullScreen = false;\n\n  /**\n   * view projection matrix\n   */\n  private vpMatrix = mat4.create();\n  private dprMatrix = mat4.create();\n  private tmpMat4 = mat4.create();\n  private vec3a = vec3.create();\n  private vec3b = vec3.create();\n  private vec3c = vec3.create();\n  private vec3d = vec3.create();\n\n  apply(context: RenderingPluginContext, runtime: GlobalRuntime) {\n    this.context = context;\n\n    const {\n      config,\n      camera,\n      renderingService,\n      renderingContext,\n      rBushRoot,\n      // @ts-ignore\n      pathGeneratorFactory,\n    } = context;\n    this.rBush = rBushRoot;\n    this.pathGeneratorFactory = pathGeneratorFactory;\n    const contextService =\n      context.contextService as ContextService<CanvasRenderingContext2D>;\n\n    const canvas = renderingContext.root.ownerDocument.defaultView;\n\n    const handleUnmounted = (e: FederatedEvent) => {\n      const object = e.target as DisplayObject;\n\n      // remove r-bush node\n      // @ts-ignore\n      const { rBushNode } = object;\n\n      if (rBushNode.aabb) {\n        // save removed aabbs for dirty-rectangle rendering later\n        this.removedRBushNodeAABBs.push(rBushNode.aabb);\n      }\n    };\n\n    const handleCulled = (e: FederatedEvent) => {\n      const object = e.target as DisplayObject;\n      // @ts-ignore\n      const { rBushNode } = object;\n\n      if (rBushNode.aabb) {\n        // save removed aabbs for dirty-rectangle rendering later\n        this.removedRBushNodeAABBs.push(rBushNode.aabb);\n      }\n    };\n\n    renderingService.hooks.init.tap(CanvasRendererPlugin.tag, () => {\n      canvas.addEventListener(ElementEvent.UNMOUNTED, handleUnmounted);\n      canvas.addEventListener(ElementEvent.CULLED, handleCulled);\n\n      // clear fullscreen\n      const dpr = contextService.getDPR();\n      const { width, height } = config;\n      const context = contextService.getContext();\n      this.clearRect(\n        context,\n        0,\n        0,\n        width * dpr,\n        height * dpr,\n        config.background,\n      );\n    });\n\n    renderingService.hooks.destroy.tap(CanvasRendererPlugin.tag, () => {\n      canvas.removeEventListener(ElementEvent.UNMOUNTED, handleUnmounted);\n      canvas.removeEventListener(ElementEvent.CULLED, handleCulled);\n      this.renderQueue = [];\n      this.removedRBushNodeAABBs = [];\n      this.restoreStack = [];\n    });\n\n    renderingService.hooks.beginFrame.tap(CanvasRendererPlugin.tag, () => {\n      const context = contextService.getContext();\n      const dpr = contextService.getDPR();\n      const { width, height } = config;\n      const { dirtyObjectNumThreshold, dirtyObjectRatioThreshold } =\n        this.canvasRendererPluginOptions;\n\n      // some heuristic conditions such as 80% object changed\n      const { total, rendered } = renderingService.getStats();\n      const ratio = rendered / total;\n\n      this.clearFullScreen =\n        this.clearFullScreenLastFrame ||\n        // @ts-ignore\n        !canvas.context.renderingPlugins[1]?.isFirstTimeRenderingFinished ||\n        renderingService.disableDirtyRectangleRendering() ||\n        (rendered > dirtyObjectNumThreshold &&\n          ratio > dirtyObjectRatioThreshold);\n\n      if (context) {\n        context.resetTransform\n          ? context.resetTransform()\n          : context.setTransform(1, 0, 0, 1, 0, 0);\n        if (this.clearFullScreen) {\n          this.clearRect(\n            context,\n            0,\n            0,\n            width * dpr,\n            height * dpr,\n            config.background,\n          );\n        }\n      }\n    });\n\n    const renderByZIndex = (\n      object: DisplayObject,\n      context: CanvasRenderingContext2D,\n    ) => {\n      if (object.isVisible() && !object.isCulled()) {\n        this.renderDisplayObject(\n          object,\n          context,\n          this.context,\n          this.restoreStack,\n          runtime,\n        );\n      }\n\n      const sorted = object.sortable.sorted || object.childNodes;\n\n      // should account for z-index\n      sorted.forEach((child: DisplayObject) => {\n        renderByZIndex(child, context);\n      });\n    };\n\n    // render at the end of frame\n    renderingService.hooks.endFrame.tap(CanvasRendererPlugin.tag, () => {\n      // Skip rendering.\n      if (renderingContext.root.childNodes.length === 0) {\n        this.clearFullScreenLastFrame = true;\n        return;\n      }\n\n      this.clearFullScreenLastFrame = false;\n\n      const context = contextService.getContext();\n      // clear & clip dirty rectangle\n      const dpr = contextService.getDPR();\n      mat4.fromScaling(this.dprMatrix, [dpr, dpr, 1]);\n      mat4.multiply(this.vpMatrix, this.dprMatrix, camera.getOrthoMatrix());\n\n      if (this.clearFullScreen) {\n        // console.log('canvas renderer fcp...', renderingContext.root.childNodes);\n        renderByZIndex(renderingContext.root, context);\n      } else {\n        // console.log('canvas renderer next...', this.renderQueue);\n        // merge removed AABB\n        const dirtyRenderBounds = this.safeMergeAABB(\n          this.mergeDirtyAABBs(this.renderQueue),\n          ...this.removedRBushNodeAABBs.map(({ minX, minY, maxX, maxY }) => {\n            const aabb = new AABB();\n            aabb.setMinMax(\n              // vec3.fromValues(minX, minY, 0),\n              // vec3.fromValues(maxX, maxY, 0),\n              [minX, minY, 0],\n              [maxX, maxY, 0],\n            );\n            return aabb;\n          }),\n        );\n        this.removedRBushNodeAABBs = [];\n\n        if (AABB.isEmpty(dirtyRenderBounds)) {\n          this.renderQueue = [];\n          return;\n        }\n\n        const dirtyRect = this.convertAABB2Rect(dirtyRenderBounds);\n        const { x, y, width, height } = dirtyRect;\n\n        const tl = vec3.transformMat4(this.vec3a, [x, y, 0], this.vpMatrix);\n        const tr = vec3.transformMat4(\n          this.vec3b,\n          [x + width, y, 0],\n          this.vpMatrix,\n        );\n        const bl = vec3.transformMat4(\n          this.vec3c,\n          [x, y + height, 0],\n          this.vpMatrix,\n        );\n        const br = vec3.transformMat4(\n          this.vec3d,\n          [x + width, y + height, 0],\n          this.vpMatrix,\n        );\n\n        const minx = Math.min(tl[0], tr[0], br[0], bl[0]);\n        const miny = Math.min(tl[1], tr[1], br[1], bl[1]);\n        const maxx = Math.max(tl[0], tr[0], br[0], bl[0]);\n        const maxy = Math.max(tl[1], tr[1], br[1], bl[1]);\n\n        const ix = Math.floor(minx);\n        const iy = Math.floor(miny);\n        const iwidth = Math.ceil(maxx - minx);\n        const iheight = Math.ceil(maxy - miny);\n\n        context.save();\n        this.clearRect(context, ix, iy, iwidth, iheight, config.background);\n        context.beginPath();\n        context.rect(ix, iy, iwidth, iheight);\n        context.clip();\n\n        // @see https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Tutorial/Transformations\n        context.setTransform(\n          this.vpMatrix[0],\n          this.vpMatrix[1],\n          this.vpMatrix[4],\n          this.vpMatrix[5],\n          this.vpMatrix[12],\n          this.vpMatrix[13],\n        );\n\n        // draw dirty rectangle\n        const { enableDirtyRectangleRenderingDebug } =\n          config.renderer.getConfig();\n        if (enableDirtyRectangleRenderingDebug) {\n          canvas.dispatchEvent(\n            new CustomEvent(CanvasEvent.DIRTY_RECTANGLE, {\n              dirtyRect: {\n                x: ix,\n                y: iy,\n                width: iwidth,\n                height: iheight,\n              },\n            }),\n          );\n        }\n\n        // search objects intersect with dirty rectangle\n        const dirtyObjects = this.searchDirtyObjects(dirtyRenderBounds);\n\n        // do rendering\n        dirtyObjects\n          // sort by z-index\n          .sort((a, b) => a.sortable.renderOrder - b.sortable.renderOrder)\n          .forEach((object) => {\n            // culled object should not be rendered\n            if (object && object.isVisible() && !object.isCulled()) {\n              this.renderDisplayObject(\n                object,\n                context,\n                this.context,\n                this.restoreStack,\n                runtime,\n              );\n            }\n          });\n\n        context.restore();\n\n        // save dirty AABBs in last frame\n        this.renderQueue.forEach((object) => {\n          this.saveDirtyAABB(object);\n        });\n\n        // clear queue\n        this.renderQueue = [];\n      }\n\n      // pop restore stack, eg. root -> parent -> child\n      this.restoreStack.forEach(() => {\n        context.restore();\n      });\n      // clear restore stack\n      this.restoreStack = [];\n    });\n\n    renderingService.hooks.render.tap(\n      CanvasRendererPlugin.tag,\n      (object: DisplayObject) => {\n        if (!this.clearFullScreen) {\n          // render at the end of frame\n          this.renderQueue.push(object);\n        }\n      },\n    );\n  }\n\n  private clearRect(\n    context: CanvasRenderingContext2D,\n    x: number,\n    y: number,\n    width: number,\n    height: number,\n    background: string,\n  ) {\n    // clearRect is faster than fillRect @see https://stackoverflow.com/a/30830253\n    context.clearRect(x, y, width, height);\n    if (background) {\n      context.fillStyle = background;\n      context.fillRect(x, y, width, height);\n    }\n  }\n\n  renderDisplayObject(\n    object: DisplayObject,\n    context: CanvasRenderingContext2D,\n    canvasContext: CanvasContext,\n    restoreStack: DisplayObject[],\n    runtime: GlobalRuntime,\n  ) {\n    const { nodeName } = object;\n\n    // console.log('canvas render:', object);\n\n    // restore to its ancestor\n\n    const parent = restoreStack[restoreStack.length - 1];\n    if (\n      parent &&\n      !(\n        object.compareDocumentPosition(parent) & Node.DOCUMENT_POSITION_CONTAINS\n      )\n    ) {\n      context.restore();\n      restoreStack.pop();\n    }\n\n    // @ts-ignore\n    const styleRenderer = this.context.styleRendererFactory[nodeName];\n    const generatePath = this.pathGeneratorFactory[nodeName];\n\n    // clip path\n    const { clipPath } = object.parsedStyle as ParsedBaseStyleProps;\n    if (clipPath) {\n      this.applyWorldTransform(context, clipPath);\n\n      // generate path in local space\n      const generatePath = this.pathGeneratorFactory[clipPath.nodeName];\n      if (generatePath) {\n        context.save();\n\n        // save clip\n        restoreStack.push(object);\n\n        context.beginPath();\n        generatePath(context, clipPath.parsedStyle);\n        context.closePath();\n        context.clip();\n      }\n    }\n\n    // fill & stroke\n\n    if (styleRenderer) {\n      this.applyWorldTransform(context, object);\n\n      context.save();\n\n      // apply attributes to context\n      this.applyAttributesToContext(context, object);\n    }\n\n    if (generatePath) {\n      context.beginPath();\n      generatePath(context, object.parsedStyle);\n      if (\n        object.nodeName !== Shape.LINE &&\n        object.nodeName !== Shape.PATH &&\n        object.nodeName !== Shape.POLYLINE\n      ) {\n        context.closePath();\n      }\n    }\n\n    // fill & stroke\n    if (styleRenderer) {\n      styleRenderer.render(\n        context,\n        object.parsedStyle,\n        object,\n        canvasContext,\n        this,\n        runtime,\n      );\n\n      // restore applied attributes, eg. shadowBlur shadowColor...\n      context.restore();\n    }\n\n    // finish rendering, clear dirty flag\n    object.renderable.dirty = false;\n  }\n\n  private convertAABB2Rect(aabb: AABB): Rect {\n    const min = aabb.getMin();\n    const max = aabb.getMax();\n    // expand the rectangle a bit to avoid artifacts\n    // @see https://www.yuque.com/antv/ou292n/bi8nix#ExvCu\n    const minX = Math.floor(min[0]);\n    const minY = Math.floor(min[1]);\n    const maxX = Math.ceil(max[0]);\n    const maxY = Math.ceil(max[1]);\n    const width = maxX - minX;\n    const height = maxY - minY;\n\n    return { x: minX, y: minY, width, height };\n  }\n\n  /**\n   * TODO: merge dirty rectangles with some strategies.\n   * For now, we just simply merge all the rectangles into one.\n   * @see https://idom.me/articles/841.html\n   */\n  private mergeDirtyAABBs(dirtyObjects: DisplayObject[]): AABB {\n    // merge into a big AABB\n    // TODO: skip descendant if ancestor is caculated, but compareNodePosition is really slow\n    const aabb = new AABB();\n    dirtyObjects.forEach((object) => {\n      const renderBounds = object.getRenderBounds();\n      aabb.add(renderBounds);\n\n      const { dirtyRenderBounds } = object.renderable;\n      if (dirtyRenderBounds) {\n        aabb.add(dirtyRenderBounds);\n      }\n    });\n\n    return aabb;\n  }\n\n  private searchDirtyObjects(dirtyRectangle: AABB): DisplayObject[] {\n    // search in r-tree, get all affected nodes\n    const [minX, minY] = dirtyRectangle.getMin();\n    const [maxX, maxY] = dirtyRectangle.getMax();\n    const rBushNodes = this.rBush.search({\n      minX,\n      minY,\n      maxX,\n      maxY,\n    });\n\n    return rBushNodes.map(({ displayObject }) => displayObject);\n  }\n\n  private saveDirtyAABB(object: DisplayObject) {\n    const { renderable } = object;\n    if (!renderable.dirtyRenderBounds) {\n      renderable.dirtyRenderBounds = new AABB();\n    }\n    const renderBounds = object.getRenderBounds();\n    if (renderBounds) {\n      // save last dirty aabb\n      renderable.dirtyRenderBounds.update(\n        renderBounds.center,\n        renderBounds.halfExtents,\n      );\n    }\n  }\n\n  /**\n   * TODO: batch the same global attributes\n   */\n  private applyAttributesToContext(\n    context: CanvasRenderingContext2D,\n    object: DisplayObject,\n  ) {\n    const { stroke, fill, opacity, lineDash, lineDashOffset } =\n      object.parsedStyle as ParsedBaseStyleProps;\n    // @see https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/setLineDash\n    if (lineDash) {\n      context.setLineDash(lineDash);\n    }\n\n    // @see https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/lineDashOffset\n    if (!isNil(lineDashOffset)) {\n      context.lineDashOffset = lineDashOffset;\n    }\n\n    if (!isNil(opacity)) {\n      context.globalAlpha *= opacity;\n    }\n\n    if (\n      !isNil(stroke) &&\n      !Array.isArray(stroke) &&\n      !(stroke as CSSRGB).isNone\n    ) {\n      context.strokeStyle = object.attributes.stroke;\n    }\n\n    if (!isNil(fill) && !Array.isArray(fill) && !(fill as CSSRGB).isNone) {\n      context.fillStyle = object.attributes.fill;\n    }\n  }\n\n  private applyWorldTransform(\n    context: CanvasRenderingContext2D,\n    object: DisplayObject,\n    matrix?: mat4,\n  ) {\n    // apply clip shape's RTS\n    if (matrix) {\n      mat4.copy(this.tmpMat4, object.getLocalTransform());\n      mat4.multiply(this.tmpMat4, matrix, this.tmpMat4);\n      mat4.multiply(this.tmpMat4, this.vpMatrix, this.tmpMat4);\n    } else {\n      // apply RTS transformation in world space\n      mat4.copy(this.tmpMat4, object.getWorldTransform());\n      mat4.multiply(this.tmpMat4, this.vpMatrix, this.tmpMat4);\n    }\n\n    // @see https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Tutorial/Transformations\n    context.setTransform(\n      this.tmpMat4[0],\n      this.tmpMat4[1],\n      this.tmpMat4[4],\n      this.tmpMat4[5],\n      this.tmpMat4[12],\n      this.tmpMat4[13],\n    );\n  }\n\n  private safeMergeAABB(...aabbs: AABB[]): AABB {\n    const merged = new AABB();\n    aabbs.forEach((aabb) => {\n      merged.add(aabb);\n    });\n    return merged;\n  }\n}\n","import {\n  CanvasContext,\n  CSSGradientValue,\n  CSSRGB,\n  DisplayObject,\n  GlobalRuntime,\n  LinearGradient,\n  ParsedBaseStyleProps,\n  Pattern,\n  RadialGradient,\n  Rect,\n  GradientType,\n  isPattern,\n  Shape,\n} from '@antv/g-lite';\nimport type { ImagePool } from '@antv/g-plugin-image-loader';\nimport { isNil } from '@antv/util';\nimport { CanvasRendererPlugin } from '../../CanvasRendererPlugin';\nimport type { StyleRenderer } from './interfaces';\n\nexport class DefaultRenderer implements StyleRenderer {\n  constructor(private imagePool: ImagePool) {}\n\n  render(\n    context: CanvasRenderingContext2D,\n    parsedStyle: ParsedBaseStyleProps,\n    object: DisplayObject,\n    canvasContext: CanvasContext,\n    plugin: CanvasRendererPlugin,\n    runtime: GlobalRuntime,\n  ) {\n    const {\n      fill,\n      fillRule,\n      opacity = 1,\n      fillOpacity = 1,\n      stroke,\n      strokeOpacity = 1,\n      lineWidth = 1,\n      lineCap,\n      lineJoin,\n      shadowType,\n      shadowColor,\n      shadowBlur,\n      filter,\n      miterLimit,\n    } = parsedStyle;\n    const hasFill = fill && !(fill as CSSRGB).isNone;\n    const hasStroke = stroke && !(stroke as CSSRGB).isNone && lineWidth > 0;\n\n    const isFillTransparent = (fill as CSSRGB)?.alpha === 0;\n    const hasFilter = !!(filter && filter.length);\n    const hasShadow = !isNil(shadowColor) && shadowBlur > 0;\n    const { nodeName } = object;\n    const isInnerShadow = shadowType === 'inner';\n    const shouldDrawShadowWithStroke =\n      hasStroke &&\n      hasShadow &&\n      (nodeName === Shape.PATH ||\n        nodeName === Shape.LINE ||\n        nodeName === Shape.POLYLINE ||\n        isFillTransparent ||\n        isInnerShadow);\n\n    if (hasFill) {\n      context.globalAlpha = opacity * fillOpacity;\n\n      if (!shouldDrawShadowWithStroke) {\n        setShadowAndFilter(object, context, hasShadow);\n      }\n\n      applyFill(\n        context,\n        object,\n        fill,\n        fillRule,\n        canvasContext,\n        plugin,\n        runtime,\n        this.imagePool,\n      );\n\n      if (!shouldDrawShadowWithStroke) {\n        this.clearShadowAndFilter(context, hasFilter, hasShadow);\n      }\n    }\n\n    if (hasStroke) {\n      context.globalAlpha = opacity * strokeOpacity;\n      context.lineWidth = lineWidth;\n      if (!isNil(miterLimit)) {\n        context.miterLimit = miterLimit;\n      }\n\n      if (!isNil(lineCap)) {\n        context.lineCap = lineCap;\n      }\n\n      if (!isNil(lineJoin)) {\n        context.lineJoin = lineJoin;\n      }\n\n      if (shouldDrawShadowWithStroke) {\n        if (isInnerShadow) {\n          context.globalCompositeOperation = 'source-atop';\n        }\n        setShadowAndFilter(object, context, true);\n\n        if (isInnerShadow) {\n          applyStroke(\n            context,\n            object,\n            stroke,\n            canvasContext,\n            plugin,\n            runtime,\n            this.imagePool,\n          );\n          context.globalCompositeOperation = 'source-over';\n          this.clearShadowAndFilter(context, hasFilter, true);\n        }\n      }\n\n      applyStroke(\n        context,\n        object,\n        stroke,\n        canvasContext,\n        plugin,\n        runtime,\n        this.imagePool,\n      );\n    }\n  }\n\n  private clearShadowAndFilter(\n    context: CanvasRenderingContext2D,\n    hasFilter: boolean,\n    hasShadow: boolean,\n  ) {\n    if (hasShadow) {\n      context.shadowColor = 'transparent';\n      context.shadowBlur = 0;\n    }\n\n    if (hasFilter) {\n      // save drop-shadow filter\n      const oldFilter = context.filter;\n      if (!isNil(oldFilter) && oldFilter.indexOf('drop-shadow') > -1) {\n        context.filter =\n          oldFilter.replace(/drop-shadow\\([^)]*\\)/, '').trim() || 'none';\n      }\n    }\n  }\n}\n\n/**\n * apply before fill and stroke but only once\n */\nexport function setShadowAndFilter(\n  object: DisplayObject,\n  context: CanvasRenderingContext2D,\n  hasShadow: boolean,\n) {\n  const { filter, shadowColor, shadowBlur, shadowOffsetX, shadowOffsetY } =\n    object.parsedStyle as ParsedBaseStyleProps;\n\n  if (filter && filter.length) {\n    // use raw filter string\n    context.filter = object.style.filter;\n  }\n\n  if (hasShadow) {\n    context.shadowColor = shadowColor.toString();\n    context.shadowBlur = shadowBlur || 0;\n    context.shadowOffsetX = shadowOffsetX || 0;\n    context.shadowOffsetY = shadowOffsetY || 0;\n  }\n}\n\nexport function getPattern(\n  pattern: Pattern,\n  object: DisplayObject,\n  context: CanvasRenderingContext2D,\n  canvasContext: CanvasContext,\n  plugin: CanvasRendererPlugin,\n  runtime: GlobalRuntime,\n  imagePool: ImagePool,\n): CanvasPattern {\n  let $offscreenCanvas: HTMLCanvasElement;\n  let dpr: number;\n  if ((pattern.image as Rect).nodeName === 'rect') {\n    const { width, height } = (pattern.image as Rect).parsedStyle;\n    dpr = canvasContext.contextService.getDPR();\n    const { offscreenCanvas } = canvasContext.config;\n    $offscreenCanvas = runtime.offscreenCanvasCreator.getOrCreateCanvas(\n      offscreenCanvas,\n    ) as HTMLCanvasElement;\n\n    $offscreenCanvas.width = width * dpr;\n    $offscreenCanvas.height = height * dpr;\n\n    const offscreenCanvasContext =\n      runtime.offscreenCanvasCreator.getOrCreateContext(\n        offscreenCanvas,\n      ) as CanvasRenderingContext2D;\n\n    const restoreStack = [];\n\n    // offscreenCanvasContext.scale(1 / dpr, 1 / dpr);\n\n    (pattern.image as Rect).forEach((object: DisplayObject) => {\n      plugin.renderDisplayObject(\n        object,\n        offscreenCanvasContext,\n        canvasContext,\n        restoreStack,\n        runtime,\n      );\n    });\n\n    restoreStack.forEach(() => {\n      offscreenCanvasContext.restore();\n    });\n  }\n\n  const canvasPattern = imagePool.getOrCreatePatternSync(\n    object,\n    pattern,\n    context,\n    $offscreenCanvas,\n    dpr,\n    object.getGeometryBounds().min,\n    () => {\n      // set dirty rectangle flag\n      object.renderable.dirty = true;\n      canvasContext.renderingService.dirtify();\n    },\n  );\n\n  return canvasPattern;\n}\n\nexport function getColor(\n  parsedColor: CSSGradientValue,\n  object: DisplayObject,\n  context: CanvasRenderingContext2D,\n  imagePool: ImagePool,\n) {\n  let color: CanvasGradient | string;\n\n  if (\n    parsedColor.type === GradientType.LinearGradient ||\n    parsedColor.type === GradientType.RadialGradient\n  ) {\n    const bounds = object.getGeometryBounds();\n    const width = (bounds && bounds.halfExtents[0] * 2) || 1;\n    const height = (bounds && bounds.halfExtents[1] * 2) || 1;\n    const min = (bounds && bounds.min) || [0, 0];\n    color = imagePool.getOrCreateGradient(\n      {\n        type: parsedColor.type,\n        ...(parsedColor.value as LinearGradient & RadialGradient),\n        min: min as [number, number],\n        width,\n        height,\n      },\n      context,\n    );\n  }\n\n  return color;\n}\n\nexport function applyFill(\n  context: CanvasRenderingContext2D,\n  object: DisplayObject,\n  fill: CSSRGB | CSSGradientValue[] | Pattern,\n  fillRule: 'nonzero' | 'evenodd',\n  canvasContext: CanvasContext,\n  plugin: CanvasRendererPlugin,\n  runtime: GlobalRuntime,\n  imagePool: ImagePool,\n  skipFill = false,\n) {\n  if (Array.isArray(fill)) {\n    fill.forEach((gradient) => {\n      context.fillStyle = getColor(gradient, object, context, imagePool);\n      if (!skipFill) {\n        fillRule ? context.fill(fillRule) : context.fill();\n      }\n    });\n  } else {\n    if (isPattern(fill)) {\n      context.fillStyle = getPattern(\n        fill,\n        object,\n        context,\n        canvasContext,\n        plugin,\n        runtime,\n        imagePool,\n      );\n    }\n    if (!skipFill) {\n      fillRule ? context.fill(fillRule) : context.fill();\n    }\n  }\n}\n\nexport function applyStroke(\n  context: CanvasRenderingContext2D,\n  object: DisplayObject,\n  stroke: CSSRGB | CSSGradientValue[] | Pattern,\n  canvasContext: CanvasContext,\n  plugin: CanvasRendererPlugin,\n  runtime: GlobalRuntime,\n  imagePool: ImagePool,\n  skipStroke = false,\n) {\n  if (Array.isArray(stroke)) {\n    stroke.forEach((gradient) => {\n      context.strokeStyle = getColor(gradient, object, context, imagePool);\n      if (!skipStroke) {\n        context.stroke();\n      }\n    });\n  } else {\n    if (isPattern(stroke)) {\n      context.strokeStyle = getPattern(\n        stroke,\n        object,\n        context,\n        canvasContext,\n        plugin,\n        runtime,\n        imagePool,\n      );\n    }\n    if (!skipStroke) {\n      context.stroke();\n    }\n  }\n}\n","function _classPrivateFieldBase(e, t) {\n  if (!{}.hasOwnProperty.call(e, t)) throw new TypeError(\"attempted to use private field on non-instance\");\n  return e;\n}\nexport { _classPrivateFieldBase as default };","var id = 0;\nfunction _classPrivateFieldKey(e) {\n  return \"__private_\" + id++ + \"_\" + e;\n}\nexport { _classPrivateFieldKey as default };","import type { DisplayObject, ParsedImageStyleProps } from '@antv/g-lite';\nimport { ImagePool, type ImageCache } from '@antv/g-plugin-image-loader';\nimport { isNil } from '@antv/util';\nimport { mat4 } from 'gl-matrix';\nimport { setShadowAndFilter } from './Default';\nimport type { StyleRenderer } from './interfaces';\nimport { transformRect, calculateOverlapRect } from '../../utils/math';\n\nexport class ImageRenderer implements StyleRenderer {\n  constructor(private imagePool: ImagePool) {}\n\n  static renderFull(\n    context: CanvasRenderingContext2D,\n    parsedStyle: ParsedImageStyleProps,\n    object: DisplayObject,\n    data: {\n      image: HTMLImageElement;\n      drawRect: [number, number, number, number];\n    },\n  ) {\n    context.drawImage(\n      data.image,\n      Math.floor(data.drawRect[0]),\n      Math.floor(data.drawRect[1]),\n      Math.ceil(data.drawRect[2]),\n      Math.ceil(data.drawRect[3]),\n    );\n  }\n\n  #renderDownSampled(\n    context: CanvasRenderingContext2D,\n    parsedStyle: ParsedImageStyleProps,\n    object: DisplayObject,\n    data: {\n      src: string | HTMLImageElement;\n      imageCache: ImageCache;\n      drawRect: [number, number, number, number];\n    },\n  ) {\n    const { src, imageCache } = data;\n\n    if (!imageCache.downSampled) {\n      this.imagePool\n        .createDownSampledImage(src, object)\n        .then((res) => {\n          // rerender\n          object.renderable.dirty = true;\n          object.ownerDocument.defaultView.context.renderingService.dirtify();\n        })\n        .catch(() => {\n          //\n        });\n\n      return;\n    }\n\n    context.drawImage(\n      imageCache.downSampled,\n      Math.floor(data.drawRect[0]),\n      Math.floor(data.drawRect[1]),\n      Math.ceil(data.drawRect[2]),\n      Math.ceil(data.drawRect[3]),\n    );\n  }\n\n  #renderTile(\n    context: CanvasRenderingContext2D,\n    parsedStyle: ParsedImageStyleProps,\n    object: DisplayObject,\n    data: {\n      src: string | HTMLImageElement;\n      imageCache: ImageCache;\n      imageRect: [number, number, number, number];\n      drawRect: [number, number, number, number];\n    },\n  ) {\n    const { src, imageCache, imageRect, drawRect } = data;\n    const { size: originalSize } = imageCache;\n    const { a, b, c, d, e, f } = context.getTransform();\n\n    context.resetTransform();\n\n    if (!imageCache?.gridSize) {\n      this.imagePool\n        .createImageTiles(src, [], object)\n        .then(() => {\n          // rerender\n          object.renderable.dirty = true;\n          object.ownerDocument.defaultView.context.renderingService.dirtify();\n        })\n        .catch(() => {\n          //\n        });\n\n      return;\n    }\n\n    const scaleToOrigin = [\n      originalSize[0] / imageRect[2],\n      originalSize[1] / imageRect[3],\n    ];\n    const scaledTileSize = [\n      imageCache.tileSize[0] / scaleToOrigin[0],\n      imageCache.tileSize[1] / scaleToOrigin[1],\n    ];\n    const [startTileX, endTileX] = [\n      Math.floor((drawRect[0] - imageRect[0]) / scaledTileSize[0]),\n      Math.ceil((drawRect[0] + drawRect[2] - imageRect[0]) / scaledTileSize[0]),\n    ];\n    const [startTileY, endTileY] = [\n      Math.floor((drawRect[1] - imageRect[1]) / scaledTileSize[1]),\n      Math.ceil((drawRect[1] + drawRect[3] - imageRect[1]) / scaledTileSize[1]),\n    ];\n\n    for (let tileY = startTileY; tileY <= endTileY; tileY++) {\n      for (let tileX = startTileX; tileX <= endTileX; tileX++) {\n        const item = imageCache.tiles[tileY][tileX];\n\n        if (item) {\n          const tileRect = [\n            Math.floor(imageRect[0] + item.tileX * scaledTileSize[0]),\n            Math.floor(imageRect[1] + item.tileY * scaledTileSize[1]),\n            Math.ceil(scaledTileSize[0]),\n            Math.ceil(scaledTileSize[1]),\n          ];\n\n          context.drawImage(\n            item.data,\n            tileRect[0],\n            tileRect[1],\n            tileRect[2],\n            tileRect[3],\n          );\n        }\n      }\n    }\n\n    context.setTransform(a, b, c, d, e, f);\n  }\n\n  render(\n    context: CanvasRenderingContext2D,\n    parsedStyle: ParsedImageStyleProps,\n    object: DisplayObject,\n  ) {\n    const {\n      x = 0,\n      y = 0,\n      width,\n      height,\n      src,\n      shadowColor,\n      shadowBlur,\n    } = parsedStyle;\n\n    const imageCache = this.imagePool.getImageSync(src, object);\n    const image = imageCache?.img;\n    let iw = width;\n    let ih = height;\n\n    if (!image) {\n      return;\n    }\n\n    iw ||= image.width;\n    ih ||= image.height;\n\n    const hasShadow = !isNil(shadowColor) && shadowBlur > 0;\n    setShadowAndFilter(object, context, hasShadow);\n\n    // node-canvas will throw the following err:\n    // Error: Image given has not completed loading\n    try {\n      const { width: viewWidth, height: viewHeight } =\n        object.ownerDocument.defaultView.getContextService().getDomElement();\n\n      const currentTransform = context.getTransform();\n      const { a, b, c, d, e, f } = currentTransform;\n      // 构建 mat4 矩阵\n      // prettier-ignore\n      const transformMatrix = mat4.fromValues(\n          a, c, 0, 0,\n          b, d, 0, 0,\n          0, 0, 1, 0,\n          e, f, 0, 1,\n        );\n      const imageRect = transformRect([x, y, iw, ih], transformMatrix);\n      const drawRect = calculateOverlapRect(\n        [0, 0, viewWidth, viewHeight],\n        imageRect,\n      );\n\n      if (!drawRect) {\n        return;\n      }\n\n      if (\n        !object.ownerDocument.defaultView.getConfig()\n          .enableLargeImageOptimization\n      ) {\n        ImageRenderer.renderFull(context, parsedStyle, object, {\n          image,\n          drawRect: [x, y, iw, ih],\n        });\n\n        return;\n      }\n\n      const sizeOfOrigin = imageRect[2] / imageCache.size[0];\n\n      if (sizeOfOrigin < (imageCache.downSamplingRate || 0.5)) {\n        this.#renderDownSampled(context, parsedStyle, object, {\n          src,\n          imageCache,\n          drawRect: [x, y, iw, ih],\n        });\n\n        return;\n      }\n\n      if (!ImagePool.isSupportTile) {\n        ImageRenderer.renderFull(context, parsedStyle, object, {\n          image,\n          drawRect: [x, y, iw, ih],\n        });\n\n        return;\n      }\n\n      this.#renderTile(context, parsedStyle, object, {\n        src,\n        imageCache,\n        imageRect,\n        drawRect,\n      });\n    } catch {}\n  }\n}\n","import { vec3, mat4 } from 'gl-matrix';\n\n/**\n * 判断两个点是否重合，点坐标的格式为 [x, y]\n */\nexport function isSamePoint(\n  point1: [number, number],\n  point2: [number, number],\n) {\n  return point1[0] === point2[0] && point1[1] === point2[1];\n}\n\nexport function calculateOverlapRect<\n  Rect extends [number, number, number, number],\n>(rect1: Rect, rect2: Rect): null | Rect {\n  const [x1, y1, w1, h1] = rect1;\n  const [x2, y2, w2, h2] = rect2;\n\n  // 计算重叠区域的左上角和右下角\n  const overlapLeft = Math.max(x1, x2);\n  const overlapTop = Math.max(y1, y2);\n  const overlapRight = Math.min(x1 + w1, x2 + w2);\n  const overlapBottom = Math.min(y1 + h1, y2 + h2);\n\n  if (overlapRight <= overlapLeft || overlapBottom <= overlapTop) {\n    return null;\n  }\n\n  return [\n    overlapLeft,\n    overlapTop,\n    overlapRight - overlapLeft,\n    overlapBottom - overlapTop,\n  ] as Rect;\n}\n\nexport function transformRect<Rect extends [number, number, number, number]>(\n  rect: Rect,\n  matrix: mat4,\n): Rect {\n  const tl = vec3.transformMat4(vec3.create(), [rect[0], rect[1], 0], matrix);\n  const tr = vec3.transformMat4(\n    vec3.create(),\n    [rect[0] + rect[2], rect[1], 0],\n    matrix,\n  );\n  const bl = vec3.transformMat4(\n    vec3.create(),\n    [rect[0], rect[1] + rect[3], 0],\n    matrix,\n  );\n  const br = vec3.transformMat4(\n    vec3.create(),\n    [rect[0] + rect[2], rect[1] + rect[3], 0],\n    matrix,\n  );\n\n  return [\n    Math.min(tl[0], tr[0], bl[0], br[0]),\n    Math.min(tl[1], tr[1], bl[1], br[1]),\n    Math.max(tl[0], tr[0], bl[0], br[0]) - Math.min(tl[0], tr[0], bl[0], br[0]),\n    Math.max(tl[1], tr[1], bl[1], br[1]) - Math.min(tl[1], tr[1], bl[1], br[1]),\n  ] as Rect;\n}\n","import {\n  type CSSRGB,\n  type CanvasContext,\n  type DisplayObject,\n  type GlobalRuntime,\n  type ParsedTextStyleProps,\n  type Rectangle,\n  CSSGradientValue,\n  Pattern,\n} from '@antv/g-lite';\nimport { isNil } from '@antv/util';\nimport { ImagePool } from '@antv/g-plugin-image-loader';\nimport { applyFill, applyStroke, setShadowAndFilter } from './Default';\nimport type { StyleRenderer } from './interfaces';\nimport { CanvasRendererPlugin } from '../../CanvasRendererPlugin';\n\nexport class TextRenderer implements StyleRenderer {\n  constructor(private imagePool: ImagePool) {}\n\n  render(\n    context: CanvasRenderingContext2D,\n    parsedStyle: ParsedTextStyleProps,\n    object: DisplayObject,\n    canvasContext: CanvasContext,\n    plugin: CanvasRendererPlugin,\n    runtime: GlobalRuntime,\n  ) {\n    // Trigger text geometry calculation.\n    object.getBounds();\n    const {\n      lineWidth = 1,\n      textAlign = 'start',\n      textBaseline = 'alphabetic',\n      lineJoin = 'miter',\n      miterLimit = 10,\n      letterSpacing = 0,\n      stroke,\n      fill,\n      fillRule,\n      fillOpacity = 1,\n      strokeOpacity = 1,\n      opacity = 1,\n      metrics,\n      x = 0,\n      y = 0,\n      dx,\n      dy,\n      shadowColor,\n      shadowBlur,\n    } = parsedStyle;\n\n    const { font, lines, height, lineHeight, lineMetrics } = metrics;\n\n    context.font = font;\n    context.lineWidth = lineWidth;\n    context.textAlign = textAlign === 'middle' ? 'center' : textAlign;\n\n    let formattedTextBaseline = textBaseline;\n    if (formattedTextBaseline === 'alphabetic') {\n      formattedTextBaseline = 'bottom';\n    }\n\n    context.lineJoin = lineJoin;\n    if (!isNil(miterLimit)) {\n      context.miterLimit = miterLimit;\n    }\n\n    let linePositionY = y;\n    // handle vertical text baseline\n    if (textBaseline === 'middle') {\n      linePositionY += -height / 2 - lineHeight / 2;\n    } else if (\n      textBaseline === 'bottom' ||\n      textBaseline === 'alphabetic' ||\n      textBaseline === 'ideographic'\n    ) {\n      linePositionY += -height;\n    } else if (textBaseline === 'top' || textBaseline === 'hanging') {\n      linePositionY += -lineHeight;\n    }\n\n    // account for dx & dy\n    const offsetX = x + (dx || 0);\n    linePositionY += dy || 0;\n\n    if (lines.length === 1) {\n      if (formattedTextBaseline === 'bottom') {\n        formattedTextBaseline = 'middle';\n        linePositionY -= 0.5 * height;\n      } else if (formattedTextBaseline === 'top') {\n        formattedTextBaseline = 'middle';\n        linePositionY += 0.5 * height;\n      }\n    }\n    context.textBaseline = formattedTextBaseline;\n\n    const hasShadow = !isNil(shadowColor) && shadowBlur > 0;\n    setShadowAndFilter(object, context, hasShadow);\n\n    // draw lines line by line\n    for (let i = 0; i < lines.length; i++) {\n      const linePositionX = lineWidth / 2 + offsetX;\n      linePositionY += lineHeight;\n\n      // no need to re-position X, cause we already set text align\n      // @see https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/textAlign\n      if (!isNil(stroke) && !(stroke as CSSRGB).isNone && lineWidth) {\n        this.drawLetterSpacing(\n          context,\n          object,\n          lines[i],\n          lineMetrics[i],\n          textAlign,\n          linePositionX,\n          linePositionY,\n          letterSpacing,\n          fill,\n          fillRule,\n          fillOpacity,\n          stroke,\n          strokeOpacity,\n          opacity,\n          true,\n          canvasContext,\n          plugin,\n          runtime,\n        );\n      }\n      if (!isNil(fill)) {\n        this.drawLetterSpacing(\n          context,\n          object,\n          lines[i],\n          lineMetrics[i],\n          textAlign,\n          linePositionX,\n          linePositionY,\n          letterSpacing,\n          fill,\n          fillRule,\n          fillOpacity,\n          stroke,\n          strokeOpacity,\n          opacity,\n          false,\n          canvasContext,\n          plugin,\n          runtime,\n        );\n      }\n    }\n  }\n\n  private drawLetterSpacing(\n    context: CanvasRenderingContext2D,\n    object: DisplayObject,\n    text: string,\n    lineMetrics: Rectangle,\n    textAlign: CanvasTextAlign | 'middle',\n    x: number,\n    y: number,\n    letterSpacing: number,\n    fill: CSSRGB | CSSGradientValue[] | Pattern,\n    fillRule: 'nonzero' | 'evenodd',\n    fillOpacity: number | undefined,\n    stroke: CSSRGB | CSSGradientValue[] | Pattern,\n    strokeOpacity: number | undefined,\n    opacity: number | undefined,\n    isStroke: boolean,\n    canvasContext: CanvasContext,\n    plugin: CanvasRendererPlugin,\n    runtime: GlobalRuntime,\n  ): void {\n    // letterSpacing of 0 means normal, render all texts directly\n    if (letterSpacing === 0) {\n      if (isStroke) {\n        this.strokeText(\n          context,\n          object,\n          text,\n          x,\n          y,\n          stroke,\n          strokeOpacity,\n          canvasContext,\n          plugin,\n          runtime,\n        );\n      } else {\n        this.fillText(\n          context,\n          object,\n          text,\n          x,\n          y,\n          fill,\n          fillRule,\n          fillOpacity,\n          opacity,\n          canvasContext,\n          plugin,\n          runtime,\n        );\n      }\n      return;\n    }\n\n    // draw text using left align\n    const currentTextAlign = context.textAlign;\n    context.textAlign = 'left';\n\n    let currentPosition = x;\n    if (textAlign === 'center' || textAlign === 'middle') {\n      currentPosition = x - lineMetrics.width / 2;\n    } else if (textAlign === 'right' || textAlign === 'end') {\n      currentPosition = x - lineMetrics.width;\n    }\n\n    const stringArray = Array.from(text);\n    let previousWidth = context.measureText(text).width;\n    let currentWidth = 0;\n    for (let i = 0; i < stringArray.length; ++i) {\n      const currentChar = stringArray[i];\n      if (isStroke) {\n        this.strokeText(\n          context,\n          object,\n          currentChar,\n          currentPosition,\n          y,\n          stroke,\n          strokeOpacity,\n          canvasContext,\n          plugin,\n          runtime,\n        );\n      } else {\n        this.fillText(\n          context,\n          object,\n          currentChar,\n          currentPosition,\n          y,\n          fill,\n          fillRule,\n          fillOpacity,\n          opacity,\n          canvasContext,\n          plugin,\n          runtime,\n        );\n      }\n      currentWidth = context.measureText(text.substring(i + 1)).width;\n      currentPosition += previousWidth - currentWidth + letterSpacing;\n      previousWidth = currentWidth;\n    }\n\n    context.textAlign = currentTextAlign;\n  }\n\n  private fillText(\n    context: CanvasRenderingContext2D,\n    object: DisplayObject,\n    text: string,\n    x: number,\n    y: number,\n    fill: CSSRGB | CSSGradientValue[] | Pattern,\n    fillRule: 'nonzero' | 'evenodd',\n    fillOpacity: number | undefined,\n    opacity: number | undefined,\n    canvasContext: CanvasContext,\n    plugin: CanvasRendererPlugin,\n    runtime: GlobalRuntime,\n  ) {\n    applyFill(\n      context,\n      object,\n      fill,\n      fillRule,\n      canvasContext,\n      plugin,\n      runtime,\n      this.imagePool,\n      true,\n    );\n\n    let currentGlobalAlpha: number;\n    const applyOpacity = !isNil(fillOpacity) && fillOpacity !== 1;\n    if (applyOpacity) {\n      currentGlobalAlpha = context.globalAlpha;\n      context.globalAlpha = fillOpacity * opacity;\n    }\n    context.fillText(text, x, y);\n    if (applyOpacity) {\n      context.globalAlpha = currentGlobalAlpha;\n    }\n  }\n\n  private strokeText(\n    context: CanvasRenderingContext2D,\n    object: DisplayObject,\n    text: string,\n    x: number,\n    y: number,\n    stroke: CSSRGB | CSSGradientValue[] | Pattern,\n    strokeOpacity: number | undefined,\n    canvasContext: CanvasContext,\n    plugin: CanvasRendererPlugin,\n    runtime: GlobalRuntime,\n  ) {\n    applyStroke(\n      context,\n      object,\n      stroke,\n      canvasContext,\n      plugin,\n      runtime,\n      this.imagePool,\n      true,\n    );\n\n    let currentGlobalAlpha: number;\n    const applyOpacity = !isNil(strokeOpacity) && strokeOpacity !== 1;\n    if (applyOpacity) {\n      currentGlobalAlpha = context.globalAlpha;\n      context.globalAlpha = strokeOpacity!;\n    }\n    context.strokeText(text, x, y);\n    if (applyOpacity) {\n      context.globalAlpha = currentGlobalAlpha;\n    }\n  }\n}\n","import { DefaultRenderer } from './Default';\n\nexport class RectRenderer extends DefaultRenderer {}\n","import { DefaultRenderer } from './Default';\n\nexport class CircleRenderer extends DefaultRenderer {}\n","import { DefaultRenderer } from './Default';\n\nexport class EllipseRenderer extends DefaultRenderer {}\n","import { DefaultRenderer } from './Default';\n\nexport class LineRenderer extends DefaultRenderer {}\n","import { DefaultRenderer } from './Default';\n\nexport class PolylineRenderer extends DefaultRenderer {}\n","import { DefaultRenderer } from './Default';\n\nexport class PolygonRenderer extends DefaultRenderer {}\n","import { DefaultRenderer } from './Default';\n\nexport class PathRenderer extends DefaultRenderer {}\n","import { AbstractRendererPlugin, Shape } from '@antv/g-lite';\nimport { CanvasRendererPlugin } from './CanvasRendererPlugin';\nimport type { StyleRenderer } from './shapes/styles';\nimport { DefaultRenderer } from './shapes/styles/Default';\nimport { ImageRenderer } from './shapes/styles/Image';\nimport { TextRenderer } from './shapes/styles/Text';\nimport type { CanvasRendererPluginOptions } from './interfaces';\n\nexport * from './shapes/styles';\n\nexport class Plugin extends AbstractRendererPlugin<{\n  defaultStyleRendererFactory: Record<Shape, StyleRenderer>;\n  styleRendererFactory: Record<Shape, StyleRenderer>;\n}> {\n  name = 'canvas-renderer';\n\n  constructor(private options: Partial<CanvasRendererPluginOptions> = {}) {\n    super();\n  }\n\n  init(): void {\n    const canvasRendererPluginOptions: CanvasRendererPluginOptions = {\n      dirtyObjectNumThreshold: 500,\n      dirtyObjectRatioThreshold: 0.8,\n      ...this.options,\n    };\n\n    // @ts-ignore\n    const { imagePool } = this.context;\n\n    const defaultRenderer = new DefaultRenderer(imagePool);\n\n    const defaultStyleRendererFactory: Record<Shape, StyleRenderer> = {\n      [Shape.CIRCLE]: defaultRenderer,\n      [Shape.ELLIPSE]: defaultRenderer,\n      [Shape.RECT]: defaultRenderer,\n      [Shape.IMAGE]: new ImageRenderer(imagePool),\n      [Shape.TEXT]: new TextRenderer(imagePool),\n      [Shape.LINE]: defaultRenderer,\n      [Shape.POLYLINE]: defaultRenderer,\n      [Shape.POLYGON]: defaultRenderer,\n      [Shape.PATH]: defaultRenderer,\n      [Shape.GROUP]: undefined,\n      [Shape.HTML]: undefined,\n      [Shape.MESH]: undefined,\n    };\n\n    this.context.defaultStyleRendererFactory = defaultStyleRendererFactory;\n    this.context.styleRendererFactory = defaultStyleRendererFactory;\n\n    this.addRenderingPlugin(\n      new CanvasRendererPlugin(canvasRendererPluginOptions),\n    );\n  }\n  destroy(): void {\n    this.removeAllRenderingPlugins();\n\n    delete this.context.defaultStyleRendererFactory;\n    delete this.context.styleRendererFactory;\n  }\n}\n"],"names":["_typeof","o","Symbol","iterator","constructor","prototype","toPropertyKey","t","i","r","e","toPrimitive","call","TypeError","String","Number","_defineProperty","Object","defineProperty","value","enumerable","configurable","writable","ownKeys","keys","getOwnPropertySymbols","filter","getOwnPropertyDescriptor","push","apply","_objectSpread2","arguments","length","forEach","getOwnPropertyDescriptors","defineProperties","_classCallCheck","a","n","_defineProperties","key","_createClass","_getPrototypeOf","setPrototypeOf","getPrototypeOf","bind","__proto__","_isNativeReflectConstruct","Boolean","valueOf","Reflect","construct","_possibleConstructorReturn","ReferenceError","assertThisInitialized","_callSuper","possibleConstructorReturn","isNativeReflectConstruct","_setPrototypeOf","_inherits","create","_arrayLikeToArray","Array","_unsupportedIterableToArray","arrayLikeToArray","toString","slice","name","from","test","_slicedToArray","isArray","arrayWithHoles","l","u","f","next","done","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest","_toConsumableArray","arrayWithoutHoles","iterableToArray","nonIterableSpread","isNil$1","ARRAY_TYPE","Float32Array","out","glMatrix.ARRAY_TYPE","copy","multiply","b","a00","a01","a02","a03","a10","a11","a12","a13","a20","a21","a22","a23","a30","a31","a32","a33","b0","b1","b2","b3","transformMat4","m","x","y","z","w","Math","hypot","sqrt","CanvasRendererPlugin","canvasRendererPluginOptions","this","removedRBushNodeAABBs","renderQueue","restoreStack","clearFullScreenLastFrame","clearFullScreen","vpMatrix","mat4","dprMatrix","tmpMat4","vec3a","vec3","vec3b","vec3c","vec3d","context","runtime","_this","config","camera","renderingService","renderingContext","pathGeneratorFactory","rBush","rBushRoot","contextService","canvas","root","ownerDocument","defaultView","handleUnmounted","rBushNode","target","aabb","handleCulled","hooks","init","tap","tag","addEventListener","ElementEvent","UNMOUNTED","CULLED","dpr","getDPR","width","height","getContext","clearRect","background","destroy","removeEventListener","beginFrame","_canvas$context$rende","_this$canvasRendererP","dirtyObjectNumThreshold","dirtyObjectRatioThreshold","_renderingService$get","getStats","rendered","ratio","total","renderingPlugins","isFirstTimeRenderingFinished","disableDirtyRectangleRendering","resetTransform","setTransform","renderByZIndex","object","isVisible","isCulled","renderDisplayObject","sortable","sorted","childNodes","child","endFrame","v","getOrthoMatrix","dirtyRenderBounds","safeMergeAABB","mergeDirtyAABBs","concat","map","_ref","minX","minY","maxX","maxY","AABB","setMinMax","isEmpty","dirtyRect","convertAABB2Rect","tl","tr","bl","br","minx","min","miny","maxx","max","maxy","ix","floor","iy","iwidth","ceil","iheight","save","beginPath","rect","clip","renderer","getConfig","enableDirtyRectangleRenderingDebug","dispatchEvent","CustomEvent","CanvasEvent","DIRTY_RECTANGLE","searchDirtyObjects","sort","renderOrder","restore","saveDirtyAABB","render","fillStyle","fillRect","canvasContext","nodeName","parent","compareDocumentPosition","Node","DOCUMENT_POSITION_CONTAINS","pop","styleRenderer","styleRendererFactory","generatePath","clipPath","parsedStyle","applyWorldTransform","closePath","applyAttributesToContext","Shape","LINE","PATH","POLYLINE","renderable","dirty","getMin","getMax","dirtyObjects","renderBounds","getRenderBounds","add","dirtyRectangle","_dirtyRectangle$getMi2","_dirtyRectangle$getMa2","search","_ref3","displayObject","update","center","halfExtents","_ref4","stroke","fill","opacity","lineDash","lineDashOffset","setLineDash","isNil","globalAlpha","isNone","strokeStyle","attributes","matrix","getLocalTransform","getWorldTransform","merged","_len","aabbs","_key","DefaultRenderer","imagePool","plugin","fillRule","_parsedStyle$opacity","_parsedStyle$fillOpac","fillOpacity","_parsedStyle$strokeOp","strokeOpacity","_parsedStyle$lineWidt","lineWidth","lineCap","lineJoin","shadowType","shadowBlur","miterLimit","hasFill","hasStroke","isFillTransparent","alpha","hasFilter","hasShadow","shadowColor","isInnerShadow","shouldDrawShadowWithStroke","setShadowAndFilter","applyFill","clearShadowAndFilter","globalCompositeOperation","applyStroke","oldFilter","indexOf","replace","trim","shadowOffsetX","shadowOffsetY","style","getPattern","pattern","$offscreenCanvas","image","_parsedStyle","offscreenCanvas","offscreenCanvasCreator","getOrCreateCanvas","offscreenCanvasContext","getOrCreateContext","getOrCreatePatternSync","getGeometryBounds","dirtify","getColor","parsedColor","color","type","GradientType","LinearGradient","RadialGradient","bounds","getOrCreateGradient","_objectSpread","skipFill","undefined","gradient","isPattern","skipStroke","_classPrivateFieldBase","hasOwnProperty","id","_classPrivateFieldKey","_renderDownSampled","_classPrivateFieldLooseKey","_renderTile","ImageRenderer","_renderTile2","_renderDownSampled2","_parsedStyle$x","_parsedStyle$y","src","imageCache","getImageSync","img","iw","ih","rect2","_rect","x1","y1","w1","h1","_rect2","x2","y2","w2","h2","overlapLeft","overlapTop","overlapRight","overlapBottom","m00","m01","m02","m03","m10","m11","m12","m13","m20","m21","m22","m23","m30","m31","m32","m33","_object$ownerDocument","getContextService","getDomElement","viewWidth","viewHeight","currentTransform","getTransform","transformMatrix","c","d","imageRect","drawRect","enableLargeImageOptimization","renderFull","downSamplingRate","size","_classPrivateFieldLooseBase","ImagePool","isSupportTile","_unused","data","drawImage","downSampled","createDownSampledImage","then","res","originalSize","_context$getTransform","gridSize","scaleToOrigin","scaledTileSize","tileSize","startTileX","endTileX","_ref2","endTileY","tileY","tileX","item","tiles","tileRect","createImageTiles","TextRenderer","getBounds","_parsedStyle$textAlig","textAlign","_parsedStyle$textBase","textBaseline","_parsedStyle$lineJoin","_parsedStyle$miterLim","_parsedStyle$letterSp","letterSpacing","metrics","dx","dy","lines","lineHeight","lineMetrics","font","formattedTextBaseline","linePositionY","offsetX","linePositionX","drawLetterSpacing","text","isStroke","currentTextAlign","currentPosition","stringArray","previousWidth","measureText","currentWidth","currentChar","strokeText","fillText","substring","currentGlobalAlpha","applyOpacity","RectRenderer","_DefaultRenderer","CircleRenderer","EllipseRenderer","LineRenderer","PolylineRenderer","PolygonRenderer","PathRenderer","Plugin","_AbstractRendererPlug","options","_defaultStyleRenderer","defaultRenderer","defaultStyleRendererFactory","CIRCLE","ELLIPSE","RECT","IMAGE","TEXT","POLYGON","GROUP","HTML","MESH","addRenderingPlugin","removeAllRenderingPlugins","AbstractRendererPlugin"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,30,31]}