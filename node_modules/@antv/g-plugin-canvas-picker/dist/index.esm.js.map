{"version":3,"file":"index.esm.js","sources":["../src/CanvasPickerPlugin.ts","../src/Circle.ts","../src/Ellipse.ts","../src/utils/math.ts","../src/Line.ts","../src/Path.ts","../src/Polygon.ts","../src/Polyline.ts","../src/Rect.ts","../src/Image.ts","../src/Text.ts","../src/index.ts"],"sourcesContent":["import type {\n  BaseStyleProps,\n  DisplayObject,\n  ParsedBaseStyleProps,\n  PickingResult,\n  RenderingPlugin,\n  Shape,\n  IDocument,\n  RenderingPluginContext,\n  GlobalRuntime,\n} from '@antv/g-lite';\nimport { findClosestClipPathTarget, Point } from '@antv/g-lite';\nimport type { PathGenerator } from '@antv/g-plugin-canvas-path-generator';\nimport { mat4, vec3 } from 'gl-matrix';\n\nexport type PointInPathPicker<T extends BaseStyleProps> = (\n  displayObject: DisplayObject<T>,\n  point: Point,\n  isClipPath: boolean,\n  isPointInPath: (displayObject: DisplayObject<T>, point: Point) => boolean,\n  context: RenderingPluginContext,\n  runtime: GlobalRuntime,\n) => boolean;\n\nconst tmpVec3a = vec3.create();\nconst tmpVec3b = vec3.create();\nconst tmpVec3c = vec3.create();\nconst tmpMat4 = mat4.create();\n\ninterface Extended {\n  pathGeneratorFactory: Record<Shape, PathGenerator<any>>;\n  pointInPathPickerFactory: Record<Shape, PointInPathPicker<any>>;\n}\n\n/**\n * pick shape(s) with Mouse/Touch event\n *\n * 1. find AABB with r-tree\n * 2. do math calculation with geometry in an accurate way\n */\nexport class CanvasPickerPlugin implements RenderingPlugin {\n  static tag = 'CanvasPicker';\n\n  private context: RenderingPluginContext & Extended;\n  private runtime: GlobalRuntime;\n\n  apply(context: RenderingPluginContext, runtime: GlobalRuntime) {\n    const { renderingService, renderingContext } = context;\n    this.context = context as RenderingPluginContext & Extended;\n    this.runtime = runtime;\n\n    const document = renderingContext.root?.ownerDocument;\n\n    renderingService.hooks.pick.tapPromise(\n      CanvasPickerPlugin.tag,\n      async (result: PickingResult) => {\n        return this.pick(document, result);\n      },\n    );\n\n    renderingService.hooks.pickSync.tap(\n      CanvasPickerPlugin.tag,\n      (result: PickingResult) => {\n        return this.pick(document, result);\n      },\n    );\n  }\n\n  private pick(document: IDocument, result: PickingResult) {\n    const {\n      topmost,\n      position: { x, y },\n    } = result;\n\n    // position in world space\n    const position = vec3.set(tmpVec3a, x, y, 0);\n\n    // query by AABB first with spatial index(r-tree)\n    const hitTestList = document.elementsFromBBox(\n      position[0],\n      position[1],\n      position[0],\n      position[1],\n    );\n\n    // test with clip path & origin shape\n    // @see https://github.com/antvis/g/issues/1064\n    const pickedDisplayObjects: DisplayObject[] = [];\n    for (const displayObject of hitTestList) {\n      const worldTransform = displayObject.getWorldTransform();\n      const isHitOriginShape = this.isHit(\n        displayObject,\n        position,\n        worldTransform,\n        false,\n      );\n      if (isHitOriginShape) {\n        // should look up in the ancestor node\n        const clipped = findClosestClipPathTarget(displayObject);\n        if (clipped) {\n          const { clipPath } = clipped.parsedStyle as ParsedBaseStyleProps;\n          const isHitClipPath = this.isHit(\n            clipPath,\n            position,\n            clipPath.getWorldTransform(),\n            true,\n          );\n          if (isHitClipPath) {\n            if (topmost) {\n              result.picked = [displayObject];\n              return result;\n            }\n            pickedDisplayObjects.push(displayObject);\n          }\n        } else {\n          if (topmost) {\n            result.picked = [displayObject];\n            return result;\n          }\n          pickedDisplayObjects.push(displayObject);\n        }\n      }\n    }\n\n    result.picked = pickedDisplayObjects;\n    return result;\n  }\n\n  private isHit = (\n    displayObject: DisplayObject,\n    position: vec3,\n    worldTransform: mat4,\n    isClipPath: boolean,\n  ) => {\n    // use picker for current shape's type\n    const pick =\n      this.context.pointInPathPickerFactory[displayObject.nodeName as Shape];\n    if (pick) {\n      // invert with world matrix\n      const invertWorldMat = mat4.invert(tmpMat4, worldTransform);\n\n      // transform client position to local space, do picking in local space\n      const localPosition = vec3.transformMat4(\n        tmpVec3b,\n        vec3.set(tmpVec3c, position[0], position[1], 0),\n        invertWorldMat,\n      );\n\n      if (\n        pick(\n          displayObject,\n          new Point(localPosition[0], localPosition[1]),\n          isClipPath,\n          this.isPointInPath,\n          this.context,\n          this.runtime,\n        )\n      ) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  /**\n   * use native picking method\n   * @see https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/isPointInPath\n   */\n  private isPointInPath = (displayObject: DisplayObject, position: Point) => {\n    const context = this.runtime.offscreenCanvasCreator.getOrCreateContext(\n      this.context.config.offscreenCanvas,\n    ) as CanvasRenderingContext2D;\n\n    const generatePath =\n      this.context.pathGeneratorFactory[displayObject.nodeName];\n    if (generatePath) {\n      context.beginPath();\n      generatePath(context, displayObject.parsedStyle);\n      context.closePath();\n    }\n\n    return context.isPointInPath(position.x, position.y);\n  };\n}\n","import type {\n  CircleStyleProps,\n  DisplayObject,\n  ParsedCircleStyleProps,\n  Point,\n} from '@antv/g-lite';\nimport { isFillOrStrokeAffected } from '@antv/g-lite';\nimport { distance } from '@antv/g-math';\n\nexport function isPointInPath(\n  displayObject: DisplayObject<CircleStyleProps>,\n  position: Point,\n  isClipPath: boolean,\n): boolean {\n  const {\n    cx = 0,\n    cy = 0,\n    r,\n    fill,\n    stroke,\n    lineWidth = 1,\n    increasedLineWidthForHitTesting = 0,\n    pointerEvents = 'auto',\n  } = displayObject.parsedStyle as ParsedCircleStyleProps;\n  const halfLineWidth = (lineWidth + increasedLineWidthForHitTesting) / 2;\n  const absDistance = distance(cx, cy, position.x, position.y);\n\n  const [hasFill, hasStroke] = isFillOrStrokeAffected(\n    pointerEvents,\n    fill,\n    stroke,\n  );\n\n  if ((hasFill && hasStroke) || isClipPath) {\n    return absDistance <= r + halfLineWidth;\n  }\n  if (hasFill) {\n    return absDistance <= r;\n  }\n  if (hasStroke) {\n    return absDistance >= r - halfLineWidth && absDistance <= r + halfLineWidth;\n  }\n  return false;\n}\n","import type {\n  DisplayObject,\n  EllipseStyleProps,\n  ParsedEllipseStyleProps,\n  Point,\n} from '@antv/g-lite';\nimport { isFillOrStrokeAffected } from '@antv/g-lite';\n\nfunction ellipseDistance(\n  squareX: number,\n  squareY: number,\n  rx: number,\n  ry: number,\n) {\n  return squareX / (rx * rx) + squareY / (ry * ry);\n}\n\nexport function isPointInPath(\n  displayObject: DisplayObject<EllipseStyleProps>,\n  position: Point,\n  isClipPath: boolean,\n): boolean {\n  const {\n    cx = 0,\n    cy = 0,\n    rx,\n    ry,\n    fill,\n    stroke,\n    lineWidth = 1,\n    increasedLineWidthForHitTesting = 0,\n    pointerEvents = 'auto',\n  } = displayObject.parsedStyle as ParsedEllipseStyleProps;\n\n  const { x, y } = position;\n  const [hasFill, hasStroke] = isFillOrStrokeAffected(\n    pointerEvents,\n    fill,\n    stroke,\n  );\n\n  const halfLineWith = (lineWidth + increasedLineWidthForHitTesting) / 2;\n  const squareX = (x - cx) * (x - cx);\n  const squareY = (y - cy) * (y - cy);\n  // 使用椭圆的公式： x*x/rx*rx + y*y/ry*ry = 1;\n  if ((hasFill && hasStroke) || isClipPath) {\n    return (\n      ellipseDistance(squareX, squareY, rx + halfLineWith, ry + halfLineWith) <=\n      1\n    );\n  }\n  if (hasFill) {\n    return ellipseDistance(squareX, squareY, rx, ry) <= 1;\n  }\n  if (hasStroke) {\n    return (\n      ellipseDistance(squareX, squareY, rx - halfLineWith, ry - halfLineWith) >=\n        1 &&\n      ellipseDistance(squareX, squareY, rx + halfLineWith, ry + halfLineWith) <=\n        1\n    );\n  }\n  return false;\n}\n","import { distance, linePointToLine } from '@antv/g-math';\n\nexport function inBox(\n  minX: number,\n  minY: number,\n  width: number,\n  height: number,\n  x: number,\n  y: number,\n) {\n  return x >= minX && x <= minX + width && y >= minY && y <= minY + height;\n}\n\nexport function inRect(\n  minX: number,\n  minY: number,\n  width: number,\n  height: number,\n  lineWidth: number,\n  x: number,\n  y: number,\n) {\n  const halfWidth = lineWidth / 2;\n  // 将四个边看做矩形来检测，比边的检测算法要快\n  return (\n    inBox(minX - halfWidth, minY - halfWidth, width, lineWidth, x, y) || // 上边\n    inBox(\n      minX + width - halfWidth,\n      minY - halfWidth,\n      lineWidth,\n      height,\n      x,\n      y,\n    ) || // 右边\n    inBox(\n      minX + halfWidth,\n      minY + height - halfWidth,\n      width,\n      lineWidth,\n      x,\n      y,\n    ) || // 下边\n    inBox(minX - halfWidth, minY + halfWidth, lineWidth, height, x, y)\n  ); // 左边\n}\n\nexport function inArc(\n  cx: number,\n  cy: number,\n  r: number,\n  startAngle: number,\n  endAngle: number,\n  lineWidth: number,\n  x: number,\n  y: number,\n) {\n  const angle = (Math.atan2(y - cy, x - cx) + Math.PI * 2) % (Math.PI * 2); // 转换到 0 - 2 * Math.PI 之间\n  // if (angle < startAngle || angle > endAngle) {\n  //   return false;\n  // }\n  const point = {\n    x: cx + r * Math.cos(angle),\n    y: cy + r * Math.sin(angle),\n  };\n\n  return distance(point.x, point.y, x, y) <= lineWidth / 2;\n}\n\nexport function inLine(\n  x1: number,\n  y1: number,\n  x2: number,\n  y2: number,\n  lineWidth: number,\n  x: number,\n  y: number,\n) {\n  const minX = Math.min(x1, x2);\n  const maxX = Math.max(x1, x2);\n  const minY = Math.min(y1, y2);\n  const maxY = Math.max(y1, y2);\n  const halfWidth = lineWidth / 2;\n  // 因为目前的方案是计算点到直线的距离，而有可能会在延长线上，所以要先判断是否在包围盒内\n  // 这种方案会在水平或者竖直的情况下载线的延长线上有半 lineWidth 的误差\n  if (\n    !(\n      x >= minX - halfWidth &&\n      x <= maxX + halfWidth &&\n      y >= minY - halfWidth &&\n      y <= maxY + halfWidth\n    )\n  ) {\n    return false;\n  }\n  // 因为已经计算了包围盒，所以仅需要计算到直线的距离即可，可以显著提升性能\n  return linePointToLine(x1, y1, x2, y2, x, y) <= lineWidth / 2;\n}\n\nexport function inPolyline(\n  points: any[],\n  lineWidth: number,\n  x: number,\n  y: number,\n  isClose: boolean,\n) {\n  const count = points.length;\n  if (count < 2) {\n    return false;\n  }\n  for (let i = 0; i < count - 1; i++) {\n    const x1 = points[i][0];\n    const y1 = points[i][1];\n    const x2 = points[i + 1][0];\n    const y2 = points[i + 1][1];\n\n    if (inLine(x1, y1, x2, y2, lineWidth, x, y)) {\n      return true;\n    }\n  }\n\n  // 如果封闭，则计算起始点和结束点的边\n  if (isClose) {\n    const first = points[0];\n    const last = points[count - 1];\n    if (inLine(first[0], first[1], last[0], last[1], lineWidth, x, y)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n// 多边形的射线检测，参考：https://blog.csdn.net/WilliamSun0122/article/details/77994526\nconst tolerance = 1e-6;\n// 三态函数，判断两个double在eps精度下的大小关系\nfunction dcmp(x: number) {\n  if (Math.abs(x) < tolerance) {\n    return 0;\n  }\n\n  return x < 0 ? -1 : 1;\n}\n\n// 判断点Q是否在p1和p2的线段上\nfunction onSegment(p1: any, p2: any, q: any) {\n  if (\n    (q[0] - p1[0]) * (p2[1] - p1[1]) === (p2[0] - p1[0]) * (q[1] - p1[1]) &&\n    Math.min(p1[0], p2[0]) <= q[0] &&\n    q[0] <= Math.max(p1[0], p2[0]) &&\n    Math.min(p1[1], p2[1]) <= q[1] &&\n    q[1] <= Math.max(p1[1], p2[1])\n  ) {\n    return true;\n  }\n  return false;\n}\n\n// 判断点P在多边形内-射线法\nexport function inPolygon(points: any[], x: number, y: number) {\n  let isHit = false;\n  const n = points.length;\n  if (n <= 2) {\n    // svg 中点小于 3 个时，不显示，也无法被拾取\n    return false;\n  }\n  for (let i = 0; i < n; i++) {\n    const p1 = points[i];\n    const p2 = points[(i + 1) % n];\n    if (onSegment(p1, p2, [x, y])) {\n      // 点在多边形一条边上\n      return true;\n    }\n    // 前一个判断min(p1[1],p2[1])<P.y<=max(p1[1],p2[1])\n    // 后一个判断被测点 在 射线与边交点 的左边\n    if (\n      dcmp(p1[1] - y) > 0 !== dcmp(p2[1] - y) > 0 &&\n      dcmp(x - ((y - p1[1]) * (p1[0] - p2[0])) / (p1[1] - p2[1]) - p1[0]) < 0\n    ) {\n      isHit = !isHit;\n    }\n  }\n  return isHit;\n}\nexport function inPolygons(polygons: any[], x: number, y: number): boolean {\n  let isHit = false;\n  for (let i = 0; i < polygons.length; i++) {\n    const points = polygons[i];\n    isHit = inPolygon(points, x, y);\n    if (isHit) {\n      break;\n    }\n  }\n  return isHit;\n}\n","import type {\n  DisplayObject,\n  LineStyleProps,\n  ParsedLineStyleProps,\n  Point,\n} from '@antv/g-lite';\nimport { isFillOrStrokeAffected } from '@antv/g-lite';\nimport { inLine } from './utils/math';\n\nexport function isPointInPath(\n  displayObject: DisplayObject<LineStyleProps>,\n  position: Point,\n  isClipPath: boolean,\n): boolean {\n  const {\n    x1,\n    y1,\n    x2,\n    y2,\n    lineWidth = 1,\n    increasedLineWidthForHitTesting = 0,\n    pointerEvents = 'auto',\n    fill,\n    stroke,\n  } = displayObject.parsedStyle as ParsedLineStyleProps;\n\n  const [, hasStroke] = isFillOrStrokeAffected(pointerEvents, fill, stroke);\n\n  if ((!hasStroke && !isClipPath) || !lineWidth) {\n    return false;\n  }\n\n  return inLine(\n    x1,\n    y1,\n    x2,\n    y2,\n    lineWidth + increasedLineWidthForHitTesting,\n    position.x,\n    position.y,\n  );\n}\n","import type {\n  DisplayObject,\n  GlobalRuntime,\n  ParsedPathStyleProps,\n  Path,\n  PathSegment,\n  PathStyleProps,\n  Point,\n  RenderingPluginContext,\n} from '@antv/g-lite';\nimport {\n  getOrCalculatePathTotalLength,\n  isFillOrStrokeAffected,\n} from '@antv/g-lite';\nimport { cubicPointDistance, quadPointDistance } from '@antv/g-math';\nimport { arcToCubic } from '@antv/util';\nimport { inBox, inLine, inPolygons } from './utils/math';\n\n// TODO: replace it with method in @antv/util\nfunction isPointInStroke(\n  segments: PathSegment[],\n  lineWidth: number,\n  px: number,\n  py: number,\n  length: number,\n) {\n  let isHit = false;\n  const halfWidth = lineWidth / 2;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const { currentPoint, params, prePoint, box } = segment;\n    // 如果在前面已经生成过包围盒，直接按照包围盒计算\n    if (\n      box &&\n      !inBox(\n        box.x - halfWidth,\n        box.y - halfWidth,\n        box.width + lineWidth,\n        box.height + lineWidth,\n        px,\n        py,\n      )\n    ) {\n      continue;\n    }\n    switch (segment.command) {\n      // L 和 Z 都是直线， M 不进行拾取\n      case 'L':\n      case 'Z':\n        isHit = inLine(\n          prePoint[0],\n          prePoint[1],\n          currentPoint[0],\n          currentPoint[1],\n          lineWidth,\n          px,\n          py,\n        );\n        if (isHit) {\n          return true;\n        }\n        break;\n      case 'Q':\n        const qDistance = quadPointDistance(\n          prePoint[0],\n          prePoint[1],\n          params[1],\n          params[2],\n          params[3],\n          params[4],\n          px,\n          py,\n        );\n        isHit = qDistance <= lineWidth / 2;\n        if (isHit) {\n          return true;\n        }\n        break;\n      case 'C':\n        const cDistance = cubicPointDistance(\n          prePoint[0], // 上一段结束位置, 即 C 的起始点\n          prePoint[1],\n          params[1], // 'C' 的参数，1、2 为第一个控制点，3、4 为第二个控制点，5、6 为结束点\n          params[2],\n          params[3],\n          params[4],\n          params[5],\n          params[6],\n          px,\n          py,\n          length,\n        );\n        isHit = cDistance <= lineWidth / 2;\n        if (isHit) {\n          return true;\n        }\n        break;\n      case 'A':\n        // cache conversion result\n        if (!segment.cubicParams) {\n          segment.cubicParams = arcToCubic(\n            prePoint[0],\n            prePoint[1],\n            params[1],\n            params[2],\n            params[3],\n            params[4],\n            params[5],\n            params[6],\n            params[7],\n            undefined,\n          ) as [number, number, number, number, number, number];\n        }\n\n        const args = segment.cubicParams;\n\n        // fixArc\n        let prePointInCubic = prePoint;\n        for (let i = 0; i < args.length; i += 6) {\n          const cDistance = cubicPointDistance(\n            prePointInCubic[0], // 上一段结束位置, 即 C 的起始点\n            prePointInCubic[1],\n            args[i],\n            args[i + 1],\n            args[i + 2],\n            args[i + 3],\n            args[i + 4],\n            args[i + 5],\n            px,\n            py,\n            length,\n          );\n          prePointInCubic = [args[i + 4], args[i + 5]];\n          isHit = cDistance <= lineWidth / 2;\n\n          if (isHit) {\n            return true;\n          }\n        }\n        break;\n      default:\n        break;\n    }\n  }\n  return isHit;\n}\n\nexport function isPointInPath(\n  displayObject: DisplayObject<PathStyleProps>,\n  position: Point,\n  isClipPath: boolean,\n  isPointInPath: (\n    displayObject: DisplayObject<PathStyleProps>,\n    position: Point,\n  ) => boolean,\n  renderingPluginContext: RenderingPluginContext,\n  runtime: GlobalRuntime,\n): boolean {\n  const {\n    lineWidth = 1,\n    increasedLineWidthForHitTesting = 0,\n    stroke,\n    fill,\n    d,\n    pointerEvents = 'auto',\n  } = displayObject.parsedStyle as ParsedPathStyleProps;\n\n  const { segments, hasArc, polylines, polygons } = d;\n  const [hasFill, hasStroke] = isFillOrStrokeAffected(\n    pointerEvents,\n    // Only a closed path can be filled.\n    polygons?.length && fill,\n    stroke,\n  );\n\n  const totalLength = getOrCalculatePathTotalLength(displayObject as Path);\n\n  let isHit = false;\n\n  if (hasFill || isClipPath) {\n    if (hasArc) {\n      // 存在曲线时，暂时使用 canvas 的 api 计算，后续可以进行多边形切割\n      isHit = isPointInPath(displayObject, position);\n    } else {\n      // 提取出来的多边形包含闭合的和非闭合的，在这里统一按照多边形处理\n      isHit =\n        inPolygons(polygons, position.x, position.y) ||\n        inPolygons(polylines, position.x, position.y);\n    }\n    return isHit;\n  }\n  if (hasStroke || isClipPath) {\n    isHit = isPointInStroke(\n      segments,\n      lineWidth + increasedLineWidthForHitTesting,\n      position.x,\n      position.y,\n      totalLength,\n    );\n  }\n\n  return isHit;\n}\n","import type {\n  DisplayObject,\n  ParsedPolygonStyleProps,\n  Point,\n  PolylineStyleProps,\n} from '@antv/g-lite';\nimport { isFillOrStrokeAffected } from '@antv/g-lite';\nimport { inPolygon, inPolyline } from './utils/math';\n\nexport function isPointInPath(\n  displayObject: DisplayObject<PolylineStyleProps>,\n  position: Point,\n  isClipPath: boolean,\n): boolean {\n  const {\n    stroke,\n    fill,\n    lineWidth = 1,\n    increasedLineWidthForHitTesting = 0,\n    points,\n    pointerEvents = 'auto',\n  } = displayObject.parsedStyle as ParsedPolygonStyleProps;\n  const [hasFill, hasStroke] = isFillOrStrokeAffected(\n    pointerEvents,\n    fill,\n    stroke,\n  );\n\n  let isHit = false;\n  if (hasStroke || isClipPath) {\n    isHit = inPolyline(\n      points.points,\n      lineWidth + increasedLineWidthForHitTesting,\n      position.x,\n      position.y,\n      true,\n    );\n  }\n  if (!isHit && (hasFill || isClipPath)) {\n    isHit = inPolygon(points.points, position.x, position.y);\n  }\n  return isHit;\n}\n","import type {\n  DisplayObject,\n  ParsedPolylineStyleProps,\n  Point,\n  PolylineStyleProps,\n} from '@antv/g-lite';\nimport { isFillOrStrokeAffected } from '@antv/g-lite';\nimport { inPolyline } from './utils/math';\n\nexport function isPointInPath(\n  displayObject: DisplayObject<PolylineStyleProps>,\n  position: Point,\n  isClipPath: boolean,\n): boolean {\n  const {\n    lineWidth = 1,\n    increasedLineWidthForHitTesting = 0,\n    points,\n    pointerEvents = 'auto',\n    fill,\n    stroke,\n  } = displayObject.parsedStyle as ParsedPolylineStyleProps;\n  const [, hasStroke] = isFillOrStrokeAffected(pointerEvents, fill, stroke);\n\n  if ((!hasStroke && !isClipPath) || !lineWidth) {\n    return false;\n  }\n\n  return inPolyline(\n    points.points,\n    lineWidth + increasedLineWidthForHitTesting,\n    position.x,\n    position.y,\n    false,\n  );\n}\n","import type {\n  DisplayObject,\n  ParsedRectStyleProps,\n  Point,\n  RectStyleProps,\n} from '@antv/g-lite';\nimport { GlobalRuntime, isFillOrStrokeAffected } from '@antv/g-lite';\nimport { clamp } from '@antv/util';\nimport { inArc, inBox, inLine, inRect } from './utils/math';\n\nexport function isPointInPath(\n  displayObject: DisplayObject<RectStyleProps>,\n  position: Point,\n  isClipPath: boolean,\n  isPointInPath: (\n    displayObject: DisplayObject<RectStyleProps>,\n    position: Point,\n  ) => boolean,\n  runtime: GlobalRuntime,\n): boolean {\n  const {\n    radius,\n    fill,\n    stroke,\n    lineWidth = 1,\n    increasedLineWidthForHitTesting = 0,\n    x = 0,\n    y = 0,\n    width,\n    height,\n    pointerEvents = 'auto',\n  } = displayObject.parsedStyle as ParsedRectStyleProps;\n\n  const [hasFill, hasStroke] = isFillOrStrokeAffected(\n    pointerEvents,\n    fill,\n    stroke,\n  );\n\n  const hasRadius = radius && radius.some((r) => r !== 0);\n\n  const lineWidthForHitTesting = lineWidth + increasedLineWidthForHitTesting;\n\n  // 无圆角时的策略\n  if (!hasRadius) {\n    const halfWidth = lineWidthForHitTesting / 2;\n    // 同时填充和带有边框\n    if ((hasFill && hasStroke) || isClipPath) {\n      return inBox(\n        x - halfWidth,\n        y - halfWidth,\n        width + halfWidth,\n        height + halfWidth,\n        position.x,\n        position.y,\n      );\n    }\n    // 仅填充\n    if (hasFill) {\n      return inBox(x, y, width, height, position.x, position.y);\n    }\n    if (hasStroke) {\n      return inRect(\n        x,\n        y,\n        width,\n        height,\n        lineWidthForHitTesting,\n        position.x,\n        position.y,\n      );\n    }\n  } else {\n    let isHit = false;\n    if (hasStroke || isClipPath) {\n      isHit = inRectWithRadius(\n        x,\n        y,\n        width,\n        height,\n        radius.map((r) =>\n          clamp(r, 0, Math.min(Math.abs(width) / 2, Math.abs(height) / 2)),\n        ) as [number, number, number, number],\n        lineWidthForHitTesting,\n        position.x,\n        position.y,\n      );\n    }\n    // 仅填充时带有圆角的矩形直接通过图形拾取\n    // 以后可以改成纯数学的近似拾取，将圆弧切割成多边形\n    if (!isHit && (hasFill || isClipPath)) {\n      isHit = isPointInPath(displayObject, position);\n    }\n    return isHit;\n  }\n\n  return false;\n}\n\nfunction inRectWithRadius(\n  minX: number,\n  minY: number,\n  width: number,\n  height: number,\n  radiusArray: [number, number, number, number],\n  lineWidth: number,\n  x: number,\n  y: number,\n) {\n  const [tlr, trr, brr, blr] = radiusArray;\n  return (\n    inLine(minX + tlr, minY, minX + width - trr, minY, lineWidth, x, y) ||\n    inLine(\n      minX + width,\n      minY + trr,\n      minX + width,\n      minY + height - brr,\n      lineWidth,\n      x,\n      y,\n    ) ||\n    inLine(\n      minX + width - brr,\n      minY + height,\n      minX + blr,\n      minY + height,\n      lineWidth,\n      x,\n      y,\n    ) ||\n    inLine(minX, minY + height - blr, minX, minY + tlr, lineWidth, x, y) ||\n    inArc(\n      minX + width - trr,\n      minY + trr,\n      trr,\n      1.5 * Math.PI,\n      2 * Math.PI,\n      lineWidth,\n      x,\n      y,\n    ) ||\n    inArc(\n      minX + width - brr,\n      minY + height - brr,\n      brr,\n      0,\n      0.5 * Math.PI,\n      lineWidth,\n      x,\n      y,\n    ) ||\n    inArc(\n      minX + blr,\n      minY + height - blr,\n      blr,\n      0.5 * Math.PI,\n      Math.PI,\n      lineWidth,\n      x,\n      y,\n    ) ||\n    inArc(minX + tlr, minY + tlr, tlr, Math.PI, 1.5 * Math.PI, lineWidth, x, y)\n  );\n}\n","import {\n  DisplayObject,\n  ParsedImageStyleProps,\n  Point,\n  ImageStyleProps,\n  Shape,\n  RenderingPluginContext,\n  GlobalRuntime,\n} from '@antv/g-lite';\nimport { StyleRenderer } from '@antv/g-plugin-canvas-renderer';\n\nexport function isPointInPath(\n  displayObject: DisplayObject<ImageStyleProps>,\n  position: Point,\n  isClipPath: boolean,\n  isPointInPath: (\n    displayObject: DisplayObject<ImageStyleProps>,\n    position: Point,\n  ) => boolean,\n  renderingPluginContext: RenderingPluginContext,\n  runtime: GlobalRuntime,\n): boolean {\n  const {\n    pointerEvents = 'auto',\n    x = 0,\n    y = 0,\n    width,\n    height,\n  } = displayObject.parsedStyle as ParsedImageStyleProps;\n\n  if (pointerEvents === 'non-transparent-pixel') {\n    const { offscreenCanvas } = renderingPluginContext.config;\n    const canvas =\n      runtime.offscreenCanvasCreator.getOrCreateCanvas(offscreenCanvas);\n    const context = runtime.offscreenCanvasCreator.getOrCreateContext(\n      offscreenCanvas,\n      {\n        willReadFrequently: true,\n      },\n    ) as CanvasRenderingContext2D;\n    canvas.width = width;\n    canvas.height = height;\n\n    (\n      (renderingPluginContext as any).defaultStyleRendererFactory as Record<\n        Shape,\n        StyleRenderer\n      >\n    )[Shape.IMAGE].render(\n      context,\n      { ...displayObject.parsedStyle, x: 0, y: 0 },\n      displayObject,\n      undefined,\n      undefined,\n      undefined,\n    );\n\n    const imagedata = context.getImageData(\n      position.x - x,\n      position.y - y,\n      1,\n      1,\n    ).data;\n    return imagedata.every((component) => component !== 0);\n  }\n\n  return true;\n}\n","import type { DisplayObject, Point, TextStyleProps } from '@antv/g-lite';\n\nexport function isPointInPath(\n  displayObject: DisplayObject<TextStyleProps>,\n  position: Point,\n  isClipPath: boolean,\n  isPointInPath: (\n    displayObject: DisplayObject<TextStyleProps>,\n    position: Point,\n  ) => boolean,\n): boolean {\n  const bounds = displayObject.getGeometryBounds();\n\n  // @see https://stackoverflow.com/questions/28706989/how-do-i-check-if-a-mouse-click-is-inside-a-rotated-text-on-the-html5-canvas-in\n  return (\n    position.x >= bounds.min[0] &&\n    position.y >= bounds.min[1] &&\n    position.x <= bounds.max[0] &&\n    position.y <= bounds.max[1]\n  );\n}\n","import { AbstractRendererPlugin, Shape } from '@antv/g-lite';\nimport type { PointInPathPicker } from './CanvasPickerPlugin';\nimport { CanvasPickerPlugin } from './CanvasPickerPlugin';\nimport { isPointInPath as CirclePicker } from './Circle';\nimport { isPointInPath as EllipsePicker } from './Ellipse';\nimport { isPointInPath as LinePicker } from './Line';\nimport { isPointInPath as PathPicker } from './Path';\nimport { isPointInPath as PolygonPicker } from './Polygon';\nimport { isPointInPath as PolylinePicker } from './Polyline';\nimport { isPointInPath as RectPicker } from './Rect';\nimport { isPointInPath as ImagePicker } from './Image';\nimport { isPointInPath as TextPicker } from './Text';\n\nexport class Plugin extends AbstractRendererPlugin {\n  name = 'canvas-picker';\n  init(): void {\n    const pointInPathPickerFactory: Record<Shape, PointInPathPicker<any>> = {\n      [Shape.CIRCLE]: CirclePicker,\n      [Shape.ELLIPSE]: EllipsePicker,\n      [Shape.RECT]: RectPicker,\n      [Shape.LINE]: LinePicker,\n      [Shape.POLYLINE]: PolylinePicker,\n      [Shape.POLYGON]: PolygonPicker,\n      [Shape.PATH]: PathPicker,\n      [Shape.TEXT]: TextPicker,\n      [Shape.GROUP]: null,\n      [Shape.IMAGE]: ImagePicker,\n      [Shape.HTML]: null,\n      [Shape.MESH]: null,\n    };\n\n    // @ts-ignore\n    this.context.pointInPathPickerFactory = pointInPathPickerFactory;\n\n    this.addRenderingPlugin(new CanvasPickerPlugin());\n  }\n  destroy(): void {\n    // @ts-ignore\n    delete this.context.pointInPathPickerFactory;\n    this.removeAllRenderingPlugins();\n  }\n}\n"],"names":["tmpVec3a","vec3","create","tmpVec3b","tmpVec3c","tmpMat4","mat4","CanvasPickerPlugin","_this","_classCallCheck","isHit","displayObject","position","worldTransform","isClipPath","pick","context","pointInPathPickerFactory","nodeName","invertWorldMat","invert","localPosition","transformMat4","set","Point","isPointInPath","runtime","offscreenCanvasCreator","getOrCreateContext","config","offscreenCanvas","generatePath","pathGeneratorFactory","beginPath","parsedStyle","closePath","x","y","_createClass","key","value","apply","_renderingContext$roo","_this2","renderingService","renderingContext","document","root","ownerDocument","hooks","tapPromise","tag","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","result","wrap","_callee$","_context","prev","next","abrupt","stop","_x","arguments","pickSync","tap","topmost","_result$position","hitTestList","elementsFromBBox","pickedDisplayObjects","_iterator","_createForOfIteratorHelper","_step","s","n","done","getWorldTransform","isHitOriginShape","clipped","findClosestClipPathTarget","_ref2","clipPath","isHitClipPath","picked","push","err","e","f","_ref$cx","cx","_ref$cy","cy","r","fill","stroke","_ref$lineWidth","lineWidth","_ref$increasedLineWid","increasedLineWidthForHitTesting","_ref$pointerEvents","pointerEvents","halfLineWidth","absDistance","distance","_isFillOrStrokeAffect","isFillOrStrokeAffected","_isFillOrStrokeAffect2","_slicedToArray","hasFill","hasStroke","ellipseDistance","squareX","squareY","rx","ry","halfLineWith","inBox","minX","minY","width","height","inRect","halfWidth","inArc","startAngle","endAngle","angle","Math","atan2","PI","point","cos","sin","inLine","x1","y1","x2","y2","min","maxX","max","maxY","linePointToLine","inPolyline","points","isClose","count","length","i","first","last","tolerance","dcmp","abs","onSegment","p1","p2","q","inPolygon","inPolygons","polygons","isPointInStroke","segments","px","py","segment","currentPoint","params","prePoint","box","command","qDistance","quadPointDistance","cDistance","cubicPointDistance","cubicParams","arcToCubic","undefined","args","prePointInCubic","renderingPluginContext","d","hasArc","polylines","totalLength","getOrCalculatePathTotalLength","radius","_ref$x","_ref$y","hasRadius","some","lineWidthForHitTesting","inRectWithRadius","map","clamp","radiusArray","_radiusArray","tlr","trr","brr","blr","canvas","getOrCreateCanvas","willReadFrequently","defaultStyleRendererFactory","Shape","IMAGE","render","_objectSpread","imagedata","getImageData","data","every","component","bounds","getGeometryBounds","Plugin","_AbstractRendererPlug","_len","Array","_key","_callSuper","concat","name","_inherits","init","_pointInPathPickerFac","_defineProperty","CIRCLE","CirclePicker","ELLIPSE","EllipsePicker","RECT","RectPicker","LINE","LinePicker","POLYLINE","PolylinePicker","POLYGON","PolygonPicker","PATH","PathPicker","TEXT","TextPicker","GROUP","ImagePicker","HTML","MESH","addRenderingPlugin","destroy","removeAllRenderingPlugins","AbstractRendererPlugin"],"mappings":"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"}