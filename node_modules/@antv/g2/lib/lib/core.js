"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.corelib = void 0;
const coordinate_1 = require("../coordinate");
const encode_1 = require("../encode");
const mark_1 = require("../mark");
const palette_1 = require("../palette");
const scale_1 = require("../scale");
const theme_1 = require("../theme");
const component_1 = require("../component");
const animation_1 = require("../animation");
const interaction_1 = require("../interaction");
const composition_1 = require("../composition");
const transform_1 = require("../transform");
const data_1 = require("../data");
const label_transform_1 = require("../label-transform");
function corelib() {
    return {
        'data.fetch': data_1.Fetch,
        'data.inline': data_1.Inline,
        'data.sortBy': data_1.SortBy,
        'data.sort': data_1.Sort,
        'data.filter': data_1.Filter,
        'data.pick': data_1.Pick,
        'data.rename': data_1.Rename,
        'data.fold': data_1.Fold,
        'data.slice': data_1.Slice,
        'data.custom': data_1.Custom,
        'data.map': data_1.Map,
        'data.join': data_1.Join,
        'data.kde': data_1.KDE,
        'data.log': data_1.Log,
        'data.wordCloud': data_1.WordCloud,
        'transform.stackY': transform_1.StackY,
        'transform.binX': transform_1.BinX,
        'transform.bin': transform_1.Bin,
        'transform.dodgeX': transform_1.DodgeX,
        'transform.jitter': transform_1.Jitter,
        'transform.jitterX': transform_1.JitterX,
        'transform.jitterY': transform_1.JitterY,
        'transform.symmetryY': transform_1.SymmetryY,
        'transform.diffY': transform_1.DiffY,
        'transform.stackEnter': transform_1.StackEnter,
        'transform.normalizeY': transform_1.NormalizeY,
        'transform.select': transform_1.Select,
        'transform.selectX': transform_1.SelectX,
        'transform.selectY': transform_1.SelectY,
        'transform.groupX': transform_1.GroupX,
        'transform.groupY': transform_1.GroupY,
        'transform.groupColor': transform_1.GroupColor,
        'transform.group': transform_1.Group,
        'transform.sortX': transform_1.SortX,
        'transform.sortY': transform_1.SortY,
        'transform.sortColor': transform_1.SortColor,
        'transform.flexX': transform_1.FlexX,
        'transform.pack': transform_1.Pack,
        'transform.sample': transform_1.Sample,
        'transform.filter': transform_1.Filter,
        'coordinate.cartesian': coordinate_1.Cartesian,
        'coordinate.polar': coordinate_1.Polar,
        'coordinate.transpose': coordinate_1.Transpose,
        'coordinate.theta': coordinate_1.Theta,
        'coordinate.parallel': coordinate_1.Parallel,
        'coordinate.fisheye': coordinate_1.Fisheye,
        'coordinate.radial': coordinate_1.Radial,
        'coordinate.radar': coordinate_1.Radar,
        'encode.constant': encode_1.Constant,
        'encode.field': encode_1.Field,
        'encode.transform': encode_1.Transform,
        'encode.column': encode_1.Column,
        'mark.interval': mark_1.Interval,
        'mark.rect': mark_1.Rect,
        'mark.line': mark_1.Line,
        'mark.point': mark_1.Point,
        'mark.text': mark_1.Text,
        'mark.cell': mark_1.Cell,
        'mark.area': mark_1.Area,
        'mark.link': mark_1.Link,
        'mark.image': mark_1.Image,
        'mark.polygon': mark_1.Polygon,
        'mark.box': mark_1.Box,
        'mark.vector': mark_1.Vector,
        'mark.lineX': mark_1.LineX,
        'mark.lineY': mark_1.LineY,
        'mark.connector': mark_1.Connector,
        'mark.range': mark_1.Range,
        'mark.rangeX': mark_1.RangeX,
        'mark.rangeY': mark_1.RangeY,
        'mark.path': mark_1.Path,
        'mark.shape': mark_1.Shape,
        'mark.density': mark_1.Density,
        'mark.heatmap': mark_1.Heatmap,
        'mark.wordCloud': mark_1.WordCloud,
        'palette.category10': palette_1.Category10,
        'palette.category20': palette_1.Category20,
        'scale.linear': scale_1.Linear,
        'scale.ordinal': scale_1.Ordinal,
        'scale.band': scale_1.Band,
        'scale.identity': scale_1.Identity,
        'scale.point': scale_1.Point,
        'scale.time': scale_1.Time,
        'scale.log': scale_1.Log,
        'scale.pow': scale_1.Pow,
        'scale.sqrt': scale_1.Sqrt,
        'scale.threshold': scale_1.Threshold,
        'scale.quantile': scale_1.Quantile,
        'scale.quantize': scale_1.Quantize,
        'scale.sequential': scale_1.Sequential,
        'scale.constant': scale_1.Constant,
        'theme.classic': theme_1.Classic,
        'theme.classicDark': theme_1.ClassicDark,
        'theme.academy': theme_1.Academy,
        'theme.light': theme_1.Light,
        'theme.dark': theme_1.Dark,
        'component.axisX': component_1.AxisX,
        'component.axisY': component_1.AxisY,
        'component.legendCategory': component_1.LegendCategory,
        'component.legendContinuous': component_1.LegendContinuous,
        'component.legends': component_1.Legends,
        'component.title': component_1.TitleComponent,
        'component.sliderX': component_1.SliderX,
        'component.sliderY': component_1.SliderY,
        'component.scrollbarX': component_1.ScrollbarX,
        'component.scrollbarY': component_1.ScrollbarY,
        'animation.scaleInX': animation_1.ScaleInX,
        'animation.scaleOutX': animation_1.ScaleOutX,
        'animation.scaleInY': animation_1.ScaleInY,
        'animation.scaleOutY': animation_1.ScaleOutY,
        'animation.waveIn': animation_1.WaveIn,
        'animation.fadeIn': animation_1.FadeIn,
        'animation.fadeOut': animation_1.FadeOut,
        'animation.zoomIn': animation_1.ZoomIn,
        'animation.zoomOut': animation_1.ZoomOut,
        'animation.pathIn': animation_1.PathIn,
        'animation.morphing': animation_1.Morphing,
        'animation.growInX': animation_1.GrowInX,
        'animation.growInY': animation_1.GrowInY,
        'interaction.elementHighlight': interaction_1.ElementHighlight,
        'interaction.elementHighlightByX': interaction_1.ElementHighlightByX,
        'interaction.elementHighlightByColor': interaction_1.ElementHighlightByColor,
        'interaction.elementSelect': interaction_1.ElementSelect,
        'interaction.elementSelectByX': interaction_1.ElementSelectByX,
        'interaction.elementSelectByColor': interaction_1.ElementSelectByColor,
        'interaction.fisheye': interaction_1.Fisheye,
        'interaction.chartIndex': interaction_1.ChartIndex,
        'interaction.tooltip': interaction_1.Tooltip,
        'interaction.legendFilter': interaction_1.LegendFilter,
        'interaction.legendHighlight': interaction_1.LegendHighlight,
        'interaction.brushHighlight': interaction_1.BrushHighlight,
        'interaction.brushXHighlight': interaction_1.BrushXHighlight,
        'interaction.brushYHighlight': interaction_1.BrushYHighlight,
        'interaction.brushAxisHighlight': interaction_1.BrushAxisHighlight,
        'interaction.brushFilter': interaction_1.BrushFilter,
        'interaction.brushXFilter': interaction_1.BrushXFilter,
        'interaction.brushYFilter': interaction_1.BrushYFilter,
        'interaction.sliderFilter': interaction_1.SliderFilter,
        'interaction.scrollbarFilter': interaction_1.ScrollbarFilter,
        'interaction.poptip': interaction_1.Poptip,
        'interaction.treemapDrillDown': interaction_1.TreemapDrillDown,
        'interaction.elementPointMove': interaction_1.ElementPointMove,
        'composition.spaceLayer': composition_1.SpaceLayer,
        'composition.spaceFlex': composition_1.SpaceFlex,
        'composition.facetRect': composition_1.FacetRect,
        'composition.repeatMatrix': composition_1.RepeatMatrix,
        'composition.facetCircle': composition_1.FacetCircle,
        'composition.timingKeyframe': composition_1.TimingKeyframe,
        'labelTransform.overlapHide': label_transform_1.OverlapHide,
        'labelTransform.overlapDodgeY': label_transform_1.OverlapDodgeY,
        'labelTransform.overflowHide': label_transform_1.OverflowHide,
        'labelTransform.contrastReverse': label_transform_1.ContrastReverse,
        'labelTransform.exceedAdjust': label_transform_1.ExceedAdjust,
    };
}
exports.corelib = corelib;
//# sourceMappingURL=core.js.map