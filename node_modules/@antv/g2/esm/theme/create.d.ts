export declare function create({ colorDefault, colorBlack, colorWhite, colorStroke, colorBackground, padding1, padding2, padding3, alpha90, alpha65, alpha45, alpha25, alpha10, category10, category20, sizeDefault, padding, margin, }: {
    colorDefault: any;
    colorBlack: any;
    colorWhite: any;
    colorStroke: any;
    colorBackground: any;
    padding1: any;
    padding2: any;
    padding3: any;
    alpha90: any;
    alpha65: any;
    alpha45: any;
    alpha25: any;
    alpha10: any;
    category10: any;
    category20: any;
    sizeDefault?: number;
    padding?: string;
    margin?: number;
}): {
    padding: string;
    margin: number;
    size: number;
    color: any;
    category10: any;
    category20: any;
    enter: {
        duration: number;
        fill: string;
        delay: number;
    };
    update: {
        duration: number;
        fill: string;
        delay: number;
    };
    exit: {
        duration: number;
        fill: string;
        delay: number;
    };
    view: {
        viewFill: any;
        plotFill: string;
        mainFill: string;
        contentFill: string;
    };
    line: {
        line: {
            fill: string;
            strokeOpacity: number;
            lineWidth: number;
            lineCap: string;
        };
    };
    point: {
        point: {
            r: number;
            fillOpacity: number;
            lineWidth: number;
        };
        hollow: {
            r: number;
            strokeOpacity: number;
            lineWidth: number;
        };
        plus: {
            r: number;
            strokeOpacity: number;
            lineWidth: number;
        };
        diamond: {
            r: number;
            strokeOpacity: number;
            lineWidth: number;
        };
    };
    interval: {
        rect: {
            fillOpacity: number;
        };
        hollow: {
            fill: string;
            strokeOpacity: number;
            lineWidth: number;
        };
    };
    area: {
        area: {
            fillOpacity: number;
            lineWidth: number;
        };
    };
    polygon: {
        polygon: {
            fillOpacity: number;
        };
    };
    cell: {
        cell: {
            fillOpacity: number;
        };
        hollow: {
            fill: string;
            strokeOpacity: number;
            lineWidth: number;
        };
    };
    rect: {
        rect: {
            fillOpacity: number;
        };
        hollow: {
            fill: string;
            strokeOpacity: number;
            lineWidth: number;
        };
    };
    link: {
        link: {
            fill: string;
            strokeOpacity: number;
        };
    };
    vector: {
        vector: {
            fillOpacity: number;
        };
    };
    box: {
        box: {
            fillOpacity: number;
            stroke: any;
            lineWidth: number;
        };
    };
    text: {
        text: {
            fill: string;
            fontSize: number;
            lineWidth: number;
            connectorStroke: any;
            connectorStrokeOpacity: number;
            connectorLineWidth: number;
            backgroundFill: any;
            backgroundFillOpacity: number;
            backgroundPadding: number[];
            startMarkerSymbol: string;
            startMarkerSize: number;
            endMarkerSymbol: string;
            endMarkerSize: number;
        };
        badge: {
            fill: string;
            fillOpacity: number;
            lineWidth: number;
            fontSize: number;
            textAlign: string;
            textBaseline: string;
            markerFill: any;
            markerFillOpacity: number;
            markerStrokeOpacity: number;
        };
    };
    lineX: {
        line: {
            stroke: any;
            strokeOpacity: number;
            lineWidth: number;
        };
    };
    lineY: {
        line: {
            stroke: any;
            strokeOpacity: number;
            lineWidth: number;
        };
    };
    rangeX: {
        range: {
            fill: any;
            fillOpacity: number;
            lineWidth: number;
        };
    };
    rangeY: {
        range: {
            fill: any;
            fillOpacity: number;
            lineWidth: number;
        };
    };
    connector: {
        connector: {
            stroke: any;
            strokeOpacity: number;
            lineWidth: number;
            connectLength1: number;
            endMarker: boolean;
            endMarkerSize: number;
            endMarkerFill: any;
            endMarkerFillOpacity: number;
        };
    };
    axis: {
        arrow: boolean;
        gridLineDash: number[];
        gridLineWidth: number;
        gridStroke: any;
        gridStrokeOpacity: any;
        labelAlign: string;
        labelFill: any;
        labelOpacity: any;
        labelFontSize: number;
        labelFontWeight: string;
        labelSpacing: any;
        line: boolean;
        lineLineWidth: number;
        lineStroke: any;
        lineStrokeOpacity: any;
        tickLength: number;
        tickLineWidth: number;
        tickStroke: any;
        tickOpacity: any;
        titleFill: any;
        titleOpacity: any;
        titleFontSize: number;
        titleFontWeight: string;
        titleSpacing: number;
        titleTransformOrigin: string;
        lineArrowOffset: number;
        lineArrowSize: number;
    };
    axisTop: {
        gridDirection: string;
        labelDirection: string;
        tickDirection: string;
        titlePosition: string;
        titleSpacing: number;
        labelSpacing: number;
        titleTextBaseline: string;
    };
    axisBottom: {
        gridDirection: string;
        labelDirection: string;
        tickDirection: string;
        titlePosition: string;
        titleSpacing: number;
        labelSpacing: number;
        titleTextBaseline: string;
        titleTransform: string;
    };
    axisLeft: {
        gridDirection: string;
        labelDirection: string;
        labelSpacing: number;
        tickDirection: string;
        titlePosition: string;
        titleSpacing: number;
        titleTextBaseline: string;
        titleDirection: string;
        titleTransform: string;
        titleTransformOrigin: string;
    };
    axisRight: {
        gridDirection: string;
        labelDirection: string;
        labelSpacing: number;
        tickDirection: string;
        titlePosition: string;
        titleSpacing: number;
        titleTextBaseline: string;
        titleDirection: string;
        titleTransformOrigin: string;
    };
    axisLinear: {
        girdClosed: boolean;
        gridConnect: string;
        gridDirection: string;
        gridType: string;
        titlePosition: string;
        titleSpacing: number;
    };
    axisArc: {
        title: boolean;
        titlePosition: string;
        line: boolean;
        tick: boolean;
        labelSpacing: number;
    };
    axisRadar: {
        girdClosed: boolean;
        gridStrokeOpacity: number;
        gridType: string;
        label: boolean;
        tick: boolean;
        titlePosition: string;
    };
    legendCategory: {
        backgroundFill: string;
        itemBackgroundFill: string;
        itemLabelFill: any;
        itemLabelFillOpacity: any;
        itemLabelFontSize: number;
        itemLabelFontWeight: string;
        itemMarkerFillOpacity: number;
        itemMarkerSize: number;
        itemSpacing: any[];
        itemValueFill: any;
        itemValueFillOpacity: number;
        itemValueFontSize: number;
        itemValueFontWeight: string;
        navButtonFill: any;
        navButtonFillOpacity: number;
        navPageNumFill: any;
        navPageNumFillOpacity: number;
        navPageNumFontSize: number;
        padding: number;
        title: boolean;
        titleFill: any;
        titleFillOpacity: number;
        titleFontSize: number;
        titleFontWeight: string;
        titleSpacing: number;
        tickStroke: any;
        tickStrokeOpacity: number;
        rowPadding: any;
        colPadding: any;
        maxRows: number;
        maxCols: number;
    };
    legendContinuous: {
        handleHeight: number;
        handleLabelFill: any;
        handleLabelFillOpacity: any;
        handleLabelFontSize: number;
        handleLabelFontWeight: string;
        handleMarkerFill: any;
        handleMarkerFillOpacity: number;
        handleMarkerLineWidth: number;
        handleMarkerStroke: any;
        handleMarkerStrokeOpacity: number;
        handleWidth: number;
        labelFill: any;
        labelFillOpacity: any;
        labelFontSize: number;
        labelFontWeight: string;
        labelSpacing: number;
        tick: boolean;
        tickLength: number;
        ribbonSize: number;
        ribbonFill: string;
        handle: boolean;
        handleLabel: boolean;
        handleShape: string;
        handleIconSize: number;
        indicator: boolean;
        titleFontSize: number;
        titleSpacing: number;
        titleFontWeight: string;
        titleFillOpacity: any;
        tickStroke: any;
        tickStrokeOpacity: any;
    };
    label: {
        fill: any;
        fillOpacity: number;
        fontSize: number;
        fontWeight: string;
        stroke: any;
        offset: number;
        connectorStroke: any;
        connectorStrokeOpacity: number;
        connectorLineWidth: number;
        connectorLength: number;
        connectorLength2: number;
        connectorDistance: number;
    };
    innerLabel: {
        fill: any;
        fontSize: number;
        fillOpacity: number;
        fontWeight: string;
        stroke: any;
        offset: number;
    };
    htmlLabel: {
        fontSize: number;
        opacity: number;
        color: any;
        fontWeight: string;
    };
    slider: {
        trackSize: number;
        trackFill: any;
        trackFillOpacity: number;
        selectionFill: any;
        selectionFillOpacity: number;
        handleIconSize: number;
        handleIconFill: string;
        handleIconFillOpacity: number;
        handleIconStroke: any;
        handleIconStrokeOpacity: number;
        handleIconLineWidth: number;
        handleIconRadius: number;
        handleLabelFill: any;
        handleLabelFillOpacity: number;
        handleLabelFontSize: number;
        handleLabelFontWeight: string;
    };
    scrollbar: {
        padding: number[];
        trackSize: number;
        isRound: boolean;
        slidable: boolean;
        scrollable: boolean;
        trackFill: string;
        trackFillOpacity: number;
        thumbFill: string;
        thumbFillOpacity: number;
        thumbHighlightedFillOpacity: number;
    };
    title: {
        spacing: number;
        titleFill: any;
        titleFillOpacity: any;
        titleFontSize: number;
        titleFontWeight: string;
        titleTextBaseline: string;
        subtitleFill: any;
        subtitleFillOpacity: any;
        subtitleFontSize: number;
        subtitleFontWeight: string;
        subtitleTextBaseline: string;
    };
    tooltip: {
        css: {
            '.g2-tooltip': {
                'font-family': string;
            };
        };
    };
};
