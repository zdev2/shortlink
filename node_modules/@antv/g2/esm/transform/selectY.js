var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import { Select } from './select';
/**
 * The selectY transform filter index by y channel.
 */
export const SelectY = (options = {}) => {
    const { selector } = options, rest = __rest(options, ["selector"]);
    return Select(Object.assign({ channel: 'y', selector }, rest));
};
SelectY.props = {};
//# sourceMappingURL=selectY.js.map