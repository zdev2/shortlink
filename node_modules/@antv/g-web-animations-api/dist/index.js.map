{"version":3,"file":"index.js","sources":["../src/dom/AnimationEvent.ts","../src/dom/Animation.ts","../src/utils/bezier-easing.ts","../src/utils/custom-easing.ts","../src/utils/animation.ts","../src/utils/interpolation.ts","../src/dom/AnimationEffectTiming.ts","../src/dom/KeyframeList.ts","../src/dom/KeyframeEffect.ts","../src/dom/AnimationTimeline.ts","../src/index.ts"],"sourcesContent":["import type { EventService } from '@antv/g-lite';\nimport { FederatedEvent } from '@antv/g-lite';\nimport type { Animation } from './Animation';\n\n/**\n * @see https://developer.mozilla.org/en-US/docs/Web/API/AnimationPlaybackEvent\n */\n// @ts-ignore\nexport class AnimationEvent\n  extends FederatedEvent\n  implements AnimationPlaybackEvent\n{\n  constructor(\n    manager: EventService | null,\n    target: Animation,\n    public currentTime: number | null,\n    public timelineTime: number,\n  ) {\n    super(manager);\n\n    // @ts-ignore\n    this.target = target;\n    this.type = 'finish';\n    this.bubbles = false;\n    // @ts-ignore\n    this.currentTarget = target;\n    this.defaultPrevented = false;\n    this.eventPhase = this.AT_TARGET;\n    this.timeStamp = Date.now();\n    this.currentTime = currentTime;\n    this.timelineTime = timelineTime;\n  }\n}\n","import type { DisplayObject, IAnimation } from '@antv/g-lite';\nimport { ERROR_MSG_METHOD_NOT_IMPLEMENTED } from '@antv/g-lite';\nimport { AnimationEvent } from './AnimationEvent';\nimport type { AnimationTimeline } from './AnimationTimeline';\nimport type { KeyframeEffect } from './KeyframeEffect';\n\nlet sequenceNumber = 0;\n\n/**\n * @see https://developer.mozilla.org/en-US/docs/Web/API/Animation/Animation\n */\nexport class Animation implements IAnimation {\n  /**\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/Animation/effect\n   */\n  effect: KeyframeEffect;\n\n  /**\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/Animation/timeline\n   */\n  timeline: AnimationTimeline;\n\n  /**\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/Animation/id\n   */\n  id: string;\n\n  // animation: InternalAnimation | null;\n\n  /**\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/Animation/pending\n   */\n  get pending() {\n    return (\n      (this._startTime === null && !this._paused && this.playbackRate !== 0) ||\n      this.currentTimePending\n    );\n  }\n  private currentTimePending = false;\n\n  /**\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/Animation/playState\n   */\n  // playState: AnimationPlayState;\n  private _idle = true;\n  private _paused = false;\n  private _finishedFlag = true;\n  get playState(): AnimationPlayState {\n    if (this._idle) return 'idle';\n    if (this._isFinished) return 'finished';\n    if (this._paused) return 'paused';\n    return 'running';\n  }\n\n  /**\n   * record previos state\n   */\n  private oldPlayState: AnimationPlayState | 'pending';\n\n  private _holdTime: number;\n\n  private readyPromise: Promise<any> | undefined;\n  private finishedPromise: Promise<any> | undefined;\n  private resolveReadyPromise: Function;\n  private rejectReadyPromise: Function;\n  private resolveFinishedPromise: Function;\n  private rejectFinishedPromise: Function;\n\n  /**\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/Animation/ready\n   * @example\n    animation.pause();\n    animation.ready.then(function() {\n      // Displays 'running'\n      alert(animation.playState);\n    });\n    animation.play();\n   */\n  get ready() {\n    if (!this.readyPromise) {\n      if (this.timeline.animationsWithPromises.indexOf(this) === -1) {\n        this.timeline.animationsWithPromises.push(this);\n      }\n      this.readyPromise = new Promise((resolve, reject) => {\n        this.resolveReadyPromise = () => {\n          resolve(this);\n        };\n        this.rejectReadyPromise = () => {\n          reject(new Error());\n        };\n      });\n      if (!this.pending) {\n        this.resolveReadyPromise();\n      }\n    }\n    return this.readyPromise;\n  }\n\n  /**\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/Animation/finished\n   * @example\n    Promise.all(\n      elem.getAnimations().map(\n        function(animation) {\n          return animation.finished\n        }\n      )\n    ).then(\n      function() {\n        return elem.remove();\n      }\n    );\n   */\n  get finished() {\n    if (!this.finishedPromise) {\n      if (this.timeline.animationsWithPromises.indexOf(this) === -1) {\n        this.timeline.animationsWithPromises.push(this);\n      }\n      this.finishedPromise = new Promise((resolve, reject) => {\n        this.resolveFinishedPromise = () => {\n          resolve(this);\n        };\n        this.rejectFinishedPromise = () => {\n          reject(new Error());\n        };\n      });\n      if (this.playState === 'finished') {\n        this.resolveFinishedPromise();\n      }\n    }\n    return this.finishedPromise;\n  }\n\n  /**\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/Animation/onfinish\n   */\n  onfinish: ((this: Animation, ev: AnimationPlaybackEvent) => any) | null;\n\n  /**\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/Animation/oncancel\n   */\n  oncancel: ((this: Animation, ev: AnimationPlaybackEvent) => any) | null;\n\n  /**\n   * get called after each frame when running\n   */\n  onframe: ((this: Animation, ev: AnimationPlaybackEvent) => any) | null;\n\n  /**\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/Animation/currentTime\n   */\n  private _currentTime = 0;\n  get currentTime(): number | null {\n    this.updatePromises();\n    return this._idle || this.currentTimePending ? null : this._currentTime;\n  }\n  set currentTime(newTime: number | null) {\n    newTime = Number(newTime);\n    if (isNaN(newTime)) return;\n    this.timeline.restart();\n    if (!this._paused && this._startTime !== null) {\n      this._startTime =\n        Number(this.timeline?.currentTime) - newTime / this.playbackRate;\n    }\n    this.currentTimePending = false;\n    if (this._currentTime === newTime) {\n      return;\n    }\n    if (this._idle) {\n      this._idle = false;\n      this._paused = true;\n    }\n    this.tickCurrentTime(newTime, true);\n    this.timeline.applyDirtiedAnimation(this);\n  }\n\n  /**\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/Animation/startTime\n   */\n  private _startTime: number | null;\n  get startTime() {\n    return this._startTime;\n  }\n  set startTime(newTime: number | null) {\n    if (newTime !== null) {\n      this.updatePromises();\n      newTime = Number(newTime);\n      if (isNaN(newTime)) return;\n      if (this._paused || this._idle) return;\n      this._startTime = newTime;\n      this.tickCurrentTime(\n        (Number(this.timeline.currentTime) - this._startTime) *\n          this.playbackRate,\n      );\n      this.timeline.applyDirtiedAnimation(this);\n      this.updatePromises();\n    }\n  }\n\n  private _playbackRate = 1;\n  get playbackRate() {\n    return this._playbackRate;\n  }\n  set playbackRate(value: number) {\n    if (value === this._playbackRate) {\n      return;\n    }\n\n    this.updatePromises();\n    const oldCurrentTime = this.currentTime;\n    this._playbackRate = value;\n    this.startTime = null;\n    if (this.playState !== 'paused' && this.playState !== 'idle') {\n      this._finishedFlag = false;\n      this._idle = false;\n      this.ensureAlive();\n      this.timeline.applyDirtiedAnimation(this);\n    }\n    if (oldCurrentTime !== null) {\n      this.currentTime = oldCurrentTime;\n    }\n    this.updatePromises();\n  }\n\n  get _isFinished() {\n    return (\n      !this._idle &&\n      ((this._playbackRate > 0 &&\n        Number(this._currentTime) >= this._totalDuration) ||\n        (this._playbackRate < 0 && Number(this._currentTime) <= 0))\n    );\n  }\n\n  _totalDuration: number;\n  get totalDuration() {\n    return this._totalDuration;\n  }\n\n  _inEffect: boolean;\n  _inTimeline = true;\n  get _needsTick() {\n    return this.pending || this.playState === 'running' || !this._finishedFlag;\n  }\n\n  constructor(effect: KeyframeEffect, timeline: AnimationTimeline) {\n    this.effect = effect;\n    effect.animation = this;\n    this.timeline = timeline;\n    this.id = `${sequenceNumber++}`;\n\n    this._inEffect = !!this.effect.update(0);\n    this._totalDuration = Number(this.effect?.getComputedTiming().endTime);\n    this._holdTime = 0;\n    this._paused = false;\n    this.oldPlayState = 'idle';\n    this.updatePromises();\n  }\n\n  /**\n   * state machine,\n   * resolve/reject ready/finished Promise according to current state\n   */\n  updatePromises() {\n    const { oldPlayState } = this;\n    const newPlayState = this.pending ? 'pending' : this.playState;\n    if (this.readyPromise && newPlayState !== oldPlayState) {\n      if (newPlayState === 'idle') {\n        this.rejectReadyPromise();\n        this.readyPromise = undefined;\n      } else if (oldPlayState === 'pending') {\n        this.resolveReadyPromise();\n      } else if (newPlayState === 'pending') {\n        this.readyPromise = undefined;\n      }\n    }\n    if (this.finishedPromise && newPlayState !== oldPlayState) {\n      if (newPlayState === 'idle') {\n        this.rejectFinishedPromise();\n        this.finishedPromise = undefined;\n      } else if (newPlayState === 'finished') {\n        this.resolveFinishedPromise();\n      } else if (oldPlayState === 'finished') {\n        this.finishedPromise = undefined;\n      }\n    }\n    this.oldPlayState = newPlayState;\n    return this.readyPromise || this.finishedPromise;\n  }\n\n  play() {\n    this.updatePromises();\n    this._paused = false;\n    if (this._isFinished || this._idle) {\n      this.rewind();\n      this._startTime = null;\n    }\n    this._finishedFlag = false;\n    this._idle = false;\n    this.ensureAlive();\n    this.timeline.applyDirtiedAnimation(this);\n\n    if (this.timeline.animations.indexOf(this) === -1) {\n      this.timeline.animations.push(this);\n    }\n\n    this.updatePromises();\n  }\n\n  pause() {\n    this.updatePromises();\n    if (this.currentTime) {\n      this._holdTime = this.currentTime;\n    }\n\n    if (!this._isFinished && !this._paused && !this._idle) {\n      this.currentTimePending = true;\n    } else if (this._idle) {\n      this.rewind();\n      this._idle = false;\n    }\n    this._startTime = null;\n    this._paused = true;\n\n    this.updatePromises();\n  }\n\n  finish() {\n    this.updatePromises();\n    if (this._idle) return;\n    this.currentTime = this._playbackRate > 0 ? this._totalDuration : 0;\n    this._startTime = this._totalDuration - this.currentTime;\n    this.currentTimePending = false;\n    this.timeline.applyDirtiedAnimation(this);\n\n    this.updatePromises();\n  }\n\n  cancel() {\n    this.updatePromises();\n    if (!this._inEffect) return;\n    this._inEffect = false;\n    this._idle = true;\n    this._paused = false;\n    this._finishedFlag = true;\n    this._currentTime = 0;\n    this._startTime = null;\n    this.effect.update(null);\n    // effects are invalid after cancellation as the animation state\n    // needs to un-apply.\n    this.timeline.applyDirtiedAnimation(this);\n\n    this.updatePromises();\n\n    /**\n     * 1. Reject the current finished promise with a DOMException named \"AbortError\".\n     * 2. Let current finished promise be a new promise\n     * @see https://w3c.github.io/csswg-drafts/web-animations-1/#canceling-an-animation-section\n     */\n    // if (this.finishedPromise) {\n    //   this.rejectFinishedPromise();\n    //   this.finishedPromise = undefined;\n    // }\n\n    if (this.oncancel) {\n      const event = new AnimationEvent(\n        null,\n        this,\n        this.currentTime,\n        null,\n      ) as AnimationPlaybackEvent;\n      setTimeout(() => {\n        this.oncancel(event);\n      });\n    }\n  }\n\n  reverse() {\n    this.updatePromises();\n    const oldCurrentTime = this.currentTime;\n\n    this.playbackRate *= -1;\n    this.play();\n\n    if (oldCurrentTime !== null) {\n      this.currentTime = oldCurrentTime;\n    }\n    this.updatePromises();\n  }\n\n  /**\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/Animation/updatePlaybackRate\n   */\n  updatePlaybackRate(playbackRate: number): void {\n    this.playbackRate = playbackRate;\n  }\n\n  targetAnimations() {\n    const target = this.effect?.target as unknown as DisplayObject;\n    return target.getAnimations();\n  }\n  markTarget() {\n    const animations = this.targetAnimations();\n    if (animations.indexOf(this) === -1) {\n      animations.push(this);\n    }\n  }\n  unmarkTarget() {\n    const animations = this.targetAnimations();\n    const index = animations.indexOf(this);\n    if (index !== -1) {\n      animations.splice(index, 1);\n    }\n  }\n\n  tick(timelineTime: number, isAnimationFrame: boolean) {\n    if (!this._idle && !this._paused) {\n      if (this._startTime === null) {\n        if (isAnimationFrame) {\n          this.startTime = timelineTime - this._currentTime / this.playbackRate;\n        }\n      } else if (!this._isFinished) {\n        this.tickCurrentTime(\n          (timelineTime - this._startTime) * this.playbackRate,\n        );\n      }\n    }\n\n    if (isAnimationFrame) {\n      this.currentTimePending = false;\n      this.fireEvents(timelineTime);\n    }\n  }\n\n  private rewind() {\n    if (this.playbackRate >= 0) {\n      this.currentTime = 0;\n    } else if (this._totalDuration < Infinity) {\n      this.currentTime = this._totalDuration;\n    } else {\n      throw new Error(\n        'Unable to rewind negative playback rate animation with infinite duration',\n      );\n    }\n  }\n\n  persist(): void {\n    throw new Error(ERROR_MSG_METHOD_NOT_IMPLEMENTED);\n  }\n\n  addEventListener<K extends keyof AnimationEventMap>(\n    type: K,\n    listener: (this: Animation, ev: AnimationEventMap[K]) => any,\n    options?: boolean | AddEventListenerOptions,\n  ): void;\n  addEventListener(\n    type: string,\n    listener: EventListenerOrEventListenerObject,\n    options?: boolean | AddEventListenerOptions,\n  ): void;\n\n  addEventListener(type: any, listener: any, options?: any): void {\n    throw new Error(ERROR_MSG_METHOD_NOT_IMPLEMENTED);\n  }\n  removeEventListener<K extends keyof AnimationEventMap>(\n    type: K,\n    listener: (this: Animation, ev: AnimationEventMap[K]) => any,\n    options?: boolean | EventListenerOptions,\n  ): void;\n  removeEventListener(\n    type: string,\n    listener: EventListenerOrEventListenerObject,\n    options?: boolean | EventListenerOptions,\n  ): void;\n\n  removeEventListener(type: any, listener: any, options?: any): void {\n    throw new Error(ERROR_MSG_METHOD_NOT_IMPLEMENTED);\n  }\n\n  dispatchEvent(event: Event): boolean {\n    throw new Error(ERROR_MSG_METHOD_NOT_IMPLEMENTED);\n  }\n  onremove: ((this: Animation, ev: Event) => any) | null;\n  // replaceState: AnimationReplaceState;\n  commitStyles(): void {\n    throw new Error(ERROR_MSG_METHOD_NOT_IMPLEMENTED);\n  }\n\n  private ensureAlive() {\n    // If an animation is playing backwards and is not fill backwards/both\n    // then it should go out of effect when it reaches the start of its\n    // active interval (currentTime === 0).\n    if (this.playbackRate < 0 && this.currentTime === 0) {\n      this._inEffect = !!this.effect?.update(-1);\n    } else {\n      this._inEffect = !!this.effect?.update(this.currentTime);\n    }\n    if (!this._inTimeline && (this._inEffect || !this._finishedFlag)) {\n      this._inTimeline = true;\n      this.timeline.animations.push(this);\n    }\n  }\n\n  private tickCurrentTime(newTime: number, ignoreLimit?: boolean) {\n    if (newTime !== this._currentTime) {\n      this._currentTime = newTime;\n      if (this._isFinished && !ignoreLimit) {\n        this._currentTime = this._playbackRate > 0 ? this._totalDuration : 0;\n      }\n      this.ensureAlive();\n    }\n  }\n\n  private fireEvents(baseTime: number) {\n    if (this._isFinished) {\n      if (!this._finishedFlag) {\n        if (this.onfinish) {\n          const event = new AnimationEvent(\n            null,\n            this,\n            this.currentTime,\n            baseTime,\n          ) as AnimationPlaybackEvent;\n          setTimeout(() => {\n            if (this.onfinish) {\n              this.onfinish(event);\n            }\n          });\n        }\n        this._finishedFlag = true;\n      }\n    } else {\n      if (this.onframe && this.playState === 'running') {\n        const event = new AnimationEvent(\n          null,\n          this,\n          this.currentTime,\n          baseTime,\n        ) as AnimationPlaybackEvent;\n        this.onframe(event);\n      }\n      this._finishedFlag = false;\n    }\n  }\n}\n","/**\n * https://github.com/gre/bezier-easing\n * BezierEasing - use bezier curve for transition easing function\n * by Gaëtan Renaudeau 2014 - 2015 – MIT License\n */\n\n// These values are established by empiricism with tests (tradeoff: performance VS precision)\nexport const NEWTON_ITERATIONS = 4;\nexport const NEWTON_MIN_SLOPE = 0.001;\nexport const SUBDIVISION_PRECISION = 0.0000001;\nexport const SUBDIVISION_MAX_ITERATIONS = 10;\n\nexport const kSplineTableSize = 11;\nexport const kSampleStepSize = 1.0 / (kSplineTableSize - 1.0);\n\nexport const float32ArraySupported = typeof Float32Array === 'function';\n\nexport const A = (aA1: number, aA2: number) => 1.0 - 3.0 * aA2 + 3.0 * aA1;\nexport const B = (aA1: number, aA2: number) => 3.0 * aA2 - 6.0 * aA1;\nexport const C = (aA1: number) => 3.0 * aA1;\n\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nexport const calcBezier = (aT: number, aA1: number, aA2: number) =>\n  ((A(aA1, aA2) * aT + B(aA1, aA2)) * aT + C(aA1)) * aT;\n\n// Returns dx/dt given t, x1, and x2, or dy/dt given t, y1, and y2.\nexport const getSlope = (aT: number, aA1: number, aA2: number) =>\n  3.0 * A(aA1, aA2) * aT * aT + 2.0 * B(aA1, aA2) * aT + C(aA1);\nexport const binarySubdivide = (\n  aX: number,\n  aA: number,\n  aB: number,\n  mX1: number,\n  mX2: number,\n) => {\n  let currentX: number;\n  let currentT: number;\n  let i = 0;\n  do {\n    currentT = aA + (aB - aA) / 2.0;\n    currentX = calcBezier(currentT, mX1, mX2) - aX;\n    if (currentX > 0.0) aB = currentT;\n    else aA = currentT;\n  } while (\n    Math.abs(currentX) > SUBDIVISION_PRECISION &&\n    ++i < SUBDIVISION_MAX_ITERATIONS\n  );\n  return currentT;\n};\n\nexport const newtonRaphsonIterate = (\n  aX: number,\n  aGuessT: number,\n  mX1: number,\n  mX2: number,\n) => {\n  for (let i = 0; i < NEWTON_ITERATIONS; ++i) {\n    const currentSlope = getSlope(aGuessT, mX1, mX2);\n    if (currentSlope === 0.0) return aGuessT;\n\n    const currentX = calcBezier(aGuessT, mX1, mX2) - aX;\n    aGuessT -= currentX / currentSlope;\n  }\n\n  return aGuessT;\n};\n\nexport const bezier = (mX1: number, mY1: number, mX2: number, mY2: number) => {\n  if (!(mX1 >= 0 && mX1 <= 1 && mX2 >= 0 && mX2 <= 1))\n    throw new Error('bezier x values must be in [0, 1] range');\n\n  if (mX1 === mY1 && mX2 === mY2) return (t: number) => t;\n\n  // Precompute samples table\n  const sampleValues = float32ArraySupported\n    ? new Float32Array(kSplineTableSize)\n    : new Array(kSplineTableSize);\n  for (let i = 0; i < kSplineTableSize; ++i) {\n    sampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);\n  }\n\n  const getTForX = (aX: number) => {\n    let intervalStart = 0.0;\n    let currentSample = 1;\n    const lastSample = kSplineTableSize - 1;\n\n    for (\n      ;\n      currentSample !== lastSample && sampleValues[currentSample] <= aX;\n      ++currentSample\n    )\n      intervalStart += kSampleStepSize;\n    --currentSample;\n\n    // Interpolate to provide an initial guess for t\n    const dist =\n      (aX - sampleValues[currentSample]) /\n      (sampleValues[currentSample + 1] - sampleValues[currentSample]);\n    const guessForT = intervalStart + dist * kSampleStepSize;\n\n    const initialSlope = getSlope(guessForT, mX1, mX2);\n    if (initialSlope >= NEWTON_MIN_SLOPE)\n      return newtonRaphsonIterate(aX, guessForT, mX1, mX2);\n    if (initialSlope === 0.0) return guessForT;\n\n    return binarySubdivide(\n      aX,\n      intervalStart,\n      intervalStart + kSampleStepSize,\n      mX1,\n      mX2,\n    );\n  };\n\n  return (t: number) => {\n    // Because JavaScript number are imprecise, we should guarantee the extremes are right.\n    if (t === 0 || t === 1) return t;\n    return calcBezier(getTForX(t), mY1, mY2);\n  };\n};\n","/**\n * ported from https://github.com/okikio/native/blob/master/packages/animate/src/custom-easing.ts\n */\nimport type { TypeEasingFunction } from '@antv/g-lite';\nimport { clamp } from '@antv/util';\nimport { bezier } from './bezier-easing';\n\nexport const convertToDash = (str: string) => {\n  str = str.replace(/([A-Z])/g, (letter) => `-${letter.toLowerCase()}`);\n\n  // Remove first dash\n  return str.charAt(0) === '-' ? str.substring(1) : str;\n};\n\nexport type TypeColor = string | number | (string | number)[];\nexport type TypeRGBAFunction = (color: TypeColor) => number[];\n\n/**\n  Easing Functions from anime.js, they are tried and true, so, its better to use them instead of other alternatives\n*/\nconst Quad: TypeEasingFunction = (t) => t ** 2;\nconst Cubic: TypeEasingFunction = (t) => t ** 3;\nconst Quart: TypeEasingFunction = (t) => t ** 4;\nconst Quint: TypeEasingFunction = (t) => t ** 5;\nconst Expo: TypeEasingFunction = (t) => t ** 6;\nconst Sine: TypeEasingFunction = (t) => 1 - Math.cos((t * Math.PI) / 2);\nconst Circ: TypeEasingFunction = (t) => 1 - Math.sqrt(1 - t * t);\nconst Back: TypeEasingFunction = (t) => t * t * (3 * t - 2);\n\nconst Bounce: TypeEasingFunction = (t) => {\n  let pow2: number;\n  let b = 4;\n  while (t < ((pow2 = 2 ** --b) - 1) / 11) {}\n  return 1 / 4 ** (3 - b) - 7.5625 * ((pow2 * 3 - 2) / 22 - t) ** 2;\n};\n\nconst Elastic: TypeEasingFunction = (t, params: (string | number)[] = []) => {\n  const [amplitude = 1, period = 0.5] = params;\n  const a = clamp(Number(amplitude), 1, 10);\n  const p = clamp(Number(period), 0.1, 2);\n  if (t === 0 || t === 1) return t;\n  return (\n    -a *\n    2 ** (10 * (t - 1)) *\n    Math.sin(\n      ((t - 1 - (p / (Math.PI * 2)) * Math.asin(1 / a)) * (Math.PI * 2)) / p,\n    )\n  );\n};\n\nconst Spring: TypeEasingFunction = (\n  t: number,\n  params: (string | number)[] = [],\n  duration?: number,\n) => {\n  let [mass = 1, stiffness = 100, damping = 10, velocity = 0] = params;\n\n  mass = clamp(mass as number, 0.1, 1000);\n  stiffness = clamp(stiffness as number, 0.1, 1000);\n  damping = clamp(damping as number, 0.1, 1000);\n  velocity = clamp(velocity as number, 0.1, 1000);\n\n  const w0 = Math.sqrt(stiffness / mass);\n  const zeta = damping / (2 * Math.sqrt(stiffness * mass));\n  const wd = zeta < 1 ? w0 * Math.sqrt(1 - zeta * zeta) : 0;\n  const a = 1;\n  const b = zeta < 1 ? (zeta * w0 + -velocity) / wd : -velocity + w0;\n\n  let progress = duration ? (duration * t) / 1000 : t;\n  if (zeta < 1) {\n    progress =\n      Math.exp(-progress * zeta * w0) *\n      (a * Math.cos(wd * progress) + b * Math.sin(wd * progress));\n  } else {\n    progress = (a + b * progress) * Math.exp(-progress * w0);\n  }\n\n  if (t === 0 || t === 1) return t;\n  return 1 - progress;\n};\n\n/**\n * Cache the durations at set easing parameters\n */\n// export const EasingDurationCache: Map<string | TypeEasingFunction, number> = new Map();\n\n/**\n * The threshold for an infinite loop\n */\n// const INTINITE_LOOP_LIMIT = 10000;\n\n/** Convert easing parameters to Array of numbers, e.g. \"spring(2, 500)\" to [2, 500] */\n// export const parseEasingParameters = (str: string) => {\n//   const match = /(\\(|\\s)([^)]+)\\)?/.exec(str);\n//   return match\n//     ? match[2].split(',').map((value) => {\n//         const num = parseFloat(value);\n//         return !Number.isNaN(num) ? num : value.trim();\n//       })\n//     : [];\n// };\n\n/**\n * The spring easing function will only look smooth at certain durations, with certain parameters.\n * This functions returns the optimal duration to create a smooth springy animation based on physics\n *\n * Note: it can also be used to determine the optimal duration of other types of easing function, but be careful of 'in-'\n * easing functions, because of the nature of the function it can sometimes create an infinite loop, I suggest only using\n * `getEasingDuration` for `spring`, specifically 'out-spring' and 'spring'\n */\n// export const getEasingDuration = (easing: string | TypeEasingFunction = 'spring') => {\n//   if (EasingDurationCache.has(easing)) return EasingDurationCache.get(easing);\n\n//   // eslint-disable-next-line @typescript-eslint/no-use-before-define\n//   const easingFunction = typeof easing == 'function' ? easing : getEasingFunction(easing as string);\n//   const params = typeof easing == 'function' ? [] : parseEasingParameters(easing);\n//   const frame = 1 / 6;\n\n//   let elapsed = 0;\n//   let rest = 0;\n//   let count = 0;\n\n//   while (++count < INTINITE_LOOP_LIMIT) {\n//     elapsed += frame;\n//     if (easingFunction(elapsed, params, undefined) === 1) {\n//       rest++;\n//       if (rest >= 16) break;\n//     } else {\n//       rest = 0;\n//     }\n//   }\n\n//   const duration = elapsed * frame * 1000;\n//   EasingDurationCache.set(easing, duration);\n//   return duration;\n// };\n\n/**\n  These Easing Functions are based off of the Sozi Project's easing functions\n  https://github.com/sozi-projects/Sozi/blob/d72e44ebd580dc7579d1e177406ad41e632f961d/src/js/player/Timing.js\n*/\nconst Steps: TypeEasingFunction = (t: number, params = []) => {\n  const [steps = 10, type] = params as [number, string];\n  const trunc = type === 'start' ? Math.ceil : Math.floor;\n  return trunc(clamp(t, 0, 1) * steps) / steps;\n};\n\n// @ts-ignore\nconst Bezier: TypeEasingFunction = (t: number, params: number[] = []) => {\n  const [mX1, mY1, mX2, mY2] = params;\n  return bezier(mX1, mY1, mX2, mY2)(t);\n};\n\n/** The default `ease-in` easing function */\nconst easein: TypeEasingFunction = bezier(0.42, 0.0, 1.0, 1.0);\n\n/** Converts easing functions to their `out`counter parts */\nconst EaseOut = (ease: TypeEasingFunction): TypeEasingFunction => {\n  return (t, params = [], duration?: number) =>\n    1 - ease(1 - t, params, duration);\n};\n\n/** Converts easing functions to their `in-out` counter parts */\nconst EaseInOut = (ease: TypeEasingFunction): TypeEasingFunction => {\n  return (t, params = [], duration?: number) =>\n    t < 0.5\n      ? ease(t * 2, params, duration) / 2\n      : 1 - ease(t * -2 + 2, params, duration) / 2;\n};\n\n/** Converts easing functions to their `out-in` counter parts */\nconst EaseOutIn = (ease: TypeEasingFunction): TypeEasingFunction => {\n  return (t, params = [], duration?: number) => {\n    return t < 0.5\n      ? (1 - ease(1 - t * 2, params, duration)) / 2\n      : (ease(t * 2 - 1, params, duration) + 1) / 2;\n  };\n};\n\n/**\n * The default list of easing functions, do note this is different from {@link EASING}\n */\ntype EasingFunctionType =\n  | 'steps'\n  | 'step-start'\n  | 'step-end'\n  | 'linear'\n  | 'cubic-bezier'\n  | 'ease'\n  | 'in'\n  | 'out'\n  | 'in-out'\n  | 'out-in'\n  | 'in-quad'\n  | 'out-quad'\n  | 'in-out-quad'\n  | 'out-in-quad'\n  | 'in-cubic'\n  | 'out-cubic'\n  | 'in-out-cubic'\n  | 'out-in-cubic'\n  | 'in-quart'\n  | 'out-quart'\n  | 'in-out-quart'\n  | 'out-in-quart'\n  | 'in-quint'\n  | 'out-quint'\n  | 'in-out-quint'\n  | 'out-in-quint'\n  | 'in-expo'\n  | 'out-expo'\n  | 'in-out-expo'\n  | 'out-in-expo'\n  | 'in-sine'\n  | 'out-sine'\n  | 'in-out-sine'\n  | 'out-in-sine'\n  | 'in-circ'\n  | 'out-circ'\n  | 'in-out-circ'\n  | 'out-in-circ'\n  | 'in-back'\n  | 'out-back'\n  | 'in-out-back'\n  | 'out-in-back'\n  | 'in-bounce'\n  | 'out-bounce'\n  | 'in-out-bounce'\n  | 'out-in-bounce'\n  | 'in-elastic'\n  | 'out-elastic'\n  | 'in-out-elastic'\n  | 'out-in-elastic'\n  | 'spring'\n  | 'spring-in'\n  | 'spring-out'\n  | 'spring-in-out'\n  | 'spring-out-in';\nexport const EasingFunctions: Record<EasingFunctionType, TypeEasingFunction> = {\n  steps: Steps,\n  'step-start': (t) => Steps(t, [1, 'start']),\n  'step-end': (t) => Steps(t, [1, 'end']),\n\n  linear: (t) => t,\n  'cubic-bezier': Bezier,\n  ease: (t) => Bezier(t, [0.25, 0.1, 0.25, 1.0]),\n\n  in: easein,\n  out: EaseOut(easein),\n  'in-out': EaseInOut(easein),\n  'out-in': EaseOutIn(easein),\n\n  'in-quad': Quad,\n  'out-quad': EaseOut(Quad),\n  'in-out-quad': EaseInOut(Quad),\n  'out-in-quad': EaseOutIn(Quad),\n\n  'in-cubic': Cubic,\n  'out-cubic': EaseOut(Cubic),\n  'in-out-cubic': EaseInOut(Cubic),\n  'out-in-cubic': EaseOutIn(Cubic),\n\n  'in-quart': Quart,\n  'out-quart': EaseOut(Quart),\n  'in-out-quart': EaseInOut(Quart),\n  'out-in-quart': EaseOutIn(Quart),\n\n  'in-quint': Quint,\n  'out-quint': EaseOut(Quint),\n  'in-out-quint': EaseInOut(Quint),\n  'out-in-quint': EaseOutIn(Quint),\n\n  'in-expo': Expo,\n  'out-expo': EaseOut(Expo),\n  'in-out-expo': EaseInOut(Expo),\n  'out-in-expo': EaseOutIn(Expo),\n\n  'in-sine': Sine,\n  'out-sine': EaseOut(Sine),\n  'in-out-sine': EaseInOut(Sine),\n  'out-in-sine': EaseOutIn(Sine),\n\n  'in-circ': Circ,\n  'out-circ': EaseOut(Circ),\n  'in-out-circ': EaseInOut(Circ),\n  'out-in-circ': EaseOutIn(Circ),\n\n  'in-back': Back,\n  'out-back': EaseOut(Back),\n  'in-out-back': EaseInOut(Back),\n  'out-in-back': EaseOutIn(Back),\n\n  'in-bounce': Bounce,\n  'out-bounce': EaseOut(Bounce),\n  'in-out-bounce': EaseInOut(Bounce),\n  'out-in-bounce': EaseOutIn(Bounce),\n\n  'in-elastic': Elastic,\n  'out-elastic': EaseOut(Elastic),\n  'in-out-elastic': EaseInOut(Elastic),\n  'out-in-elastic': EaseOutIn(Elastic),\n\n  spring: Spring,\n  'spring-in': Spring,\n  'spring-out': EaseOut(Spring),\n  'spring-in-out': EaseInOut(Spring),\n  'spring-out-in': EaseOutIn(Spring),\n};\n\n/**\n * Convert string easing to their proper form\n */\nconst complexEasingSyntax = (ease: string) =>\n  convertToDash(ease)\n    .replace(/^ease-/, '') // Remove the \"ease-\" keyword\n    .replace(/(\\(|\\s).+/, '') // Remove the function brackets and parameters\n    .toLowerCase()\n    .trim();\n\n/** Re-maps a number from one range to another. Numbers outside the range are not clamped to 0 and 1, because out-of-range values are often intentional and useful. */\nexport const getEasingFunction = (ease: string) => {\n  return EasingFunctions[complexEasingSyntax(ease)] || EasingFunctions.linear;\n};\n\n// /**\n//  * Allows you to register new easing functions\n//  */\n// export const registerEasingFunction = (key: string, fn: TypeEasingFunction) => {\n//   Object.assign(EasingFunctions, {\n//     [key]: fn,\n//   });\n// };\n\n// /**\n//  * Allows you to register multiple new easing functions\n//  */\n// export const registerEasingFunctions = (...obj: typeof EasingFunctions[]) => {\n//   Object.assign(EasingFunctions, ...obj);\n// };\n","import type { AnimationEffectTiming } from '../dom/AnimationEffectTiming';\nimport { bezier } from './bezier-easing';\nimport { convertToDash, getEasingFunction } from './custom-easing';\n\nexport const linear = (x: number) => {\n  return x;\n};\n\nconst Start = 1;\nconst Middle = 0.5;\nconst End = 0;\n\nfunction step(count: number, pos: number) {\n  return function (x: number) {\n    if (x >= 1) {\n      return 1;\n    }\n    const stepSize = 1 / count;\n    x += pos * stepSize;\n    return x - (x % stepSize);\n  };\n}\n\nconst numberString = '\\\\s*(-?\\\\d+\\\\.?\\\\d*|-?\\\\.\\\\d+)\\\\s*';\nconst cubicBezierRe = new RegExp(\n  `cubic-bezier\\\\(${numberString},${numberString},${numberString},${numberString}\\\\)`,\n);\nconst step1Re = /steps\\(\\s*(\\d+)\\s*\\)/;\nconst step2Re = /steps\\(\\s*(\\d+)\\s*,\\s*(start|middle|end)\\s*\\)/;\n\nexport function parseEasingFunction(\n  normalizedEasing: string,\n): (t: number) => number {\n  const cubicData = cubicBezierRe.exec(normalizedEasing);\n  if (cubicData) {\n    // @ts-ignore\n    return bezier(...cubicData.slice(1).map(Number));\n  }\n  const step1Data = step1Re.exec(normalizedEasing);\n  if (step1Data) {\n    return step(Number(step1Data[1]), End);\n  }\n  const step2Data = step2Re.exec(normalizedEasing);\n  if (step2Data) {\n    // @ts-ignore\n    return step(\n      Number(step2Data[1]),\n      { start: Start, middle: Middle, end: End }[step2Data[2]],\n    );\n  }\n  return getEasingFunction(normalizedEasing);\n}\n\nexport function calculateActiveDuration(timing: EffectTiming) {\n  // @ts-ignore\n  return Math.abs(repeatedDuration(timing) / (timing.playbackRate || 1));\n}\n\nfunction repeatedDuration(timing: EffectTiming): number {\n  // https://drafts.csswg.org/web-animations/#calculating-the-active-duration\n  if (timing.duration === 0 || timing.iterations === 0) {\n    return 0;\n  }\n\n  // @see https://developer.mozilla.org/en-US/docs/Web/API/EffectTiming/duration#value\n  // if (timing.duration === 'auto') {\n  //   timing.duration = 0;\n  // }\n\n  return (\n    (timing.duration === 'auto' ? 0 : Number(timing.duration)) *\n    (timing.iterations ?? 1)\n  );\n}\n\nconst PhaseNone = 0;\nconst PhaseBefore = 1;\nconst PhaseAfter = 2;\nconst PhaseActive = 3;\n\nfunction calculatePhase(\n  activeDuration: number,\n  localTime: number | null,\n  timing: AnimationEffectTiming,\n) {\n  // https://drafts.csswg.org/web-animations/#animation-effect-phases-and-states\n  if (localTime === null) {\n    return PhaseNone;\n  }\n\n  const { endTime } = timing;\n  if (localTime < Math.min(timing.delay, endTime)) {\n    return PhaseBefore;\n  }\n  if (\n    localTime >=\n    Math.min(timing.delay + activeDuration + timing.endDelay, endTime)\n  ) {\n    return PhaseAfter;\n  }\n\n  return PhaseActive;\n}\n\nfunction calculateActiveTime(\n  activeDuration: any,\n  fillMode: string,\n  localTime: number,\n  phase: number,\n  delay: number,\n) {\n  // https://drafts.csswg.org/web-animations/#calculating-the-active-time\n  switch (phase) {\n    case PhaseBefore:\n      if (fillMode === 'backwards' || fillMode === 'both') return 0;\n      return null;\n    case PhaseActive:\n      return localTime - delay;\n    case PhaseAfter:\n      if (fillMode === 'forwards' || fillMode === 'both') return activeDuration;\n      return null;\n    case PhaseNone:\n      return null;\n  }\n}\n\nfunction calculateOverallProgress(\n  iterationDuration: number,\n  phase: number,\n  iterations: number,\n  activeTime: number,\n  iterationStart: number,\n) {\n  // https://drafts.csswg.org/web-animations/#calculating-the-overall-progress\n  let overallProgress = iterationStart;\n  if (iterationDuration === 0) {\n    if (phase !== PhaseBefore) {\n      overallProgress += iterations;\n    }\n  } else {\n    overallProgress += activeTime / iterationDuration;\n  }\n  return overallProgress;\n}\n\nfunction calculateSimpleIterationProgress(\n  overallProgress: number,\n  iterationStart: number,\n  phase: number,\n  iterations: number,\n  activeTime: number,\n  iterationDuration: number,\n) {\n  // https://drafts.csswg.org/web-animations/#calculating-the-simple-iteration-progress\n\n  let simpleIterationProgress =\n    overallProgress === Infinity ? iterationStart % 1 : overallProgress % 1;\n  if (\n    simpleIterationProgress === 0 &&\n    phase === PhaseAfter &&\n    iterations !== 0 &&\n    (activeTime !== 0 || iterationDuration === 0)\n  ) {\n    simpleIterationProgress = 1;\n  }\n  return simpleIterationProgress;\n}\n\nfunction calculateCurrentIteration(\n  phase: number,\n  iterations: number,\n  simpleIterationProgress: number,\n  overallProgress: number,\n) {\n  // https://drafts.csswg.org/web-animations/#calculating-the-current-iteration\n  if (phase === PhaseAfter && iterations === Infinity) {\n    return Infinity;\n  }\n  if (simpleIterationProgress === 1) {\n    return Math.floor(overallProgress) - 1;\n  }\n  return Math.floor(overallProgress);\n}\n\nfunction calculateDirectedProgress(\n  playbackDirection: string,\n  currentIteration: number,\n  simpleIterationProgress: number,\n) {\n  // https://drafts.csswg.org/web-animations/#calculating-the-directed-progress\n  let currentDirection = playbackDirection;\n  if (playbackDirection !== 'normal' && playbackDirection !== 'reverse') {\n    let d = currentIteration;\n    if (playbackDirection === 'alternate-reverse') {\n      d += 1;\n    }\n    currentDirection = 'normal';\n    if (d !== Infinity && d % 2 !== 0) {\n      currentDirection = 'reverse';\n    }\n  }\n  if (currentDirection === 'normal') {\n    return simpleIterationProgress;\n  }\n  return 1 - simpleIterationProgress;\n}\n\nexport function calculateIterationProgress(\n  activeDuration: number,\n  localTime: number,\n  timing: AnimationEffectTiming,\n) {\n  const phase = calculatePhase(activeDuration, localTime, timing);\n  const activeTime = calculateActiveTime(\n    activeDuration,\n    timing.fill,\n    localTime,\n    phase,\n    timing.delay,\n  );\n  if (activeTime === null) return null;\n\n  const duration = timing.duration === 'auto' ? 0 : timing.duration;\n  const overallProgress = calculateOverallProgress(\n    duration,\n    phase,\n    timing.iterations,\n    activeTime,\n    timing.iterationStart,\n  );\n  const simpleIterationProgress = calculateSimpleIterationProgress(\n    overallProgress,\n    timing.iterationStart,\n    phase,\n    timing.iterations,\n    activeTime,\n    duration,\n  );\n  const currentIteration = calculateCurrentIteration(\n    phase,\n    timing.iterations,\n    simpleIterationProgress,\n    overallProgress,\n  );\n\n  const directedProgress = calculateDirectedProgress(\n    timing.direction,\n    currentIteration,\n    simpleIterationProgress,\n  );\n\n  timing.currentIteration = currentIteration;\n  timing.progress = directedProgress;\n\n  // https://drafts.csswg.org/web-animations/#calculating-the-transformed-progress\n  // https://drafts.csswg.org/web-animations/#calculating-the-iteration-progress\n  return timing.easingFunction(directedProgress);\n}\n\n/**\n * From: [https://easings.net]\n * Read More about easings on [MDN](https://developer.mozilla.org/en-US/docs/Web/API/EffectTiming/easing)\n */\nexport const EASINGS: Record<string, string> = {\n  in: 'ease-in',\n  out: 'ease-out',\n  'in-out': 'ease-in-out',\n\n  // Sine\n  'in-sine': 'cubic-bezier(0.47, 0, 0.745, 0.715)',\n  'out-sine': 'cubic-bezier(0.39, 0.575, 0.565, 1)',\n  'in-out-sine': 'cubic-bezier(0.445, 0.05, 0.55, 0.95)',\n\n  // Quad\n  'in-quad': 'cubic-bezier(0.55, 0.085, 0.68, 0.53)',\n  'out-quad': 'cubic-bezier(0.25, 0.46, 0.45, 0.94)',\n  'in-out-quad': 'cubic-bezier(0.455, 0.03, 0.515, 0.955)',\n\n  // Cubic\n  'in-cubic': 'cubic-bezier(0.55, 0.055, 0.675, 0.19)',\n  'out-cubic': 'cubic-bezier(0.215, 0.61, 0.355, 1)',\n  'in-out-cubic': 'cubic-bezier(0.645, 0.045, 0.355, 1)',\n\n  // Quart\n  'in-quart': 'cubic-bezier(0.895, 0.03, 0.685, 0.22)',\n  'out-quart': 'cubic-bezier(0.165, 0.84, 0.44, 1)',\n  'in-out-quart': 'cubic-bezier(0.77, 0, 0.175, 1)',\n\n  // Quint\n  'in-quint': 'cubic-bezier(0.755, 0.05, 0.855, 0.06)',\n  'out-quint': 'cubic-bezier(0.23, 1, 0.32, 1)',\n  'in-out-quint': 'cubic-bezier(0.86, 0, 0.07, 1)',\n\n  // Expo\n  'in-expo': 'cubic-bezier(0.95, 0.05, 0.795, 0.035)',\n  'out-expo': 'cubic-bezier(0.19, 1, 0.22, 1)',\n  'in-out-expo': 'cubic-bezier(1, 0, 0, 1)',\n\n  // Circ\n  'in-circ': 'cubic-bezier(0.6, 0.04, 0.98, 0.335)',\n  'out-circ': 'cubic-bezier(0.075, 0.82, 0.165, 1)',\n  'in-out-circ': 'cubic-bezier(0.785, 0.135, 0.15, 0.86)',\n\n  // Back\n  'in-back': 'cubic-bezier(0.6, -0.28, 0.735, 0.045)',\n  'out-back': 'cubic-bezier(0.175, 0.885, 0.32, 1.275)',\n  'in-out-back': 'cubic-bezier(0.68, -0.55, 0.265, 1.55)',\n};\nexport const EasingKeys = Object.keys(EASINGS);\n\n/**\n * Converts users input into a usable easing function string\n */\nexport const getEase = (ease: keyof typeof EASINGS = 'ease'): string => {\n  // Convert camelCase strings into dashed strings, then Remove the \"ease-\" keyword\n  const search = convertToDash(ease).replace(/^ease-/, '');\n  return EASINGS[search] || ease;\n};\n","import type {\n  IAnimationEffectTiming,\n  IElement,\n  Interpolatable,\n  TypeEasingFunction,\n} from '@antv/g-lite';\nimport { propertyMetadataCache, runtime } from '@antv/g-lite';\nimport { isNumber } from '@antv/util';\nimport { parseEasingFunction } from './animation';\n\nexport function convertEffectInput(\n  keyframes: ComputedKeyframe[],\n  timing: IAnimationEffectTiming,\n  target: IElement | null,\n) {\n  const propertySpecificKeyframeGroups = makePropertySpecificKeyframeGroups(\n    keyframes,\n    timing,\n  );\n  const interpolations = makeInterpolations(\n    propertySpecificKeyframeGroups,\n    target,\n  );\n\n  return function (target: IElement, fraction: number) {\n    if (fraction !== null) {\n      interpolations\n        .filter((interpolation) => {\n          return (\n            fraction >= interpolation.applyFrom &&\n            fraction < interpolation.applyTo\n          );\n        })\n        .forEach((interpolation) => {\n          const offsetFraction = fraction - interpolation.startOffset;\n          const localDuration =\n            interpolation.endOffset - interpolation.startOffset;\n          const scaledLocalTime =\n            localDuration === 0 ? 0 : offsetFraction / localDuration;\n          // apply updated attribute\n          target.setAttribute(\n            interpolation.property,\n            interpolation.interpolation(scaledLocalTime),\n            false,\n            false, // disable memoize\n          );\n\n          // if (interpolation.property === 'visibility') {\n          //   console.log(\n          //     scaledLocalTime,\n          //     interpolation.interpolation(scaledLocalTime),\n          //   );\n          // }\n        });\n    } else {\n      for (const property in propertySpecificKeyframeGroups)\n        if (isNotReservedWord(property)) {\n          // clear attribute\n          target.setAttribute(property, null);\n        }\n    }\n  };\n}\n\ninterface PropertySpecificKeyframe {\n  offset: number | null;\n  computedOffset: number;\n  easing: string;\n  easingFunction: TypeEasingFunction;\n  value: any;\n}\n\nfunction isNotReservedWord(member: string) {\n  return (\n    member !== 'offset' &&\n    member !== 'easing' &&\n    member !== 'composite' &&\n    member !== 'computedOffset'\n  );\n}\n\nfunction makePropertySpecificKeyframeGroups(\n  keyframes: ComputedKeyframe[],\n  timing: IAnimationEffectTiming,\n) {\n  const propertySpecificKeyframeGroups: Record<\n    string,\n    PropertySpecificKeyframe[]\n  > = {};\n\n  for (let i = 0; i < keyframes.length; i++) {\n    for (const member in keyframes[i]) {\n      if (isNotReservedWord(member)) {\n        const propertySpecificKeyframe = {\n          offset: keyframes[i].offset,\n          computedOffset: keyframes[i].computedOffset,\n          easing: keyframes[i].easing,\n          easingFunction:\n            parseEasingFunction(keyframes[i].easing) || timing.easingFunction,\n          value: keyframes[i][member],\n        };\n        propertySpecificKeyframeGroups[member] =\n          propertySpecificKeyframeGroups[member] || [];\n        propertySpecificKeyframeGroups[member].push(propertySpecificKeyframe);\n      }\n    }\n  }\n  return propertySpecificKeyframeGroups;\n}\n\nfunction makeInterpolations(\n  propertySpecificKeyframeGroups: Record<string, PropertySpecificKeyframe[]>,\n  target: IElement | null,\n) {\n  const interpolations = [];\n  for (const groupName in propertySpecificKeyframeGroups) {\n    const keyframes = propertySpecificKeyframeGroups[groupName];\n    for (let i = 0; i < keyframes.length - 1; i++) {\n      let startIndex = i;\n      let endIndex = i + 1;\n      const startOffset = keyframes[startIndex].computedOffset;\n      const endOffset = keyframes[endIndex].computedOffset;\n      let applyFrom = startOffset;\n      let applyTo = endOffset;\n\n      if (i === 0) {\n        applyFrom = -Infinity;\n        if (endOffset === 0) {\n          endIndex = startIndex;\n        }\n      }\n      if (i === keyframes.length - 2) {\n        applyTo = Infinity;\n        if (startOffset === 1) {\n          startIndex = endIndex;\n        }\n      }\n\n      interpolations.push({\n        applyFrom,\n        applyTo,\n        startOffset: keyframes[startIndex].computedOffset,\n        endOffset: keyframes[endIndex].computedOffset,\n        easingFunction: keyframes[startIndex].easingFunction,\n        property: groupName,\n        interpolation: propertyInterpolation(\n          groupName,\n          keyframes[startIndex].value,\n          keyframes[endIndex].value,\n          target,\n        ),\n      });\n    }\n  }\n  interpolations.sort((leftInterpolation, rightInterpolation) => {\n    return leftInterpolation.startOffset - rightInterpolation.startOffset;\n  });\n  return interpolations;\n}\n\nconst InterpolationFactory = (\n  from: Interpolatable,\n  to: Interpolatable,\n  convertToString: Function,\n) => {\n  return (f: number) => {\n    const interpolated = interpolate(from, to, f);\n    return isNumber(interpolated)\n      ? interpolated\n      : convertToString(interpolated);\n  };\n};\n\nfunction propertyInterpolation(\n  property: string,\n  left: string | number,\n  right: string | number,\n  target: IElement | null,\n) {\n  const metadata = propertyMetadataCache[property];\n\n  if (metadata && metadata.syntax && metadata.int) {\n    const propertyHandler = runtime.styleValueRegistry.getPropertySyntax(\n      metadata.syntax,\n    );\n\n    if (propertyHandler) {\n      const parser = propertyHandler.parser;\n      const usedLeft = parser ? parser(left, target) : left;\n      const usedRight = parser ? parser(right, target) : right;\n\n      // merger [left, right, n2string()]\n      const interpolationArgs = propertyHandler.mixer(\n        usedLeft,\n        usedRight,\n        target,\n      );\n      if (interpolationArgs) {\n        const interp = InterpolationFactory(\n          // @ts-ignore\n          ...interpolationArgs,\n        );\n        return function (t: number) {\n          if (t === 0) return left;\n          if (t === 1) return right;\n          return interp(t);\n        };\n      }\n    }\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  return InterpolationFactory(false, true, function (bool: boolean) {\n    return bool ? right : left;\n  });\n}\n\n/**\n * interpolate with number, boolean, number[], boolean[]\n */\nfunction interpolate(\n  from: Interpolatable,\n  to: Interpolatable,\n  f: number,\n): Interpolatable {\n  if (typeof from === 'number' && typeof to === 'number') {\n    return from * (1 - f) + to * f;\n  }\n  if (\n    (typeof from === 'boolean' && typeof to === 'boolean') ||\n    (typeof from === 'string' && typeof to === 'string') // skip string, eg. path ['M', 10, 10]\n  ) {\n    return f < 0.5 ? from : to;\n  }\n\n  if (Array.isArray(from) && Array.isArray(to)) {\n    // interpolate arrays/matrix\n    const fromLength = from.length;\n    const toLength = to.length;\n    const length = Math.max(fromLength, toLength);\n\n    const r: number[] = [];\n    for (let i = 0; i < length; i++) {\n      r.push(\n        interpolate(\n          from[i < fromLength ? i : fromLength - 1],\n          to[i < toLength ? i : toLength - 1],\n          f,\n        ) as number,\n      );\n    }\n    return r;\n  }\n  throw new Error(`Mismatched interpolation arguments ${from}:${to}`);\n}\n","import { linear, parseEasingFunction } from '../utils/animation';\nimport type { KeyframeEffect } from './KeyframeEffect';\n\n/**\n * @see https://developer.mozilla.org/en-US/docs/Web/API/EffectTiming\n */\nexport class AnimationEffectTiming implements EffectTiming {\n  /**\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/EffectTiming/delay\n   */\n  delay = 0;\n\n  /**\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/EffectTiming/direction\n   */\n  direction: PlaybackDirection = 'normal';\n\n  /**\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/EffectTiming/duration\n   */\n  duration: number | 'auto' = 'auto';\n\n  /**\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/EffectTiming/easing\n   */\n  private _easing = 'linear';\n  easingFunction = linear;\n  get easing() {\n    return this._easing;\n  }\n  set easing(value: string) {\n    this.easingFunction = parseEasingFunction(value);\n    this._easing = value;\n  }\n\n  /**\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/EffectTiming/endDelay\n   */\n  endDelay = 0;\n\n  /**\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/EffectTiming/fill\n   */\n  fill: FillMode = 'auto';\n\n  /**\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/EffectTiming/iterationStart\n   */\n  iterationStart = 0;\n\n  /**\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/EffectTiming/iterations\n   */\n  iterations = 1;\n\n  /**\n   * @deprecated\n   */\n  playbackRate: number;\n\n  /**\n   * ref to effect\n   */\n  effect: KeyframeEffect;\n\n  composite: string;\n\n  /**\n   * ComputedEffectTiming\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/AnimationEffect/getComputedTiming\n   */\n  activeDuration: number;\n\n  endTime: number;\n\n  currentIteration: number | null = null;\n\n  progress: number | null = null;\n}\n","import { isNil } from '@antv/util';\nimport type { AnimationEffectTiming } from './AnimationEffectTiming';\n\n/**\n * @example\n  {\n    translateY: [200, 300],\n    scale: [1, 10],\n  }\n\n * groups' length can be different, the following config should generate 3 frames:\n  @example\n  {\n    translateY: [200, 300, 400],\n    scale: [1, 10],\n  }\n */\nfunction convertToArrayForm(effectInput: PropertyIndexedKeyframes) {\n  const normalizedEffectInput: Keyframe[] = [];\n\n  for (const property in effectInput) {\n    // skip reserved props\n    if (property in ['easing', 'offset', 'composite']) {\n      continue;\n    }\n\n    // @ts-ignore\n    let values: string[] | (number | null)[] = effectInput[property];\n    if (!Array.isArray(values)) {\n      values = [values];\n    }\n\n    const numKeyframes = values.length;\n    for (let i = 0; i < numKeyframes; i++) {\n      if (!normalizedEffectInput[i]) {\n        const keyframe: Keyframe = {};\n        if ('offset' in effectInput) {\n          keyframe.offset = Number(effectInput.offset);\n        }\n\n        if ('easing' in effectInput) {\n          // @ts-ignore\n          keyframe.easing = effectInput.easing;\n        }\n\n        if ('composite' in effectInput) {\n          // @ts-ignore\n          keyframe.composite = effectInput.composite;\n        }\n        normalizedEffectInput[i] = keyframe;\n      }\n\n      if (values[i] !== undefined && values[i] !== null) {\n        normalizedEffectInput[i][property] = values[i];\n      }\n    }\n  }\n\n  normalizedEffectInput.sort(function (a, b) {\n    return (\n      ((a.computedOffset as number) || 0) - ((b.computedOffset as number) || 0)\n    );\n  });\n  return normalizedEffectInput;\n}\n\nexport function normalizeKeyframes(\n  effectInput: Keyframe[] | PropertyIndexedKeyframes | null,\n  timing?: AnimationEffectTiming,\n): ComputedKeyframe[] {\n  if (effectInput === null) {\n    return [];\n  }\n\n  if (!Array.isArray(effectInput)) {\n    effectInput = convertToArrayForm(effectInput);\n  }\n\n  let keyframes = effectInput.map((originalKeyframe) => {\n    const keyframe: Keyframe = {};\n\n    if (timing?.composite) {\n      // This will be auto if the composite operation specified on the effect is being used.\n      // @see https://developer.mozilla.org/en-US/docs/Web/API/Web_Animations_API/Keyframe_Formats\n      keyframe.composite = 'auto';\n    }\n\n    for (const member in originalKeyframe) {\n      let memberValue = originalKeyframe[member];\n      if (member === 'offset') {\n        if (memberValue !== null) {\n          memberValue = Number(memberValue);\n          if (!isFinite(memberValue))\n            throw new Error('Keyframe offsets must be numbers.');\n          if (memberValue < 0 || memberValue > 1)\n            throw new Error('Keyframe offsets must be between 0 and 1.');\n          keyframe.computedOffset = memberValue;\n        }\n      } else if (member === 'composite') {\n        // TODO: Support add & accumulate in KeyframeEffect.composite\n        // @see https://developer.mozilla.org/en-US/docs/Web/API/KeyframeEffect/composite\n        if (\n          ['replace', 'add', 'accumulate', 'auto'].indexOf(\n            memberValue as string,\n          ) === -1\n        ) {\n          throw new Error(`${memberValue} compositing is not supported`);\n        }\n      } else if (member === 'easing') {\n        // TODO: Validate animation-timing-function\n        // @see https://developer.mozilla.org/en-US/docs/Web/CSS/animation-timing-function\n        // memberValue = memberValue;\n        // } else {\n        //   memberValue = '' + memberValue;\n      }\n\n      // assign to keyframe, no need to parse shorthand value\n      keyframe[member] = memberValue;\n    }\n    if (keyframe.offset === undefined) {\n      keyframe.offset = null;\n    }\n    if (keyframe.easing === undefined) {\n      // override with timing.easing\n      keyframe.easing = timing?.easing || 'linear';\n    }\n    if (keyframe.composite === undefined) {\n      keyframe.composite = 'auto';\n    }\n    return keyframe;\n  });\n\n  let everyFrameHasOffset = true;\n  let previousOffset = -Infinity;\n  for (let i = 0; i < keyframes.length; i++) {\n    const { offset } = keyframes[i];\n    if (!isNil(offset)) {\n      if (offset < previousOffset) {\n        throw new TypeError(\n          'Keyframes are not loosely sorted by offset. Sort or specify offsets.',\n        );\n      }\n      previousOffset = offset;\n    } else {\n      everyFrameHasOffset = false;\n    }\n  }\n\n  keyframes = keyframes.filter((keyframe) => {\n    return Number(keyframe.offset) >= 0 && Number(keyframe.offset) <= 1;\n  });\n\n  function spaceKeyframes() {\n    const { length } = keyframes;\n    keyframes[length - 1].computedOffset = Number(\n      keyframes[length - 1].offset ?? 1,\n    );\n    if (length > 1) {\n      keyframes[0].computedOffset = Number(keyframes[0].offset ?? 0);\n    }\n\n    let previousIndex = 0;\n    let previousOffset = Number(keyframes[0].computedOffset);\n    for (let i = 1; i < length; i++) {\n      const offset = keyframes[i].computedOffset;\n      if (!isNil(offset) && !isNil(previousOffset)) {\n        for (let j = 1; j < i - previousIndex; j++)\n          keyframes[previousIndex + j].computedOffset =\n            previousOffset +\n            ((Number(offset) - previousOffset) * j) / (i - previousIndex);\n        previousIndex = i;\n        previousOffset = Number(offset);\n      }\n    }\n  }\n  if (!everyFrameHasOffset) spaceKeyframes();\n\n  return keyframes as ComputedKeyframe[];\n}\n","import { IElement, IKeyframeEffect, runtime } from '@antv/g-lite';\nimport {\n  calculateActiveDuration,\n  calculateIterationProgress,\n  convertEffectInput,\n} from '../utils';\nimport type { Animation } from './Animation';\nimport { AnimationEffectTiming } from './AnimationEffectTiming';\nimport { normalizeKeyframes } from './KeyframeList';\n\nconst fills = 'backwards|forwards|both|none'.split('|');\nconst directions = 'reverse|alternate|alternate-reverse'.split('|');\nexport function makeTiming(\n  timingInput: KeyframeEffectOptions,\n  forGroup: boolean,\n) {\n  const timing = new AnimationEffectTiming();\n  if (forGroup) {\n    timing.fill = 'both';\n    timing.duration = 'auto';\n  }\n  if (typeof timingInput === 'number' && !isNaN(timingInput)) {\n    timing.duration = timingInput;\n  } else if (timingInput !== undefined) {\n    (Object.keys(timingInput) as (keyof EffectTiming)[]).forEach((property) => {\n      if (\n        timingInput[property] !== undefined &&\n        timingInput[property] !== null &&\n        timingInput[property] !== 'auto'\n      ) {\n        if (typeof timing[property] === 'number' || property === 'duration') {\n          if (\n            typeof timingInput[property] !== 'number' ||\n            isNaN(timingInput[property])\n          ) {\n            return;\n          }\n        }\n        if (\n          property === 'fill' &&\n          fills.indexOf(timingInput[property]) === -1\n        ) {\n          return;\n        }\n        if (\n          property === 'direction' &&\n          directions.indexOf(timingInput[property]) === -1\n        ) {\n          return;\n        }\n        // @ts-ignore\n        timing[property] = timingInput[property];\n      }\n    });\n  }\n  return timing;\n}\n\nexport function normalizeTimingInput(\n  timingInput: KeyframeEffectOptions | number | undefined,\n  forGroup: boolean,\n) {\n  timingInput = numericTimingToObject(timingInput ?? { duration: 'auto' });\n  return makeTiming(timingInput, forGroup);\n}\n\nexport function numericTimingToObject(\n  timingInput: KeyframeEffectOptions | number,\n) {\n  if (typeof timingInput === 'number') {\n    if (isNaN(timingInput)) {\n      timingInput = { duration: 'auto' };\n    } else {\n      timingInput = { duration: timingInput };\n    }\n  }\n  return timingInput;\n}\n\n/**\n * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyframeEffect\n * @example\n  const circleDownKeyframes = new KeyframeEffect(\n    circle, // element to animate\n    [\n      { transform: 'translateY(0)' }, // keyframe\n      { transform: 'translateY(100)' } // keyframe\n    ],\n    { duration: 3000, fill: 'forwards' } // keyframe options\n  );\n *\n */\nexport class KeyframeEffect implements IKeyframeEffect {\n  composite: CompositeOperation = 'replace';\n  iterationComposite: IterationCompositeOperation = 'replace';\n  // pseudoElement: string | null;\n  target: IElement | null;\n\n  animation: Animation | null;\n\n  timing: AnimationEffectTiming;\n  private computedTiming: ComputedEffectTiming;\n\n  normalizedKeyframes: ComputedKeyframe[];\n\n  private timeFraction: number | null;\n\n  private interpolations: (target: IElement, f: number) => void;\n\n  constructor(\n    target: IElement | null,\n    effectInput: Keyframe[] | PropertyIndexedKeyframes | null,\n    timingInput?: KeyframeEffectOptions | number,\n  ) {\n    this.target = target;\n    this.timing = normalizeTimingInput(timingInput, false);\n    this.timing.effect = this;\n    this.timing.activeDuration = calculateActiveDuration(this.timing);\n    this.timing.endTime = Math.max(\n      0,\n      this.timing.delay + this.timing.activeDuration + this.timing.endDelay,\n    );\n\n    this.normalizedKeyframes = normalizeKeyframes(effectInput, this.timing);\n    this.interpolations = convertEffectInput(\n      this.normalizedKeyframes,\n      this.timing,\n      this.target,\n    );\n\n    // 不支持 proxy 时降级成 this.timing\n    const { Proxy } = runtime.globalThis;\n    this.computedTiming = Proxy\n      ? new Proxy<AnimationEffectTiming>(this.timing, {\n          get: (target, prop) => {\n            if (prop === 'duration') {\n              return target.duration === 'auto' ? 0 : target.duration;\n            }\n            if (prop === 'fill') {\n              return target.fill === 'auto' ? 'none' : target.fill;\n            }\n            if (prop === 'localTime') {\n              return (this.animation && this.animation.currentTime) || null;\n            }\n            if (prop === 'currentIteration') {\n              if (!this.animation || this.animation.playState !== 'running') {\n                return null;\n              }\n              return target.currentIteration || 0;\n            }\n            if (prop === 'progress') {\n              if (!this.animation || this.animation.playState !== 'running') {\n                return null;\n              }\n              return target.progress || 0;\n            }\n            return target[prop];\n          },\n          set: () => {\n            return true;\n          },\n        })\n      : this.timing;\n  }\n\n  applyInterpolations() {\n    this.interpolations(\n      this.target as unknown as IElement,\n      Number(this.timeFraction),\n    );\n  }\n\n  update(localTime: number | null): boolean {\n    if (localTime === null) {\n      return false;\n    }\n    this.timeFraction = calculateIterationProgress(\n      this.timing.activeDuration,\n      localTime,\n      this.timing,\n    );\n    return this.timeFraction !== null;\n  }\n\n  getKeyframes(): ComputedKeyframe[] {\n    return this.normalizedKeyframes;\n  }\n  setKeyframes(keyframes: Keyframe[] | PropertyIndexedKeyframes | null): void {\n    this.normalizedKeyframes = normalizeKeyframes(keyframes);\n  }\n  /**\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/AnimationEffect/getComputedTiming\n   */\n  getComputedTiming(): ComputedEffectTiming {\n    return this.computedTiming;\n  }\n  /**\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/AnimationEffect/getTiming\n   */\n  getTiming(): EffectTiming {\n    return this.timing;\n  }\n  /**\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/AnimationEffect/updateTiming\n   */\n  updateTiming(timing?: OptionalEffectTiming): void {\n    Object.keys(timing || {}).forEach((name) => {\n      this.timing[name] = timing[name];\n    });\n  }\n}\n","import type {\n  IDocument,\n  IAnimationTimeline,\n  IElement,\n  IAnimation,\n} from '@antv/g-lite';\nimport { Animation } from './Animation';\nimport { KeyframeEffect } from './KeyframeEffect';\n\nexport function compareAnimations(\n  leftAnimation: IAnimation,\n  rightAnimation: IAnimation,\n) {\n  return Number(leftAnimation.id) - Number(rightAnimation.id);\n}\n\n/**\n * @see https://github.com/DefinitelyTyped/DefinitelyTyped/blob/master/types/web-animations-js/index.d.ts\n */\nexport class AnimationTimeline implements IAnimationTimeline {\n  /**\n   * all active animations\n   */\n  animations: Animation[] = [];\n\n  private ticking = false;\n\n  private timelineTicking = false;\n\n  private hasRestartedThisFrame = false;\n\n  animationsWithPromises: Animation[] = [];\n\n  private inTick = false;\n\n  private pendingEffects: (KeyframeEffect | null)[] = [];\n\n  currentTime: number | null = null;\n\n  private rafId = 0;\n  private rafCallbacks: [number, (x: number) => void][] = [];\n\n  private frameId: number;\n\n  constructor(private document: IDocument) {}\n\n  getAnimations() {\n    this.discardAnimations();\n    return this.animations.slice();\n  }\n\n  isTicking() {\n    return this.inTick;\n  }\n\n  play(\n    target: IElement,\n    keyframes: Keyframe[] | PropertyIndexedKeyframes | null,\n    options?: number | KeyframeAnimationOptions,\n  ): Animation {\n    const effect = new KeyframeEffect(target, keyframes, options);\n    const animation = new Animation(effect, this);\n    this.animations.push(animation);\n    this.restartWebAnimationsNextTick();\n    animation.updatePromises();\n    animation.play();\n    animation.updatePromises();\n    return animation;\n  }\n\n  // RAF is supposed to be the last script to occur before frame rendering but not\n  // all browsers behave like this. This function is for synchonously updating an\n  // animation's effects whenever its state is mutated by script to work around\n  // incorrect script execution ordering by the browser.\n  applyDirtiedAnimation(animation: Animation) {\n    if (this.inTick) {\n      return;\n    }\n    // update active animations in displayobject\n    animation.markTarget();\n    const animations = animation.targetAnimations();\n    animations.sort(compareAnimations);\n\n    // clear inactive animations\n    const inactiveAnimations = this.tick(\n      Number(this.currentTime),\n      false,\n      animations.slice(),\n    )[1];\n    inactiveAnimations.forEach((animation) => {\n      const index = this.animations.indexOf(animation);\n      if (index !== -1) {\n        this.animations.splice(index, 1);\n      }\n    });\n    this.applyPendingEffects();\n  }\n\n  restart() {\n    if (!this.ticking) {\n      this.ticking = true;\n      this.requestAnimationFrame(() => {});\n      this.hasRestartedThisFrame = true;\n    }\n    return this.hasRestartedThisFrame;\n  }\n\n  destroy() {\n    this.document.defaultView.cancelAnimationFrame(this.frameId);\n  }\n\n  applyPendingEffects() {\n    this.pendingEffects.forEach((effect) => {\n      effect?.applyInterpolations();\n    });\n    this.pendingEffects = [];\n  }\n\n  private updateAnimationsPromises() {\n    this.animationsWithPromises = this.animationsWithPromises.filter(\n      (animation) => {\n        return animation.updatePromises();\n      },\n    );\n  }\n\n  private discardAnimations() {\n    this.updateAnimationsPromises();\n    this.animations = this.animations.filter((animation) => {\n      return (\n        animation.playState !== 'finished' && animation.playState !== 'idle'\n      );\n    });\n  }\n\n  private restartWebAnimationsNextTick() {\n    if (!this.timelineTicking) {\n      this.timelineTicking = true;\n      this.requestAnimationFrame(this.webAnimationsNextTick);\n    }\n  }\n\n  private webAnimationsNextTick = (t: number) => {\n    this.currentTime = t;\n    this.discardAnimations();\n    if (this.animations.length === 0) {\n      this.timelineTicking = false;\n    } else {\n      this.requestAnimationFrame(this.webAnimationsNextTick);\n    }\n  };\n\n  private processRafCallbacks = (t: number) => {\n    const processing = this.rafCallbacks;\n    this.rafCallbacks = [];\n    if (t < Number(this.currentTime)) t = Number(this.currentTime);\n    this.animations.sort(compareAnimations);\n    this.animations = this.tick(t, true, this.animations)[0];\n    processing.forEach((entry) => {\n      entry[1](t);\n    });\n    this.applyPendingEffects();\n  };\n\n  private rAF(f: (x: number) => void) {\n    const id = this.rafId++;\n    if (this.rafCallbacks.length === 0) {\n      this.frameId = this.document.defaultView.requestAnimationFrame(\n        this.processRafCallbacks,\n      );\n    }\n    this.rafCallbacks.push([id, f]);\n    return id;\n  }\n\n  private requestAnimationFrame(f: (ts: number) => void) {\n    return this.rAF((x: number) => {\n      this.updateAnimationsPromises();\n      f(x);\n      this.updateAnimationsPromises();\n    });\n  }\n\n  tick(t: number, isAnimationFrame: boolean, updatingAnimations: IAnimation[]) {\n    this.inTick = true;\n    this.hasRestartedThisFrame = false;\n\n    this.currentTime = t;\n    this.ticking = false;\n\n    const newPendingClears: (KeyframeEffect | null)[] = [];\n    const newPendingEffects: (KeyframeEffect | null)[] = [];\n    const activeAnimations: Animation[] = [];\n    const inactiveAnimations: Animation[] = [];\n\n    (updatingAnimations as unknown as Animation[]).forEach((animation) => {\n      animation.tick(t, isAnimationFrame);\n\n      if (!animation._inEffect) {\n        newPendingClears.push(animation.effect);\n        animation.unmarkTarget();\n      } else {\n        newPendingEffects.push(animation.effect);\n        animation.markTarget();\n      }\n\n      if (animation._needsTick) this.ticking = true;\n\n      const alive = animation._inEffect || animation._needsTick;\n      animation._inTimeline = alive;\n      if (alive) {\n        activeAnimations.push(animation);\n      } else {\n        inactiveAnimations.push(animation);\n      }\n    });\n\n    this.pendingEffects.push(...newPendingClears);\n    this.pendingEffects.push(...newPendingEffects);\n\n    if (this.ticking) this.requestAnimationFrame(() => {});\n\n    this.inTick = false;\n    return [activeAnimations, inactiveAnimations];\n  }\n}\n","import { runtime } from '@antv/g-lite';\nimport { AnimationTimeline } from './dom/AnimationTimeline';\nimport { parseEasingFunction } from './utils';\n\nexport * from './dom';\nexport { EasingFunctions } from './utils';\n\nruntime.EasingFunction = parseEasingFunction;\nruntime.AnimationTimeline = AnimationTimeline;\n"],"names":["AnimationEvent","_FederatedEvent","manager","target","currentTime","timelineTime","_this","_classCallCheck","_callSuper","type","bubbles","currentTarget","defaultPrevented","eventPhase","AT_TARGET","timeStamp","Date","now","_inherits","_createClass","FederatedEvent","sequenceNumber","Animation","effect","timeline","_this$effect","currentTimePending","_idle","_paused","_finishedFlag","_currentTime","_playbackRate","_inTimeline","animation","id","concat","_inEffect","update","_totalDuration","Number","getComputedTiming","endTime","_holdTime","oldPlayState","updatePromises","key","get","_startTime","playbackRate","_isFinished","readyPromise","animationsWithPromises","indexOf","push","Promise","resolve","reject","resolveReadyPromise","rejectReadyPromise","Error","pending","_this2","finishedPromise","resolveFinishedPromise","rejectFinishedPromise","playState","set","newTime","isNaN","restart","_this$timeline","tickCurrentTime","applyDirtiedAnimation","value","oldCurrentTime","startTime","ensureAlive","newPlayState","undefined","play","rewind","animations","pause","finish","cancel","_this3","oncancel","event","setTimeout","reverse","updatePlaybackRate","targetAnimations","_this$effect2","getAnimations","markTarget","unmarkTarget","index","splice","tick","isAnimationFrame","fireEvents","Infinity","persist","ERROR_MSG_METHOD_NOT_IMPLEMENTED","addEventListener","listener","options","removeEventListener","dispatchEvent","commitStyles","_this$effect3","_this$effect4","ignoreLimit","baseTime","_this4","onfinish","onframe","NEWTON_ITERATIONS","NEWTON_MIN_SLOPE","SUBDIVISION_PRECISION","SUBDIVISION_MAX_ITERATIONS","kSplineTableSize","kSampleStepSize","float32ArraySupported","Float32Array","A","aA1","aA2","B","C","calcBezier","aT","getSlope","binarySubdivide","aX","aA","aB","mX1","mX2","currentX","currentT","i","Math","abs","newtonRaphsonIterate","aGuessT","currentSlope","bezier","mY1","mY2","t","sampleValues","Array","getTForX","intervalStart","currentSample","lastSample","dist","guessForT","initialSlope","convertToDash","str","replace","letter","toLowerCase","charAt","substring","Quad","pow","Cubic","Quart","Quint","Expo","Sine","cos","PI","Circ","sqrt","Back","Bounce","pow2","b","Elastic","params","arguments","length","_params","_slicedToArray","_params$","amplitude","_params$2","period","a","clamp","p","sin","asin","Spring","duration","_params2","_params2$","mass","_params2$2","stiffness","_params2$3","damping","_params2$4","velocity","w0","zeta","wd","progress","exp","Steps","_ref","_ref2","_ref2$","steps","trunc","ceil","floor","Bezier","_params3","easein","EaseOut","ease","EaseInOut","EaseOutIn","EasingFunctions","stepStart","stepEnd","linear","out","spring","complexEasingSyntax","trim","getEasingFunction","x","Start","Middle","End","step","count","pos","stepSize","numberString","cubicBezierRe","RegExp","step1Re","step2Re","parseEasingFunction","normalizedEasing","cubicData","exec","apply","_toConsumableArray","slice","map","step1Data","step2Data","start","middle","end","calculateActiveDuration","timing","repeatedDuration","_timing$iterations","iterations","PhaseNone","PhaseBefore","PhaseAfter","PhaseActive","calculatePhase","activeDuration","localTime","min","delay","endDelay","calculateActiveTime","fillMode","phase","calculateOverallProgress","iterationDuration","activeTime","iterationStart","overallProgress","calculateSimpleIterationProgress","simpleIterationProgress","calculateCurrentIteration","calculateDirectedProgress","playbackDirection","currentIteration","currentDirection","d","calculateIterationProgress","fill","directedProgress","direction","easingFunction","convertEffectInput","keyframes","propertySpecificKeyframeGroups","makePropertySpecificKeyframeGroups","interpolations","makeInterpolations","fraction","filter","interpolation","applyFrom","applyTo","forEach","offsetFraction","startOffset","localDuration","endOffset","scaledLocalTime","setAttribute","property","isNotReservedWord","member","propertySpecificKeyframe","offset","computedOffset","easing","groupName","startIndex","endIndex","propertyInterpolation","sort","leftInterpolation","rightInterpolation","InterpolationFactory","from","to","convertToString","f","interpolated","interpolate","isNumber","left","right","metadata","propertyMetadataCache","syntax","propertyHandler","runtime","styleValueRegistry","getPropertySyntax","parser","usedLeft","usedRight","interpolationArgs","mixer","interp","bool","isArray","fromLength","toLength","max","r","AnimationEffectTiming","_easing","convertToArrayForm","effectInput","normalizedEffectInput","values","numKeyframes","keyframe","composite","normalizeKeyframes","originalKeyframe","memberValue","isFinite","everyFrameHasOffset","previousOffset","isNil","TypeError","spaceKeyframes","_keyframes$offset","_keyframes","_keyframes$0$offset","previousIndex","j","fills","split","directions","makeTiming","timingInput","forGroup","Object","keys","normalizeTimingInput","_timingInput","numericTimingToObject","KeyframeEffect","iterationComposite","normalizedKeyframes","Proxy","globalThis","computedTiming","prop","applyInterpolations","timeFraction","getKeyframes","setKeyframes","getTiming","updateTiming","name","compareAnimations","leftAnimation","rightAnimation","AnimationTimeline","document","ticking","timelineTicking","hasRestartedThisFrame","inTick","pendingEffects","rafId","rafCallbacks","webAnimationsNextTick","discardAnimations","requestAnimationFrame","processRafCallbacks","processing","entry","applyPendingEffects","isTicking","restartWebAnimationsNextTick","inactiveAnimations","destroy","defaultView","cancelAnimationFrame","frameId","updateAnimationsPromises","rAF","updatingAnimations","_this$pendingEffects","_this$pendingEffects2","newPendingClears","newPendingEffects","activeAnimations","_needsTick","alive","EasingFunction"],"mappings":"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"}